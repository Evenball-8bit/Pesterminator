;**************************************************************************
;
;	 CONTROL DATA INFORMATION FOR THE GAME STATE MACHINE.
;
;THIS ASSEMBLY CONTAINS THE SOUNDS, POINT TABLES, MUSIC, AND CONTROL
;DATA TABLES FOR THE NES UNIVERSAL QUEST GAME STATE MACHINE.
;
;**************************************************************************

	YCENTER = -46		;Y CENTERING VALUE FOR VISUAL SCREEN
	SPCNTR = 30		;SPRITE ADJUSTMENT AS A RESULT OF YCENTER.
				;SHOULD BE 16 LESS THAN YCENTER BUT BE +

	STARTHEALTH = 20	;AMOUNT OF HEALTH (1-20) GIVEN TO NEW HEROS.  ALSO
			;OK TO GO OVER 20 BUT IT WON'T DISPLAY ON BAR AS
			;MORE THAN 20

;THESE EQUATES CONTROL SINGLE CHARACTER ERASES AND PAINTS.

	ERASECHAR = $FA	;CHAR TO USE TO ERASE THINGS WITH
	LIFECHAR = $F7	;LIFE FORCE CHAR.  USED WHEN BACKGROUND LIFE FORCE

;THIS SPRITE DEFFINITION IS USED WHEN AN ENEMY HOLDS HEALTH.

HEALTHPRIZE: .byte  10,$01,$01 ;BASE+$80 IF 1 BY 2, WIDTH, HEIGHT
.byte  $F7,$00

	PERMADELAY = 1*15 ;DELAY IN 1/15 SECOND INTERVALS BETWEEN PERMA LAUNCH
			;ENEMIES FROM SAME TARGET.  MINIMUM 1*15, MAX 17*15

;THIS TABLE OF CHAR VALUES MUST HAVE THE VALUES TO USE TO PAINT A LIFE FORCE
;BAR.  THE FIRST MUST BE AN EMPTY CHAR.  THE SECOND IS 1/2 SOLID ON THE
;BOTTOM SIDE. THE LAST IS FULL SOLID.  SOLID DOESN'T MEAN IT HAS TO BE
;VISUALLY SO.  THE LIFE FORCE BAR IS VERTICAL AND HEARTS CAN BE USED
;AS WELL AS SOLID BLOCKS.  FOR INSTANCE, YOU COULD HAVE THE FOLLOWING
;(ASSUME THE C CHARS ARE HEARTS:
;
;FIRST =
;
;
;SECOND =
;	  C
;
;THIRD  = C
;	  C
;
;THESE WOULD STACK TOGETHER AS A COLUMN OF DROPPING HEARTS.
;
LIFETAB:	.byte 	$FA,$F6,$F7

;THIS SPRITE DEFFINITION IS USED TO MAKE THE LIFE FORCE (HEALTH) BAR ON
;THE UPPER RIGHT OF SCREEN.  IT IS ASSIGNED THE HIGHEST SPRITE NUMBERS
;SO THAT IT HAS THE LOWEST VISUAL PRIORITY.

	LIFEBASE = 59	;BASE SPRITE FOR THE LIFE BAR

	BARX = 200	;LOCATION OF THE LIFE BAR ON X
	BARY = 20-SPCNTR	;LOCATION OF THE LIFE BAR ON Y
	
LIFEBAR: .byte  LIFEBASE,$05,$01 ;BASE+$80 IF 1 BY 2, WIDTH, HEIGHT
.byte  $FA,$00,$FA,$00,$FA,$00,$FA,$00,$FA,$00

;THIS TABLE IS USED TO GIVE A HORIZONTAL SWERVING MOVEMENT TO ENEMIES.
;IT HAS 16 ENTRIES.  EACH ENTRY IS APPLIED TO THE ENEMIES Y MOMENTUM
;4 TIMES.  THE FREQUENCY OF APPLICATION IS 1/15 SECOND.

SWERVING:
	.byte 	0,2,4,4,8,4,4,2
	.byte 	0,-2,-4,-4,-8,-4,-4,-2

;THIS TABLE SIMULATES A BIG HOP.  THERE ARE 16 ENTRIES.  THEY ARE TO BE
;APPLIED TO THE Y COMPONENT.

HOPPING:	  
	.byte 	-8,-4,-4,-4,-2,-2,-1,0,8,4,4,4,2,2,1,0

;THIS TABLE IS USED TO GIVE A CIRCULAR MOTION TO ENEMIES.  FORMAT: X,Y
;ITS ALSO SHARED BY SPECIAL GUNS AND NEEDS THE END NULL FOR THAT SHARING.

CIRCLING:	.byte 	1,-20
		.byte 	8,-16
		.byte 	12,-12
		.byte 	16,-8
		.byte 	20,-1
		.byte 	 16,8
		.byte 	 12,12
		.byte 	 8,16
		.byte 	-1,20
		.byte 	-8,16
		.byte 	-12,12
		.byte 	-16,8
	 	.byte 	-20,1
		.byte 	-16,-8
		.byte 	-12,-12
		.byte 	-8,-16
		.byte 	0

;THIS ANIMATION IS USED FOR BACKGROUND EXPLOSIONS SUCH AS THE BOMB COMMAND
;IT MUST BE AVAILABLE IN ALL SPRITE SETS. IT IS CURRENTLY ASSUMED 2 BY 2
;AND VISUAL ADJUSTMENTS ARE MADE ACCORDINGLY.

	EXPLODES = BOOTHERO

;THIS SPRITE IS USED WITH THE FIRE WALL GUN COMMAND (34).

	WALLSHOT = BULLET1

;THIS ANIMATION IS USED WHEN AN ENEMY DIES

	ENMYDIE = PSTPOOF

;THIS IS THE ANIMATION TO USE WHEN THE HERO DIES.

	DEAD_HERO = HERODIE
	DEAD_H2 = HLIPOOF

;THESE ANIMATIONS ARE USED WITH THE ELEVATOR AND DOOR COMMANDS.  THE DOORS
;SHOULD BE DRAWN IN THE BACKGROUND ALREADY CLOSED.

	ELEVTIME = 2		;SET THIS TO 1/15 SECOND TICKS TO PAUSE
				;BETWEEN ANIMATION FRAMES.
				;TO OPEN OR CLOSE THE DOORS

;THIS TABLE IS USED TO SHUT THE DOORS.  IT IS A LIST OF POINTERS TO
;BLOCKS OF 4 BY 4.  THE LIST SHOULD END WITH A NULL.  A DELAY BETWEEN
;ANIMATIONS OF THAT SPECIFIED IN ELEVTIME WILL BE MADE.

SHUTDOOR:
.word 	DOOR2
.word 	DOOR1
.word 	0

OPENDOOR:
.word 	DOOR2
.word 	DOOR3
.word 	0

DOOR1:
.byte  $6D,$A5,$41,$58
.byte  $6D,$A5,$41,$58
.byte  $6D,$A5,$41,$58
.byte  $6D,$A5,$41,$58

DOOR2:
.byte  $6D,$9F,$7F,$58
.byte  $6D,$9F,$7F,$58
.byte  $6D,$9F,$7F,$58
.byte  $6D,$9F,$7F,$58

DOOR3:
.byte  $BE,$40,$40,$BF
.byte  $BE,$40,$40,$BF
.byte  $BE,$40,$40,$BF
.byte  $BE,$40,$40,$BF

;THESE ARE THE SECONDARY OPENING DOOR ANIMATIONS SUPPORTED BY THE DOOR
;COMMANDS.

SHUTDR2:
.word 	DOOR4X
.word 	DOOR3X
.word 	DOOR2X
.word 	DOOR1X
.word 	0

OPENDR2:
.word 	DOOR2X
.word 	DOOR3X
.word 	DOOR4X
.word 	DOOR5X
.word 	0

DOOR1X:
.byte  $06,$07,$08
.byte  $09,$0A,$0B	;FULLY CLOSED DOORS
.byte  $09,$0A,$0B
.byte  $0C,$0D,$0E

DOOR2X:
.byte  $09,$0A,$0B
.byte  $09,$0A,$0B	;1/4 OPEN
.byte  $0C,$0D,$0E
.byte  $CA,$40,$CB

DOOR3X:
.byte  $09,$0A,$0B
.byte  $0C,$0D,$0E	;1/2 OPEN
.byte  $CA,$40,$CB
.byte  $CA,$40,$CB

DOOR4X:
.byte  $0C,$0D,$0E
.byte  $CA,$40,$CB	;3/4 OPEN
.byte  $CA,$40,$CB
.byte  $CA,$40,$CB

DOOR5X:
.byte  $CA,$40,$CB
.byte  $CA,$40,$CB	;FULLY OPEN
.byte  $CA,$40,$CB
.byte  $CA,$40,$CB

;THIS IS THE SONG PLAYED WHEN A FREE HERO IS AWARDED.

FREEHERO:
		.byte 	VOICE1,HIGH_PIANO
		.byte 	C+N8,G+N8,HC+N8,HC+N8,C+N8,C+N8,G+N8,HC+N8,ENDPLAY

;THIS IS THE SOUND USED WHEN AN ENEMY IS KILLED.

EXPLODE:	.byte 	VOICE3,LOADALL,$04,$F9,$3A,$35
		.byte 	PAUSE+N16,ENDPLAY

;THIS IS THE SOUND MADE WHEN THE MACHINE IS PAUSED.

DING:		.byte 	VOICE2,PIANO
		.byte 	E+N16,C+N16,E+N16,G+N16,ENDPLAY

;PRIZE_SND IS USED TO MAKE A SOUND WHEN A PRIZE OR HEALTH HIDDEN IN ENEMY
;IS AWARDED.

PRIZE_SND:
	.byte 	VOICE3
	.byte 	LOADALL,$04,$00,$84,$08,PAUSE+N16
	.byte 	LOADALL,$04,$00,$82,$08,PAUSE+N16
	.byte 	ENDPLAY

;THIS THE SOUND MADE FOR ALL EXPLODING ENEMY TYPES.

BOOM:
.byte 	VOICE3,LOADALL,$0F,$F4,$4E,$0F
.byte 	PAUSE+N2,ENDPLAY

;THIS IS THE SONG (OR NOISE) PLAYED WHEN A HERO DIES.

HEROEND:
	.byte 	VOICE0,HIGH_PIANO,PAUSE+N4,HC+N16,B+N16,Ax+N16,G+N16,F+N16
	.byte 	E+N16,D+N16,C+N4,ENDPLAY

;THIS NOISE IS USED WHEN THE HERO SHOOTS AN ENEMY.

ENEMYTHUD:
.byte 	VOICE3,LOADALL,$88,$40,$8A,$0D
.byte 	PAUSE+N8,ENDPLAY

;THIS IS THE NOISE THE HERO MAKES WHEN HE JUMPS.

	HEROJUMP = NOSOUND

;THIS NOISE IS MADE WHEN AN ENEMY COLLIDES WITH THE HERO OR SHOOTS HIM.

HEROHITS:
.byte 	VOICE3,LOADALL,$88,$40,$8A,$0D
.byte 	PAUSE+N8,ENDPLAY

;************************************************************************
;THIS TABLE CONTAINS THE ENEMY (OR STAND ALONE PRIZE) IMAGES THAT CAN BE
;USED WITH THE LAUNCH ENEMY COMMANDS.  THE ENEMY IS THE NAME OF THE DRAWING
;PROGRAM SPRITE ANIMATION.  THE FIRST CAN THEN BE REFERENCED AS #0, THE SECOND
;AS #1, ETC.  REMEMBER THAT EACH ENEMY TYPE CANNOT NECESSARILY BE USED
;IN EACH WORLD BECAUSE IT MIGHT BELONG TO A DIFFERENT VIDEO BANK (SET).
;
;**********************************************************************

ENEMYTAB:			;ENEMY SPRITE ASSIGNMENT TABLE

	.word 	KEYCARD		;0.  KEYCARD FOR MOONBASE
	.word 	GNATC		;1.  SWARM OF BUGS FOR SWAMP
        .word     FALLBUG1        ;2.  FALLING BUG FOR SWAMP
        .word     FALLBUG2        ;3.  FALLING BUG FOR SWAMP
	.word 	BSPIDER		;4.  BIG SPIDER FOR HOUSE1
	.word 	FANT		;5.  FLOOR ANT FOR HOUSE1
	.word 	CONVEY		;6.  CONVEYOR BELT DEATH ENEMY
	.word 	BEETLE		;7.  BEETLE FOR WAREHOUSE1
	.word 	AFBEE		;8.  AFRICAN BEE FOR WAREHOUSE1
	.word 	MOSQ		;9.  MOSQUITO FOR SWAMP
	.word 	MOSQII		;10. MOSQUITO II FOR SWAMP
	.word 	FLYI		;11. FLY I FOR SWAMP
	.word 	FLYII		;12. FLY II FOR SWAMP
	.word 	FLYIII		;13. FLY III FOR SWAMP
	.word 	GNAT		;14. GNAT FOR SWAMP
	.word 	GNATII		;15. GNAT II FOR SWAMP
	.word 	MONSTI		;16. MONSTI FOR MOON
	.word 	MONSTII		;17. MONSTII FOR MOON
	.word 	BLOBI		;18. BLOB I FOR MOON
	.word     PLATFORM        ;19. PLATFORM FOR WAREHOUSE & MOON
        .word 	FLEA            ;20. FLEA FOR SWAMP
        .word 	MOTH            ;21. FROM HOUSE1
        .word 	ANT             ;22. FROM PEST1
        .word 	FSPIDER         ;23. FROM HOUSE1
        .word 	BBEE            ;24. FOR HOUSE1
	.word 	FANT            ;25. FROM PEST1  
	.word 	SPIDER          ;26. FROM PEST1
        .word 	MOUSE           ;27. FOR HOUSE1
        .word 	ROACH           ;28. FROM PEST1
        .word 	RAT             ;29. FOR HOUSE1
        .word 	BSPIDER         ;30. FROM PEST1  
        .word 	RAT1            ;31. FROM PEST1 
        .word     CROACH          ;32. FROM PEST2
        .word 	BEETLE          ;33. FROM PEST2
        .word 	GBUG            ;34. FOR WARE1 
        .word 	MEDFLY          ;35. FOR WARE1
        .word 	FALLBUG3	;36. FALLING FLYII
        .word 	WASP            ;37. FOR WARE1  
        .word 	SCORP           ;38. FOR WARE1
        .word 	AFBEE           ;39. FROM PEST2
        .word 	VBEE            ;40. FROM PEST2  
        .word 	WORM            ;41. FOR WARE1
        .word 	ROACH           ;42. FROM PEST4
 	.word     BOOTHERO	;43. FOR HOTEL
        .word 	BBEETLE         ;44. FOR HOTEL
        .word 	BGBUG           ;45. FROM PEST4 
        .word 	FBRAT           ;46. FROM PEST4
        .word 	BSCORP          ;47. FROM PEST4
        .word 	BMEDFLY         ;48. FROM PEST4
        .word 	BAFBEE          ;49. FROM PEST4
        .word 	VBEE            ;50. FROM PEST4	  
        .word 	BMOSQ           ;51. FROM PEST4
        .word 	MOSH            ;52. FROM PEST4
        .word 	FLEA            ;53. FROM PEST4
        .word 	BBUG            ;54. FROM PEST4
        .word 	MOONBEE		;55. MOON BEE FROM PEST7 FOR MOONBASE
        .word 	SQUID           ;56. FROM PEST5
        .word 	SHARK           ;57. FROM PEST5
        .word 	JFISH           ;58. FROM PEST5
        .word 	SMFSH           ;59. FROM PEST5	LITTLE GREEN FISH
        .word 	FISH            ;60. FROM PEST5
        .word 	MUTFSH1         ;61. FROM PEST5
        .word 	MUTFSH2         ;62. FROM PEST5 
        .word 	MONSTI          ;63. FROM PEST6
        .word 	MONSTII         ;64. FROM PEST6 
        .word 	MONST3		;65. FROM PEST6
        .word 	MONST4          ;66. FROM PEST6
        .word 	MONST5          ;67. FROM PEST6
        .word 	NEST            ;68. FROM PEST7
        .word     FLOT            ;69. FROM PEST7
        .word 	CRAW            ;70. FROM PEST7
	.word     BOOTHERO	;71. INVISIBLE HERO - SHOOTS DROPS
	.word     FLY             ;72. FLY FOR HOUSE1
        .word     DRAGFY          ;73. FOR HOUSE1
	.word 	CED		;74. CENT FOR WARE
	.word 	HIVE		;75. BEE HIVE
        .word     CASE            ;76. CASE FOR WAREHOUSE
        .word     HOPW	        ;77. GRASSHOPPER IN WAREHOUSE	-JGT
	.word     DEATH1          ;78. DEATH CAN -HIT AND REMOVE
	.word     DEATH2          ;79. DEATH CAN -HIT AND REMOVE
        .word     KRAT            ;80. KRAT FOR MOONBASE
	.word 	GBUGROLL	;81. ROLLED PILLBUG FOR WAREHOUSE
        .word 	SHARK           ;82. FROM PEST5
        .word 	KBASE           ;83. SHOOTING BASE ON MOON
	      
 ;THIS TABLE CONTAINS THE SOUND EACH ENEMY MAKES WHEN HE SHOOTS.  PUT
;0  HERE IF THERE IS NONE OR IF THE ENEMY DOES NOT SHOOT.  THIS SOUND
;IS ALSO USED WHEN NON-SHOOTING ENEMIES ARE ENABLED TO MAKE SOUNDS
;IN BULLETTYPE BUT THERE IS NO BULLET DEFFINITION IN BULLETLIST.

ENEMYSND:
	.word 	0  		;0.  KEYCARD FOR MOONBASE
	.word 	0		;1.  SWARM OF BUGS FOR SWAMP
        .word     0	        ;2.  FALLING BUG FOR SWAMP
        .word     0	        ;3.  FALLING BUG FOR SWAMP
	.word 	SQUEEK		;4.  BIG SPIDER FOR HOUSE1
	.word 	0		;5.  FLOOR ANT FOR HOUSE1
	.word 	0		;6.  CONVEYOR BELT DEATH ENEMY
	.word 	SQUEEK		;7.  BEETLE FOR WAREHOUSE1
	.word 	BEEBUZZ		;8.  AFRICAN BEE FOR WAREHOUSE1
	.word 	0       	;9.  MOSQUITO FOR SWAMP
	.word 	0		;10. MOSQUITO II FOR SWAMP
	.word 	0		;11. FLY I FOR SWAMP
	.word 	0		;12. FLY II FOR SWAMP
	.word 	0		;13. FLY III FOR SWAMP
	.word 	0		;14. GNAT FOR SWAMP
	.word 	0		;15. GNAT II FOR SWAMP
	.word 	0		;16. MONSTI FOR MOON
	.word 	ENMYSHOT	;17. MONSTII FOR MOON
	.word 	SQUEEK		;18. BLOB I FOR MOON
        .word 	0               ;19. CRAW FROM PEST7
        .word     0               ;20. PLATFORM FOR MOON
        .word 	0               ;21. MOTH FOR HOUSE2
        .word 	0               ;22. ANT FOR HOUSE2
        .word 	0               ;23. FSPIDER FOR HOUSE2
        .word 	0               ;24. BBEE FROM PEST1
	.word 	0               ;25. FANT FROM PEST1  
	.word 	0               ;26. SPIDER FROM PEST1
        .word 	SQUEEK          ;27. MOUSE FROM PEST1
        .word 	0               ;28. ROACH FROM PEST1
        .word 	0               ;29. RAT FROM PEST1  
        .word 	0               ;30. BSPIDER FROM PEST1
        .word 	0               ;31. RAT1 FROM PEST1
        .word     0               ;32. CROACH FROM PEST2
        .word 	0               ;33. BEETLE FROM PEST2
        .word 	0               ;34. GBUG FROM PEST2
        .word 	0               ;35. MEDFLY FROM PEST2
        .word 	SQUEEK		;36. FALLING FLYII
        .word 	BEEBUZZ         ;37. WASP FROM PEST2  
        .word 	0               ;38. SCORP FROM PEST2
        .word 	0               ;39. AFBEE FROM PEST2
        .word 	0               ;40. BEE FROM PEST2  
        .word 	0               ;41. WORM FROM PEST2
        .word 	0               ;42. ROACH FROM PEST4
 	.word     SQUEEK          ;43. MOUSE FROM PEST4
        .word 	0               ;44. BEETLE FROM PEST4
        .word 	0               ;45. GBUG FROM PEST4 
        .word 	0               ;46. FBRAT FROM PEST4
        .word 	0               ;47. SCORP FROM PEST4
        .word 	0               ;48. MEDFLY FROM PEST4
        .word 	0               ;49. AFBEE FROM PEST4  
        .word 	0               ;50. BEE FROM PEST4
        .word 	0               ;51. MOSQ FROM PEST4
        .word 	0               ;52. MOSH FROM PEST4
        .word 	0               ;53. FLEA FROM PEST4
        .word 	0               ;54. FROM PEST4
        .word 	0		;55. MOON BEE FROM PEST7 FOR MOONBASE
        .word 	0               ;56. SQUID FROM PEST5	SQUID
        .word 	0               ;57. SHARK FROM PEST5	SHARK
        .word 	0               ;58. JFISH FROM PEST5	JELLY FISH?
        .word 	0               ;59. SMFSH FROM PEST5	LITTLE GREEN FISH
        .word 	0               ;60. FISH FROM PEST5
        .word 	0               ;61. MUTFSH1 FROM PEST5
        .word 	0               ;62. MUTFSH2 FROM PEST5 
        .word 	0               ;63. MONST1 FROM PEST6
        .word 	0               ;64. MONST2 FROM PEST6 
        .word 	0		;65. MONST3 FROM PEST6
        .word 	0               ;66. MONST4 FROM PEST6
        .word 	BALLSND   	;67. MONST5 FROM PEST6
        .word 	0               ;68. NEST FROM PEST7
        .word     0               ;69. FLOT FROM PEST7
        .word 	0               ;70. CRAW FROM PEST7
        .word     0	;DRIPACID        ;71. INVISIBLE HERO - SHOOTS DROPS
	.word     0               ;72. FLY FOR HOUSE1
	.word     0               ;73. DRAGFY FOR HOUSE1
	.word 	BEEBUZZ		;74. CENT FOR WARE
	.word 	BEEBUZZ		;75. BEE HIVE
        .word     0               ;76. CASE FOR WAREHOUSE
        .word     0	        ;77. GRASSHOPPER IN WAREHOUSE	-JGT
	.word     0               ;78. DEATH1
	.word     0               ;79. DEATH2
  	.word     0	        ;80. KRAT FOR MOONSTATION
	.word 	0		;81. ROLLED PILLBUG FOR WAREHOUSE
        .word 	0               ;82. SHARK FROM PEST5	SHARK
        .word 	BALLSND         ;83. SHOOTING BASE ON MOON

;THESE ARE THE SOUNDS IN ENEMYSND

DRIPACID:
	.byte 	VOICE2,LOADALL,$A0,$8A,$00,$52,PAUSE+N2,ENDPLAY

HOVERBUL:
	.byte 	VOICE1,LOADALL,$0F,$92,$77,$90,PAUSE+N2,ENDPLAY

DROPBULT:
	.byte 	VOICE1,LOADALL,$BD,$CE,$00,$A2,PAUSE+N2,ENDPLAY

POWERSND:
	.byte 	VOICE1,LOADALL,$BD,$8C,$CD,$D3,PAUSE+N2,ENDPLAY

BALLSND:
	.byte 	VOICE1,LOADALL,$0D,$8E,$EC,$B7,PAUSE+N2,ENDPLAY

;THIS SOUND CHANGED FOR PEST WAS $0F,$8D,$2B,$68

SQUEEK:
	.byte 	VOICE1,LOADALL,$1F,$8D,$2B,$88,PAUSE+N2,ENDPLAY

TURRETSND:
	.byte 	VOICE1,LOADALL,$9C,$8A,$1E,$89,PAUSE+N2,ENDPLAY

ENMYSHOT:
.byte 	VOICE3,LOADALL,$0A,$C9,$08,$0A
.byte 	PAUSE+N4,ENDPLAY

BEEBUZZ:
.byte 	VOICE1,LOADALL,$5F,$D7,$41,$B4
.byte 	PAUSE+N4,ENDPLAY

;THIS THE SOUND MADE FOR ALL EXPLODING ENEMY TYPES.

BAZOSND:
.byte 	VOICE3,LOADALL,$0A,$19,$6E,$0A
.byte 	PAUSE+N2,ENDPLAY

;THIS TABLE DEFINES SPECIAL ENEMY FEATURES THAT ALLOW THE NORMAL LOGIC TO
;BE OVERRIDDEN.  FOR EACH ENEMY IN ENEMYTAB THERE IS A BYTE
;HERE WITH BIT MEANINGS:

;BITS 00000011B = THESE 2 BITS SPECIFY FROM 0 TO 3 ENEMIES THAT THIS
;		ENEMY MAY LAUNCH FROM ITSELF.  IF THE BITS ARE 0, THIS
;		ENEMY DOES NOT LAUNCH OTHER ENEMIES.  IF THE BITS ARE 01
;		THEN THIS ENEMY CAN LAUNCH 1 ENEMY TYPE.  THE ENEMY DIRECTLY
;		BELOW THIS ONE IN THE ENEMYTAB WILL BE USED.  BIT VALUES
;		ADDING UP TO 2 OR 3 WILL ALLOW 2 OR 3 DIFFERENT ENEMY TYPES
;		DIRECTLY FOLLOWING THIS ONE FROM ENEMYTAB TO BE LAUNCHED.
;		IT LAUNCHES WHEN THE SLOTS ARE AVAILABLE IN WAVES EVERY
;		4 SECONDS.
;
;BIT 00000100B = DONT REMOVE ENEMY.  WHEN SET, THE ENEMY WILL NOT BE REMOVED
;		IF IT GOES TO THE SCREEN BORDER.  ALSO, IT HAS NO TERITORY
;		LIMITS.  THIS IS FOR A MAIN ENEMY YOU DON'T WANT POPPING
;		IN AND OUT.  TYPICALLY YOU SHOULD LAUNCH THIS ONE WITH
;		THE FORCED LAUNCH.  BE CAREFUL WITH THIS BIT.  IF THE
;		ENEMY CANNOT KEEP UP WITH THE HERO, HE WILL SIT AGAINST
;		A SCREEN SIDE AS THE SCREEN SCROLLS.  HE MUST NOT SCROLL
;		INTO SOLID DATA IF HE HONORS SOLID!
;
;********** THESE 2 BITS MUST REMAIN HERE FOR COMMAND $37 *****************
;
;BIT 00001000B = ENEMY IS A MUST DEFEAT ENEMY FOR USE WITH THE DOOR COMMAND
;		THAT CHECKS FOR ALL ENEMIES HAVING BEEN DEFEATED (COMMAND 0F).
;		DON'T MAKE ANY PERMA LAUNCH MUST DEFEAT ENEMIES!
;	        THESE ENEMIES MAY ALSO BE PRIZES AND NOT NECESSARILY SOMETHING
;		TO FIGHT WITH.
;BIT 00010000B = ENEMY IS A TOUCH FOR PRIZE (OR KEY).  CANNOT BE SHOT
;		AND WHEN TOUCHED THE PRIZE SPECIFIED IN ENEMYPNTS
;		IS AWARDED IMMEDIATLY.  BE SURE TO SET THE ENEMYHITS TO
;		1.  THIS BIT USED TO MAKE
;		IMAGES OF THINGS SUCH AS MONEY WHICH ARE PICKED UP BY 
;		TOUCHING THEM.
;
;BIT 00100000B = COLLISION WITH ENEMY IGNORED UNLESS HERO'S FEET TOUCH
;		IT. (USED IN 3D AREA FOR EVIL DEADLY OIL SLICKS OR
;		 SMALL CREATURES).
;
;BIT 01000000B = ENEMY LAUNCHES AND HEADS IN DIRECTION OF HERO IN A STRAIGHT
;		 LINE ON THE Y AXIS MUCH LIKE A BULLET.  IT WILL CONTINUE
;		 UNTIL OFF SCREEN EVEN IF IT COLLIDES WITH THE HERO.
;		FOR THIS TYPE OF ENEMY, SET THE NO SPEED LIMIT BIT
;		IN ENEMYOPTS AND AVOID SETTING ANY OTHER MOTION BITS
;		INCLUDING GRAVITY.  IF YOU SET THE SOLID BIT, THE ENEMY
;		WILL REVERSE DIRECTION IF HE HITS SOLID.

;BIT 10000000B = ENEMY LAUNCHES AND HEADS IN DIRECTION OF HERO IN A STRAIGHT
;		 LINE ON THE X AXIS MUCH LIKE A BULLET.  IT WILL CONTINUE
;		 UNTIL OFF SCREEN EVEN IF IT COLLIDES WITH THE HERO.
;		FOR THIS TYPE OF ENEMY, SET THE NO SPEED LIMIT BIT
;		IN ENEMYOPTS AND AVOID SETTING ANY OTHER MOTION BITS
;		INCLUDING GRAVITY.  IF YOU SET THE SOLID BIT, THE ENEMY
;		WILL REVERSE DIRECTION IF HE HITS SOLID.

;
;THE EQUATES BELOW DETERMINE HOW FAST THE STRAIGHT LINE ENEMIES WILL
;TRAVEL.

	SLOWSTRAIGHT = 12
	FASTSTRAIGHT = 24
    LAUNCHMASK = %11110000  ; BIT MASK TICK TEST TO LAUNCH ENEMY
          
SPECENEMY:
	.byte 	%00010000	;0.  KEYCARD FOR MOONBASE
	.byte 	%00000000  	;1.  SWARM OF BUGS FOR SWAMP
        .byte  	%00000000      ;2.  FALLING BUG FOR SWAMP
        .byte 	%00000000      ;3.  FALLING BUG FOR SWAMP
	.byte 	%00000000	;4.  BIG SPIDER FOR HOUSE1
	.byte 	%00000000	;5.  FLOOR ANT FOR HOUSE1
	.byte 	%00000000	;6.  CONVEYOR BELT DEATH ENEMY
	.byte 	%00000000	;7.  BEETLE FOR WAREHOUSE1
	.byte 	%00000000	;8.  AFRICAN BEE FOR WAREHOUSE1
	.byte 	%00000000	;9.  MOSQUITO FOR SWAMP
	.byte 	%00000000	;10. MOSQUITO II FOR SWAMP
	.byte 	%00000000	;11. FLY I FOR SWAMP
	.byte 	%00000000	;12. FLY II FOR SWAMP
	.byte 	%00000000	;13. FLY III FOR SWAMP
	.byte 	%00000000	;14. GNAT FOR SWAMP
	.byte 	%00000000	;15. GNAT II FOR SWAMP
	.byte 	%00000000	;16. MONSTI FOR MOON
	.byte 	%00000000	;17. MONSTII FOR MOON
	.byte 	%00000000	;18. BLOB I FOR MOON
        .byte      %01000000	;19. PLATFORM
        .byte 	%00000000      ;20. FLEA FROM SWAMP
        .byte 	%00000000      ;21. MOTH FROM PEST1
        .byte 	%00000000      ;22. ANT FROM PEST1
        .byte 	%00000000      ;23. FSPIDER FROM PEST1
        .byte 	%00000000      ;24. BBEE FOR HOUSE1
	.byte 	%00000000      ;25. FANT FROM PEST1  
	.byte 	%01000000      ;26. SPIDER FROM PEST1
        .byte 	%00000000      ;27. MOUSE FOR HOUSE1
        .byte 	%00000000      ;28. ROACH FROM PEST1 SAME AS MOUSE -MEMORY
        .byte 	%00000000      ;29. RAT FOR HOUSE1  
        .byte 	%00000000      ;30. BSPIDER FROM PEST1  
        .byte 	%00000000      ;31. RAT1 FROM PEST1 
        .byte      %00000000      ;32. CROACH FROM PEST2
        .byte 	%00000000      ;33. BEETLE FROM PEST2
        .byte 	%00000000      ;34. GBUG FROM PEST2  
        .byte 	%00000000      ;35. MEDFLY FROM PEST2
        .byte 	%00000000      ;36. FALLING BUG FOR SWAMP
        .byte 	%00000000      ;37. WASP FROM PEST2  
        .byte 	%00000000      ;38. SCORP FROM PEST2
        .byte 	%00000000      ;39. AFBEE FROM PEST2
        .byte 	%00000000      ;40. BEE FROM PEST2  
        .byte 	%00000000      ;41. WORM FROM PEST2
        .byte 	%00000000      ;42. ROACH FROM PEST4
 	.byte      %00000000      ;43. BMOUSE FROM PEST4
        .byte 	%00000000      ;44. BBEETLE FROM PEST4
        .byte 	%00000000      ;45. BGBUG FROM PEST4 
        .byte 	%00000000      ;46. FBRAT FROM PEST4
        .byte 	%00000000      ;47. BSCORP FROM PEST4
        .byte 	%00000000      ;48. BMEDFLY FROM PEST4
        .byte 	%00000000      ;49. BAFBEE FROM PEST4  
        .byte 	%00000000      ;50. VBEE FROM PEST4
        .byte 	%00000000      ;51. MOSQ FROM PEST4
        .byte 	%00000000      ;52. MOSH FROM PEST4
        .byte 	%00000000      ;53. FLEA FROM PEST4
        .byte 	%00000000      ;54. FROM PEST4
        .byte 	%00000000      ;55. MOON BEE FROM PEST7 FOR MOONBASE
        .byte 	%00000000      ;56. SQUID FROM PEST5	SQUID
        .byte 	%00000000      ;57. SHARK FROM PEST5	SHARK
        .byte 	%00000000      ;58. JFISH FROM PEST5	JELLY FISH?
        .byte 	%00000000      ;59. SMFSH FROM PEST5	LITTLE GREEN FISH
        .byte 	%00000000      ;60. FISH FROM PEST5
        .byte 	%00000000      ;61. MUTFSH1 FROM PEST5
        .byte 	%00000000      ;62. MUTFSH2 FROM PEST5 
        .byte 	%00000000      ;63. MONSTI FROM PEST6
        .byte 	%00000000      ;64. MONSTII FROM PEST6 
        .byte 	%00000000      ;65. MONST3 FROM PEST6
        .byte 	%00000000      ;66. MONST4 FROM PEST6
        .byte 	%00000000   	;67. MONST5 FROM PEST6
        .byte 	%00000010      ;68. NEST FROM PEST7
        .byte      %00000000      ;69. FLOT FROM PEST7
        .byte      %00000000      ;70. CRAW FROM PEST7
        .byte      %00000000	;71. INVISIBLE HERO - SHOOTS DROPS
	.byte      %00000000      ;72. FLY FOR HOUSE1
        .byte      %00000000      ;73. DRAGFY FOR HOUSE1
	.byte 	%00000000	;74. CENT FOR WARE
	.byte 	%00000000	;75. BEE HIVE
        .byte      %10000000      ;76. CASE FOR WAREHOUSE
        .byte      %00000000      ;77. GRASSHOPPER IN WAREHOUSE	-JGT 
	.byte      %00000000      ;78. DEATH1
	.byte      %00000000      ;79. DEATH2
	.byte      %00000000      ;80. KRAT
	.byte 	%00000000	;81. ROLLED PILLBUG FOR WAREHOUSE
        .byte 	%00000000      ;82. SHARK FROM PEST5	SHARK
        .byte 	%00000000      ;83. SHOOTING BASE ON MOON

;THIS TABLE DEFINES ASPECTS OF THE ENEMY THAT NEED TO BE KNOWN WHEN
;THE ENEMY IS LAUNCHED OR WHICH APPLY TO GRAVITY OR SPEED IN GENERAL.
;FOR EACH ENEMY IN ENEMYTAB THERE IS A BYTE HERE WITH BIT MEANINGS:

;BIT 00000001B = ENEMY CANNOT PASS THROUGH SOLID CHARACTERS.
;BIT 00000010B = ENEMY ANIMATION ALIGNS HORIZONTALLY TO BACKGROUND EVERY 4.
;		 OTHERWISE IT JUST RUNS.
;BIT 00000100B = ENEMY ANIMATION IS NEVER MIRRORED (IT ALWAYS FACES SAME DIR).
;BIT 00001000B = ENEMY FACES LEFT INSTEAD OF RIGHT
;BIT 00010000B = UNUSED
;BIT 00100000B = ENEMY IS NOT SUBJECT TO SPEED LIMITATION.
;BIT 01000000B = WHILE IN GRAVITY REGION, NO OTHER MOTIONS APPLY TO ENEMY.
;BIT 10000000B = ENEMY RESPONDS TO GRAVITY.

ENEMYOPTS:
	.byte 	%00000100	;0.  KEYCARD FOR MOONBASE
	.byte 	%00100000	;1.  SWARM OF BUGS FOR SWAMP
        .byte  	%10100100	;2.  FALLING BUG FOR SWAMP
        .byte 	%10100100	;3.  FALLING BUG FOR SWAMP
	.byte 	%10001011	;4.  BIG SPIDER FOR HOUSE1
	.byte 	%10001011	;5.  FLOOR ANT FOR HOUSE1
	.byte 	%00000000	;6.  CONVEYOR BELT DEATH ENEMY
	.byte 	%10001011	;7.  BEETLE FOR WAREHOUSE1
	.byte 	%00001001	;8.  AFRICAN BEE FOR WAREHOUSE1
	.byte 	%00000000	;9.  MOSQUITO FOR SWAMP
	.byte 	%00000000	;10. MOSQUITO II FOR SWAMP
	.byte 	%00000000	;11. FLY I FOR SWAMP
	.byte 	%00001000	;12. FLY II FOR SWAMP
	.byte 	%00000000	;13. FLY III FOR SWAMP
	.byte 	%00000000	;14. GNAT FOR SWAMP
	.byte 	%00000000	;15. GNAT II FOR SWAMP
	.byte 	%10001011	;16. MONSTI FOR MOON
	.byte 	%10001011	;17. MONSTII FOR MOON
	.byte 	%10001011	;18. BLOB I FOR MOON
 	.byte 	%00000101	;19. PLATFORM FOR MOON
        .byte 	%00000000      ;20. FLEA FROM SWAMP
        .byte 	%00001001      ;21. MOTH FOR HOUSE2
        .byte 	%10001011      ;22. ANT FOR HOUSE2
        .byte 	%10001011      ;23. FSPIDER FOR HOUSE2
        .byte 	%00001001      ;24. BBEE FOR HOUSE1
	.byte 	%10001011      ;25. FANT FROM PEST1  
	.byte 	%00001001      ;26. SPIDER FROM PEST1
        .byte 	%10001011      ;27. MOUSE FROM PEST1
        .byte 	%10001011      ;28. ROACH FROM PEST1
        .byte 	%10001011      ;29. RAT FOR HOUSE1  
        .byte 	%10001011      ;30. BSPIDER FROM PEST1  
        .byte 	%10001011      ;31. RAT1 FROM PEST1 
        .byte      %10001011      ;32. CROACH FROM PEST2
        .byte 	%10001011      ;33. BEETLE FROM PEST2
        .byte 	%10001011      ;34. GBUG FROM PEST2  
        .byte 	%00001001      ;35. MEDFLY FROM PEST2
        .byte 	%10100000      ;36. FALLING BUG FOR SWAMP
        .byte 	%00001001      ;37. WASP FROM PEST2  
        .byte 	%10001011      ;38. SCORP FROM PEST2
        .byte 	%00001000      ;39. AFBEE FROM PEST2
        .byte 	%00001000      ;40. BEE FROM PEST2  
        .byte 	%10001011      ;41. WORM FROM PEST2
        .byte 	%10001011      ;42. BROACH FROM PEST4
 	.byte      %10001011      ;43. BMOUSE FOR HOTEL
        .byte 	%10001011      ;44. BBEETLE FROM PEST4
        .byte 	%10001011      ;45. BGBUG FROM PEST4 
        .byte 	%10001011      ;46. FBRAT FROM PEST4
        .byte 	%10001011      ;47. BSCORP FROM PEST4
        .byte 	%00001001      ;48. BMEDFLY FROM PEST4
        .byte 	%00001001      ;49. BAFBEE FROM PEST4  
        .byte 	%00001001      ;50. VBEE FROM PEST4
        .byte 	%00001001      ;51. MOSQ FROM PEST4
        .byte 	%10001001      ;52. MOSH FROM PEST4
        .byte 	%00001001      ;53. FLEA FROM PEST4
        .byte 	%00001011      ;54. BBUG FROM PEST4
        .byte 	%00001001      ;55. MOON BEE FROM PEST7 FOR MOONBASE
        .byte 	%00000001      ;56. SQUID FROM PEST5
        .byte 	%00101001      ;57. SHARK FROM PEST5
        .byte 	%00000001      ;58. JFISH FROM PEST5
        .byte 	%00101001      ;59. SMFSH FROM PEST5 LITTLE GREEN FISH
        .byte 	%00001001      ;60. FISH FROM PEST5
        .byte 	%00001001      ;61. MUTFSH1 FROM PEST5
        .byte 	%00001001      ;62. MUTFSH2 FROM PEST5 
        .byte 	%10001011      ;63. MONST1 FROM PEST6
        .byte 	%10001011      ;64. MONST2 FROM PEST6 
        .byte 	%10001010      ;65. MONST3 FROM PEST6
        .byte 	%00101000      ;66. MONST4 FROM PEST6
        .byte 	%00100000   	;67. MONST5 FROM PEST6
        .byte 	%10001101      ;68. NEST FROM PEST7
        .byte   %00001001      ;69. FLOT FROM PEST7
        .byte 	%10001001      ;70. CRAW FROM PEST7
 	.byte 	%00000000	;71. INVISIBLE HERO - SHOOTS DROPS
	.byte   %00001001      ;72. FLY FOR HOUSE1
        .byte   %10001001      ;73. DRAGFY FOR HOUSE1
	.byte 	%10001011	;74. CENT FOR WARE
	.byte 	%00000101	;75. BEE HIVE
 	.byte 	%00100101	;76. CASE FOR WAREHOUSE	SIDEWAYS PLAT
        .byte   %10001011      ;77. GRASSHOPPER IN WAREHOUSE	-JGT 
	.byte   %00000101      ;78. DEATH1
	.byte   %00000101      ;79. DEATH2
        .byte   %10101011      ;80. KRAT
	.byte 	%10100111	;81. ROLLED PILLBUG FOR WAREHOUSE
        .byte 	%00101001      ;82. SHARK FROM PEST5
        .byte 	%00000100      ;83. SHOOTING BASE ON MOON
	        
;THESE NUMBERS ARE USED IN CONJUNCTION WITH THE MOTION BITS AND
;ARE ACTUALLY THEIR PARAMETERS.

	CLOSEST = 32	;DISTANCE ENEMIES TRY TO MAINTAIN FROM HERO ON X AXIS
	TRACKSPEED = 2	;MOMENTUM CHANGE POSSIBLE EVERY 1/15 SECOND FOR ENEMY
			;WHO IS TRACKING HERO.  BE CAREFUL BECAUSE THIS
			;EFFECTS THE WAY THE CIRCLING AND HOPPING, ETC
			;ENEMIES LOOK IF THEY ALSO TRACK THE HERO.

	GUARDSPEED = 4	;SPEED CHANGE WITH WHICH A GUARDIAN ENEMY CAN
			;RETURN TO HIS AREA.
	GUARDDISTANCE = 24	;DISTANCE A GUARDIAN WILL NOT STRAY FROM
				;HIS AREA.

	SLOWSPEED = 16		;FASTEST SPEED SLOW ENEMY IS ALLOWED TO HAVE.
				;THIS VALUE x 1.9 IS PIXELS PER SECOND.

	FASTSPEED = 32		;FASTEST SPEED FAST ENEMY IS ALLOWED TO HAVE.
				;THIS VALUE x 1.9 IS PIXELS PER SECOND.

	FALLSPEED = 48

	BUMPFREEZE = 10		;IF WE BUMP AN ENEMY AND TAKE DAMAGE, THIS
				;IS THE TIME TO FREEZE THE ENEMY TO GIVE
				;US A CHANCE TO ESCAPE.

	YTRACK = 8		;DISTANCE WITHIN WHICH Y TRACKING ENEMY
				;TRIES TO MATCH HERO.

    BULSPEED = 7              ;SPEED SLOWS ENEMY FAST ONES ARE *2

    JUMPFALL = 8              ;RATE ENEMIES CAN JUMP OVER BULLETS
                                ; 1/15

    STRAYDIST = 16            ;DISTANCE ENEMIES STRAY FROM THEIR LAUNCH
                                ;POINT


;THIS TABLE DEFINES HOW EACH ENEMY MOVES.  THE MOTIONS CAN BE COMBINED
;TO COME UP WITH SOME UNUSUAL RESULTS.  REMEMBER THAT FLYING ENEMIES
;ARE ONES WHICH IN THE ENEMYOPTS TABLE DO NOT RESPOND TO GRAVITY AND
;ARE NOT ANIMATION ALIGNED.  THIS TABLE REFERS MORE TO HOW THE ENEMY MOVES
;AROUND ON THE SCREEN IN RESPONSE TO THE HERO.  FOR EACH ENEMY THERE IS
;A BYTE THAT HAS BIT MEANINGS:

;BIT %00000001 = APPLY CIRCULAR MOTION TO ENEMY.
;BIT %00000010 = APPLY HOPPING (VERTICALLY) MOTION TO ENEMY.
;BIT %00000100 = APPLY SWERVING (HORIZONTAL) MOTION TO ENEMY.
;BIT %00001000 = ENEMY WILL TRACK HERO ON THE X AXIS.  WILL STOP TRACKING
;		  IF IN RANGE OF "CLOSEST"
;BIT %00010000 = ENEMY WILL TRACK HERO ON THE Y AXIS.  WILL TRY TO
;		  MATCH HERO'S LOCATION WITHIN "YTRACK".
;BIT %00100000 = ENEMY WILL GUARD THE AREA AROUND HIS LAUNCH POINT.  IF
;		  THE ENEMY ALSO TRACKS ON THE X AXIS, HE WILL MARCH BACK
;		  AND FORTH IN FRONT OF HIS GUARD LOCATION.
;
;BIT %01000000 = ENEMY WILL NEVER GET TOO CLOSE TO HERO

;BIT %10000000 = UNUSED.

MOTION:
	.byte 	%00000000	;0.  KEYCARD FOR MOONBASE
	.byte 	%00011110  	;1.  SWARM OF BUGS FOR SWAMP
        .byte  	%00000000      ;2.  FALLING BUG FOR SWAMP
        .byte 	%00000000      ;3.  FALLING BUG FOR SWAMP
	.byte 	%00011000	;4.  BSPIDER FOR HOUSE1
	.byte 	%00001010	;5.  FLOOR ANT FOR HOUSE1
	.byte 	%00000000	;6.  CONVEYOR BELT DEATH ENEMY
	.byte 	%00001010	;7.  BEETLE FOR WAREHOUSE1
	.byte 	%00011001	;8.  AFRICAN BEE FOR WAREHOUSE1
	.byte 	%00001010	;9.  MOSQUITO FOR SWAMP
	.byte 	%00011010	;10. MOSQUITO II FOR SWAMP
	.byte 	%00001001	;11. FLY I FOR SWAMP
	.byte 	%00001110	;12. FLY II FOR SWAMP
	.byte 	%00001110	;13. FLY III FOR SWAMP
	.byte 	%01001110	;14. GNAT FOR SWAMP
	.byte 	%01001110	;15. GNAT II FOR SWAMP
	.byte 	%00011000	;16. MONSTI FOR MOON
	.byte 	%00011010	;17. MONSTII FOR MOON
	.byte 	%00011001	;18. BLOB I FOR MOON
	.byte 	%00000000   	;19. PLATFORM FOR MOON
        .byte 	%00000000      ;20. FLEA FROM PEST7
        .byte 	%01011001      ;21. MOTH FROM PEST1
        .byte 	%00011000      ;22. ANT FROM PEST1
        .byte 	%00011000      ;23. FSPIDER FROM PEST1
        .byte 	%00111001      ;24. BBEE FROM PEST1
	.byte 	%00011000      ;25. FANT FROM PEST1  
	.byte 	%00000000      ;26. SPIDER FROM PEST1
        .byte 	%01011000      ;27. MOUSE FOR HOUSE1
        .byte 	%00000000      ;28. ROACH FROM PEST1
        .byte 	%00011000      ;29. RAT FOR HOUSE1  
        .byte 	%00011000      ;30. BSPIDER FROM PEST1  
        .byte 	%00000000      ;31. RAT1 FROM PEST1 
        .byte      %00001110      ;32. CROACH FROM PEST2
        .byte 	%00001010      ;33. BEETLE FROM PEST2
        .byte 	%00101110      ;34. GBUG FROM PEST2  
        .byte 	%00101110      ;35. MEDFLY FROM PEST2
        .byte 	%00000000      ;36. FALLING BUG FOR SWAMP
        .byte 	%00011110      ;37. WASP FROM PEST2  
        .byte 	%00001110      ;38. SCORP FROM PEST2
        .byte 	%00001110      ;39. AFBEE FROM PEST2
        .byte 	%00001110      ;40. BEE FROM PEST2  
        .byte 	%00101000      ;41. WORM FROM PEST2
        .byte 	%00001000      ;42. BROACH FROM PEST4
 	.byte      %00001000      ;43. BMOUSE FOR HOTEL
        .byte 	%00001010      ;44. BBEETLE FROM PEST4
        .byte 	%00011010      ;45. BGBUG FROM PEST4 
        .byte 	%00001000      ;46. FBRAT FROM PEST4
        .byte 	%00001000      ;47. BSCORP FROM PEST4
        .byte 	%00011000      ;48. BMEDFLY FROM PEST4
        .byte 	%00011000      ;49. BAFBEE FROM PEST4  
        .byte 	%00011000      ;50. VBEE FROM PEST4
        .byte 	%00011000      ;51. MOSQ FROM PEST4
        .byte 	%00001000      ;52. MOSH FROM PEST4
        .byte 	%00011000      ;53. FLEA FROM PEST4
        .byte 	%00001001      ;54. BBUG FROM PEST4
        .byte 	%00011001      ;55. MOON BEE FROM PEST7 FOR MOONBASE
        .byte 	%00101000      ;56. SQUID FROM PEST5
        .byte 	%00001100      ;57. SHARK FROM PEST5
        .byte 	%00111010      ;58. JFISH FROM PEST5
        .byte 	%00101100      ;59. SMFSH FROM PEST5
        .byte 	%00100100      ;60. FISH FROM PEST5
        .byte 	%00011110      ;61. MUTFSH1 FROM PEST5
        .byte 	%00011010      ;62. MUTFSH2 FROM PEST5 
        .byte 	%00000000      ;63. MONST1 FROM PEST6
        .byte 	%00000000      ;64. MONST2 FROM PEST6 
        .byte 	%00011000      ;65. MONST3 FROM PEST6
        .byte 	%01011010      ;66. MONST4 FROM PEST6
        .byte 	%00110011   	;67. MONST5 FROM PEST6
        .byte 	%00100000      ;68. NEST FROM PEST7
        .byte      %00011000      ;69. FLOT FROM PEST7
        .byte 	%00011000      ;70. CRAW FROM PEST7
	.byte 	%00000000   	;71. INVISIBLE HERO - SHOOTS DROPS
	.byte      %00011001      ;72. FLY FOR HOUSE1
        .byte      %00000001      ;73. DRAGFY FOR HOUSE1
	.byte 	%00001100	;74. CENT FOR WARE
	.byte 	%00000000	;75. BEE HIVE
	.byte 	%00000000	;76. CASE FOR WAREHOUSE
	.byte 	%01001010	;77. GRASSHOPPER IN WAREHOUSE	-JGT
	.byte      %00000000      ;78. DEATH1
	.byte      %00000000  	;79. DEATH2
        .byte      %00011000      ;80. KRAT
	.byte 	%00001000	;81. ROLLED PILLBUG FOR WAREHOUSE
        .byte 	%00011100      ;82. SHARK FROM PEST5
        .byte 	%00000000      ;83. SHOOTING BASE ON MOON

;THIS TABLE DEFINES HOW EACH ENEMY BEHAVES.  THE BEHAVIORS CAN BE
;COMBINED TO COME UP WITH DIFFERENT PERSONALITIES.

;BIT %00000001 = ENEMY CAN JUMP OVER BULLETS
;BIT %00000010 = ENEMY RUNS AS SOON AS HE HAS BEEN SHOT
;BIT %00000100 = ENEMY CAN BE JUMPED ON AND RIDDEN BY HERO. "RIDEDEEP" 
;		  DETERMINES HOW THE HERO STICKS TO IT.
;BIT %00001000 = IF SET, WILL CAUSE HERO TO BOUNCE TWICE AS FAR WHEN
;		  HIT BY THIS MONSTER
;BIT %00010000 = ENEMY EXPLODES ON CONTACT AND LOWERS HEALTH BY AMOUNT
;		  IN VARIABLE "LOWHEALTH".
;
;BIT %00100000 = DON'T RESET ENEMIES COLUMN FLAG WHEN PICKED UP.  WILL
;		  BE AVAILABLE AGAIN IF SCREEN IS RE-ENTERED.  DON'T SET
;		  THIS IN A BOSS ENEMY.
;
;BIT %01000000 = ENEMY IS FREEZE PROOF

;BIT %10000000 = ENEMY EXPLODES ON CONTACT WITH HERO AND KILLS HERO.

	LOWHEALTH = 4	;AMOUNT TO LOWER HEALTH WITH EXPLODING HEALTH SUCKER.
	RIDEDEEP = 2	;AMOUNT TO SINK DOWN THE HERO'S FEET WHEN HE STANDS
			;ON AN ENEMY.  6 LOOKS LIKE RIDING SHOULDERS,
			;2 BEST FOR RIDING A PLATFORM. ONLY 1 VALUE PER GAME!
BEHAVIOR:
	.byte 	%00000000	;0.  KEYCARD FOR MOONBASE
	.byte 	%01000000  	;1.  SWARM OF BUGS FOR SWAMP
        .byte  	%00000000      ;2.  FALLING BUG FOR SWAMP
        .byte 	%00000000      ;3.  FALLING BUG FOR SWAMP
	.byte 	%00000000	;4.  BIG SPIDER FOR HOUSE1
	.byte 	%00000000	;5.  FLOOR ANT FOR HOUSE1
	.byte 	%11100000	;6.  CONVEYOR BELT DEATH ENEMY
	.byte 	%00000000	;7.  BEETLE FOR WAREHOUSE1
	.byte 	%00000000	;8.  AFRICAN BEE FOR WAREHOUSE1
	.byte 	%00000000	;9.  MOSQUITO FOR SWAMP
	.byte 	%00000000	;10. MOSQUITO II FOR SWAMP
	.byte 	%00000000	;11. FLY I FOR SWAMP
	.byte 	%00000000	;12. FLY II FOR SWAMP
	.byte 	%00000000	;13. FLY III FOR SWAMP
	.byte 	%00000000	;14. GNAT FOR SWAMP
	.byte 	%00000000	;15. GNAT II FOR SWAMP
	.byte 	%00001000	;16. MONSTI FOR MOON
	.byte 	%00001000	;17. MONSTII FOR MOON
	.byte 	%00000001	;18. BLOB I FOR MOON
	.byte      %01100100 	;19. PLATFORM 
        .byte 	%00000000      ;20. FLEA FROM SWAMP
        .byte 	%00000000      ;21. MOTH FOR HOUSE2
        .byte 	%00000010      ;22. ANT FOR HOUSE2
        .byte 	%00000000      ;23. FSPIDER FOR HOUSE2
        .byte 	%00000001      ;24. BBEE FROM PEST1
	.byte 	%00000000      ;25. FANT FROM PEST1  
	.byte 	%00000000      ;26. SPIDER FROM PEST1
        .byte 	%00000010      ;27. MOUSE FROM PEST1
        .byte 	%00000000      ;28. ROACH FROM PEST1
        .byte 	%00000000      ;29. RAT FROM PEST1  
        .byte 	%00000000      ;30. BSPIDER FROM PEST1  
        .byte 	%00000000      ;31. RAT1 FROM PEST1 
        .byte      %00000000      ;32. CROACH FROM PEST2
        .byte 	%00000000      ;33. BEETLE FROM PEST2
        .byte 	%00000000      ;34. GBUG FOR WARE1 
        .byte 	%00000000      ;35. MEDFLY FOR WARE1
        .byte 	%00000000      ;36. FALLING BUG FOR SWAMP
        .byte 	%00000001      ;37. WASP FOR WARE1 
        .byte 	%00000000      ;38. SCORP FOR WARE1
        .byte 	%00000000      ;39. AFBEE FROM PEST2
        .byte 	%00000000      ;40. BEE FROM PEST2  
        .byte 	%00000010      ;41. WORM FOR WARE1
        .byte 	%00000000      ;42. ROACH FROM PEST4
 	.byte      %00000000      ;43. MOUSE FROM PEST4
        .byte 	%00000000      ;44. BEETLE FROM PEST4
        .byte 	%00000000      ;45. GBUG FROM PEST4 
        .byte 	%00000000      ;46. FBRAT FROM PEST4
        .byte 	%00000000      ;47. SCORP FROM PEST4
        .byte 	%00000000      ;48. MEDFLY FROM PEST4
        .byte 	%00000000      ;49. AFBEE FROM PEST4  
        .byte 	%00000000      ;50. BEE FROM PEST4
        .byte 	%00000000      ;51. MOSQ FROM PEST4
        .byte 	%00000000      ;52. MOSH FROM PEST4
        .byte 	%00000000      ;53. FLEA FROM PEST4
        .byte 	%00000000      ;54. FROM PEST4
        .byte 	%00000000      ;55. MOON BEE FROM PEST7 FOR MOONBASE
        .byte 	%00000000      ;56. SQUID FROM PEST5
        .byte 	%01001000      ;57. SHARK FROM PEST5
        .byte 	%00000000      ;58. JFISH FROM PEST5
        .byte 	%00000000      ;59. SMFSH FROM PEST5
        .byte 	%00000000      ;60. FISH FROM PEST5
        .byte 	%00000000      ;61. MUTFSH1 FROM PEST5
        .byte 	%00000000      ;62. MUTFSH2 FROM PEST5 
        .byte 	%00000000      ;63. MONST1 FROM PEST6
        .byte 	%00000000      ;64. MONST2 FROM PEST6 
        .byte 	%00000000      ;65. MONST3 FROM PEST6
        .byte 	%00000100      ;66. MONST4 FROM PEST6
        .byte 	%00010001   	;67. MONST5 FROM PEST6
        .byte 	%01000000      ;68. NEST FROM PEST7
        .byte      %00000001      ;69. FLOT FROM PEST7
        .byte 	%00000000      ;70. CRAW FROM PEST7
	.byte      %01100000 	;71. INVISIBLE HERO - SHOOTS DROPS
	.byte      %00000000      ;72. FLY FOR HOUSE1
        .byte      %00000000      ;73. DRAGFY FOR HOUSE1
	.byte 	%00001000	;74. CENT FOR WARE
	.byte 	%00000000	;75. BEE HIVE	       
	.byte      %01100100 	;76. CASE FOR WAREHOUSE
	.byte      %00000001      ;77. GRASSHOPPER IN WAREHOUSE	-JGT 
	.byte      %11001000      ;78. DEATH1
	.byte      %01010000  	;79. DEATH2
	.byte      %01001001      ;80. KRAT FOR MOONBASE
	.byte 	%00000000	;81. ROLLED PILLBUG FOR WAREHOUSE
        .byte 	%01001000      ;82. SHARK FROM PEST5
        .byte 	%01000000      ;83. SHOOTING BASE ON MOON


;THIS IS THE BULLET ANIMATION TO USE FOR EACH ENEMY FROM ENEMYTAB.
;BULLET ANIMATIONS SHOULD BE A SINGLE CHARACTER IF POSSIBLE.  IF YOU
;PUT 0 HERE BUT ARM THE BULLET IN BULLETTYPE, THEN THE CHARACTER WILL
;MAKE THE NOISE YOU SET AS ENEMYSND WHEN HE GETS THE HERO IN HIS SIGHTS
;(BUT WILL NOT FIRE).  ITS OK TO PUT 0 HERE IF THE ENEMY DOESN'T FIRE
;BUT BULLETTYPE IS THE ONE THAT FLAGS THIS FACT.

BULLETLIST:
	.word 	0	;0.  KEYCARD FOR MOONBASE
	.word 	GNATII	;1   SWARM OF KNATS
        .word 	0	;2.  FALLING BUG FOR SWAMP
        .word     0	;3.  FALLING BUG FOR SWAMP
	.word 	0	;4.  BIG SPIDER FOR HOUSE1
	.word 	0	;5.  FLOOR ANT FOR HOUSE1
	.word 	0	;6.  CONVEYOR BELT DEATH ENEMY
	.word 	0	;7.  BEETLE FOR WAREHOUSE1
	.word 	0	;8.  AFRICAN BEE FOR WAREHOUSE1
	.word 	0	;9.  MOSQUITO FOR SWAMP
	.word 	0	;10. MOSQUITO II FOR SWAMP
	.word 	0	;11. FLY I FOR SWAMP
	.word 	0	;12. FLY II FOR SWAMP
	.word 	0	;13. FLY III FOR SWAMP
	.word 	0	;14. GNAT FOR SWAMP
	.word 	0	;15. GNAT II FOR SWAMP
	.word 	0	;16. MONSTI FOR MOON
	.word 	SBUL	;17. MONSTII FOR MOON
	.word 	0	;18. BLOB I FOR MOON
	.word  	0	;19. PLATFORM FOR MOON
        .word 	0	;20. CRAW FROM PEST7
        .word 	0	;21. FROM PEST1
        .word 	0	;22. FROM PEST1
        .word 	0	;23. FROM PEST1
        .word 	0	;24. BBEE FROM PEST1
	.word 	0	;25. FANT FROM PEST1  
	.word 	0	;26. SPIDER FROM PEST1
        .word 	0	;27. MOUSE FROM PEST1
        .word 	0	;28. FROM PEST1
        .word 	0	;29. RAT FROM PEST1  
        .word 	0	;30. BSPIDER FROM PEST1  
        .word 	0	;31. RAT1 FROM PEST1 
        .word     0	;32. CROACH FROM PEST2
        .word 	0	;33. BEETLE FROM PEST2
        .word 	0	;34. GBUG FROM PEST2  
        .word 	0	;35. MEDFLY FROM PEST2
        .word 	0	;36. FALLING BUG FOR SWAMP
        .word 	0	;37. WASP FROM PEST2  
        .word 	0	;38. SCORP FROM PEST2
        .word     0	;39. FROM PEST2
        .word 	0	;40. BEE FROM PEST2  
        .word 	0	;41. FROM PEST2
        .word 	0	;42. ROACH FROM PEST4
 	.word     0	;43. MOUSE FROM PEST4
        .word 	0	;44. BEETLE FROM PEST4
        .word 	0	;45. GBUG FROM PEST4 
        .word 	0	;46. FBRAT FROM PEST4
        .word 	0	;47. SCORP FROM PEST4
        .word 	0	;48. MEDFLY FROM PEST4
        .word 	0	;49. AFBEE FROM PEST4  
        .word 	0	;50. BEE FROM PEST4
        .word 	0	;51. MOSQ FROM PEST4
        .word 	0	;52. MOSH FROM PEST4
        .word 	0	;53. FLEA FROM PEST4
        .word 	0	;54. BBUG FROM PEST4
        .word 	0	;55. MOON BEE FROM PEST7 FOR MOONBASE
        .word 	0	;56. SQUID FROM PEST5
        .word 	0	;57. SHARK FROM PEST5
        .word 	0	;58. JFISH FROM PEST5
        .word 	0	;59. SMFSH FROM PEST5
        .word 	0	;60. FISH FROM PEST5
        .word 	0	;61. MUTFS1 FROM PEST5
        .word 	SBUL	;62. MUTFS2 FROM PEST5 
        .word 	0	;63. MONST1 FROM PEST6
        .word 	0	;64. MONST2 FROM PEST6 
        .word 	0	;65. MONST3 FROM PEST6
        .word 	0	;66. MONST4 FROM PEST6
        .word 	0	;67. MONST5 FROM PEST6
        .word 	0	;68. NEST FROM PEST7
        .word     0	;69. FLOT FROM PEST7
	.word     0	;70. CRAW FROM PEST7
	.word  	DROP	;71. INVISIBLE HERO - SHOOTS DROPS
	.word     0	;72. FLY FOR HOUSE1
	.word     SHIT	;73. DRAGFY FOR HOUSE1
	.word 	SBUL	;74. CENT FOR WARE
	.word 	HBEE	;75. BEE HIVE
	.word     0	;76. CASE FOR WAREHOUSE
	.word     0       ;77. GRASSHOPPER IN WAREHOUSE
	.word     0	;78. DEATH1
	.word     0	;79. DEATH2
	.word     KBREATH ;80. KRAT FOR MOONBASE
	.word 	0	;81. ROLLED PILLBUG FOR WAREHOUSE
        .word 	0	;82. SHARK FROM PEST5
        .word 	PUFF    ;83. SHOOTING BASE ON MOON

;THIS TABLE DEFINES HOW FAR DOWN TO LAUNCH AN ENEMIES BULLETS IN RESPECT
;TO HIS HEAD.

BULLET_DOWN:
	.byte 	0	;0.  KEYCARD FOR MOONBASE
	.byte 	4	;1.  SWARM OF BUGS FOR SWAMP
        .byte  	0	;2.  FALLING BUG FOR SWAMP
        .byte 	0	;3.  FALLING BUG FOR SWAMP
	.byte 	0	;4.  BIG SPIDER FOR HOUSE1
	.byte 	0	;5.  FLOOR ANT FOR HOUSE1
	.byte 	0	;6.  CONVEYOR BELT DEATH ENEMY
	.byte 	0	;7.  BEETLE FOR WAREHOUSE1
	.byte 	0	;8.  AFRICAN BEE FOR WAREHOUSE1
	.byte 	0	;9.  MOSQUITO FOR SWAMP
	.byte 	0	;10. MOSQUITO II FOR SWAMP
	.byte 	0	;11. FLY I FOR SWAMP
	.byte 	0	;12. FLY II FOR SWAMP
	.byte 	0	;13. FLY III FOR SWAMP
	.byte 	0	;14. GNAT FOR SWAMP
	.byte 	0	;15. GNAT II FOR SWAMP
	.byte 	0	;16. MONSTI FOR MOON
	.byte 	3	;17. MONSTII FOR MOON
	.byte 	0	;18. BLOB I FOR MOON
	.byte 	0	;19. PLATFORM FOR MOON
        .byte 	0	;20. FLEA FROM SWAMP
        .byte      0	;21. MOTH FROM PEST1
        .byte 	0	;22. ANT FROM PEST1
        .byte 	0	;23. FSPIDER FROM PEST1
        .byte 	0	;24. BBEE FROM PEST1
	.byte 	0	;25. FANT FROM PEST1  
	.byte 	0	;26. SPIDER FROM PEST1
        .byte 	0	;27. MOUSE FROM PEST1
        .byte 	0	;28. ROACH FROM PEST1
        .byte 	0	;29. RAT FROM PEST1  
        .byte 	0	;30. BSPIDER FROM PEST1  
        .byte 	0	;31. RAT1 FROM PEST1 
        .byte      0	;32. CROACH FROM PEST2
        .byte 	0	;33. BEETLE FROM PEST2
        .byte 	0	;34. GBUG FOR WARE1 
        .byte 	0	;35. MEDFLY FOR WARE1
        .byte 	0	;36. FALLING BUG FOR SWAMP
        .byte 	0	;37. WASP FOR WARE1  
        .byte 	0	;38. SCORP FOR WARE1
        .byte 	0	;39. AFBEE FROM PEST2
        .byte 	0	;40. BEE FROM PEST2  
        .byte 	0	;41. WORM FOR WARE1
        .byte 	0	;42. ROACH FROM PEST4
 	.byte      0	;43. MOUSE FROM PEST4
        .byte 	0	;44. BEETLE FROM PEST4
        .byte 	0	;45. GBUG FROM PEST4 
        .byte 	0	;46. FBRAT FROM PEST4
        .byte 	0	;47. SCORP FROM PEST4
        .byte 	0	;48. MEDFLY FROM PEST4
        .byte 	0	;49. AFBEE FROM PEST4  
        .byte 	0	;50. BEE FROM PEST4
        .byte 	0	;51. MOSQ FROM PEST4
        .byte 	0	;52. MOSH FROM PEST4
        .byte 	0	;53. FLEA FROM PEST4
        .byte 	0	;54. FROM PEST4
        .byte 	0	;55. MOON BEE FROM PEST7 FOR MOONBASE
        .byte 	0	;56. SQUID FROM PEST5
        .byte      0	;57. SHARK FROM PEST5
        .byte 	0	;58. JFISH FROM PEST5
        .byte 	0	;59. SMFSH FROM PEST5
        .byte 	0	;60. FISH FROM PEST5
        .byte 	0	;61. MUTFSH1 FROM PEST5
        .byte 	4	;62. MUTFSH2 FROM PEST5
        .byte 	0	;63. MONST1 FROM PEST6
        .byte 	0	;64. MONST2 FROM PEST6 
        .byte 	0	;65. MONST3 FROM PEST6
        .byte 	0	;66. MONST4 FROM PEST6
        .byte 	0	;67. MONST5 FROM PEST6
        .byte      0	;68. NEST FROM PEST7
        .byte      0	;69. FLOT FROM PEST7
        .byte      0	;70. CRAW FROM PEST7
	.byte 	0	;71. INVISIBLE HERO - SHOOTS DROPS
	.byte      0	;72. FLY FOR HOUSE1
        .byte      8	;73. DRAGFY FOR HOUSE1
	.byte 	8	;74. CENT FOR WARE
	.byte 	5	;75. BEE HIVE
        .byte      0	;76. CASE FOR WAREHOUSE
        .byte      0       ;77. GRASSHOPPER IN WAREHOUSE
	.byte      0	;78. DEATH1
	.byte      0	;79. DEATH2
	.byte      28	;80. KRAT FOR MOONBASE
	.byte 	0	;81. ROLLED PILLBUG FOR WAREHOUSE
        .byte      0	;82. SHARK FROM PEST5
        .byte 	0       ;83. SHOOTING BASE ON MOON

;THIS TABLE DEFINES IF THE ENEMY CAN SHOOT AT THE HERO AND IF SO HOW HIS
;BULLETS TRAVEL.  THERE IS A BYTE FOR EACH ENEMY AND THE BYTE IS BIT
;ORIENTED (VALUE OF 0 MEANS NO SHOOTING).  YOU CAN MAKE THE ENEMY DO HIS
;BULLET FIRING SOUND (ENEMYSND) WITHOUT ACTUALLY SHOOTING BY PUTTING A
;LEGAL VALUE HERE AND PUTTING 0 AS THE BULLET IMAGE IN BULLETLIST.

;%00000001 = TRAVELS RIGHT
;%00000010 = TRAVELS LEFT
;%00000100 = TRAVELS DOWN
;%00001000 = TRAVELS UP
;%00010000 = CONTINUOUS SHOOTING REGARDLESS OF ENEMY POSITION.
;%00100000 = BULLET RANGE IS DOUBLED.
;%01000000 = POWERFUL BULLET.  TAKES AWAY 4 HEALTH POINTS INSTEAD OF 1.
;%10000000 = FAST BULLET (OFF=SLOW BULLET).
;$2149
BULLETTYPE:
	.byte 	%00000000	;0.  KEYCARD FOR MOONBASE
	.byte 	%11111111  	;1.  SWARM OF BUGS FOR SWAMP
        .byte  	%00000000      ;2.  FALLING BUG FOR SWAMP
        .byte 	%00000000      ;3.  FALLING BUG FOR SWAMP
	.byte 	%00001111	;4.  BIG SPIDER FOR HOUSE1
	.byte 	%00001111	;5.  FLOOR ANT FOR HOUSE1
	.byte 	%00000000	;6.  CONVEYOR BELT DEATH ENEMY
	.byte 	%00001111	;7.  BEETLE FOR WAREHOUSE1
	.byte 	%00001111	;8.  AFRICAN BEE FOR WAREHOUSE1
	.byte 	%00001111	;9.  MOSQUITO FOR SWAMP
	.byte 	%00001111	;10. MOSQUITO II FOR SWAMP
	.byte 	%00001111	;11. FLY I FOR SWAMP
	.byte 	%00001111	;12. FLY II FOR SWAMP
	.byte 	%00001111	;13. FLY III FOR SWAMP
	.byte 	%00001111	;14. GNAT FOR SWAMP
	.byte 	%00001111	;15. GNAT II FOR SWAMP
	.byte 	%00000000	;16. MONSTI FOR MOON
	.byte 	%00000011	;17. MONSTII FOR MOON
	.byte 	%00001111	;18. BLOB I FOR MOON
	.byte 	%00000000	;19. PLATFORM FOR MOON
        .byte 	%00000000      ;20. FLEA FROM SWAMP
        .byte 	%00000000      ;21. MOTH FROM PEST1
        .byte 	%00000000      ;22. ANT FROM PEST1
        .byte 	%00000000      ;23. FSPIDER FROM PEST1
        .byte 	%00000000      ;24. BBEE FROM PEST1
	.byte 	%00000000      ;25. FANT FROM PEST1  
	.byte 	%00000000      ;26. SPIDER FROM PEST1
        .byte 	%00000000      ;27. MOUSE FROM PEST1
        .byte 	%00000000      ;28. ROACH FROM PEST1
        .byte 	%00000000      ;29. RAT FROM PEST1  
        .byte 	%00000000      ;30. BSPIDER FROM PEST1  
        .byte 	%00000000      ;31. RAT1 FROM PEST1 
        .byte      %00000000      ;32. CROACH FROM PEST2
        .byte 	%00000000      ;33. BEETLE FROM PEST2
        .byte 	%00000000      ;34. GBUG FROM PEST2  
        .byte 	%00000000      ;35. MEDFLY FROM PEST2
        .byte 	%00000000      ;36. FALLING BUG FOR SWAMP
        .byte 	%00000000      ;37. WASP FROM PEST2  
        .byte 	%00000000      ;38. SCORP FROM PEST2
        .byte 	%00000000      ;39. AFBEE FROM PEST2
        .byte 	%00000000      ;40. BEE FROM PEST2  
        .byte 	%00000000      ;41. WORM FROM PEST2
        .byte 	%00000000      ;42. ROACH FROM PEST4
 	.byte      %00000000      ;43. MOUSE FROM PEST4
        .byte 	%00000000      ;44. BEETLE FROM PEST4
        .byte 	%00000000      ;45. GBUG FROM PEST4 
        .byte 	%00000000      ;46. FBRAT FROM PEST4
        .byte 	%00000000      ;47. SCORP FROM PEST4
        .byte 	%00000000      ;48. MEDFLY FROM PEST4
        .byte 	%00000000      ;49. AFBEE FROM PEST4  
        .byte 	%00000000      ;50. BEE FROM PEST4
        .byte 	%00000000      ;51. MOSQ FROM PEST4
        .byte 	%00000000      ;52. MOSH FROM PEST4
        .byte 	%00000000      ;53. FLEA FROM PEST4
        .byte 	%00000000      ;54. FROM PEST4
        .byte 	%00000000      ;55. MOON BEE FROM PEST7 FOR MOONBASE
        .byte 	%00000000      ;56. SQUID FROM PEST5
        .byte 	%00000000      ;57. SHARK FROM PEST5
        .byte 	%00000000      ;58. JFISH FROM PEST5
        .byte 	%00000000      ;59. SMFSH FROM PEST5
        .byte 	%00000000      ;60. FISH FROM PEST5
        .byte 	%00000000      ;61. MUTFSH1 FROM PEST5
        .byte 	%11000011      ;62. MUTFSH2 FROM PEST5 
        .byte 	%00000000      ;63. MONST1 FROM PEST6
        .byte 	%00000000      ;64. MONST2 FROM PEST6 
        .byte 	%00000000      ;65. MONST3 FROM PEST6
        .byte 	%00000000      ;66. MONST4 FROM PEST6
        .byte 	%00000000   	;67. MONST5 FROM PEST6
        .byte 	%00000000      ;68. NEST FROM PEST7
        .byte      %00000000      ;69. FLOT FROM PEST7
        .byte 	%00001111      ;70. CRAW FROM PEST7
	.byte 	%01110100	;71. INVISIBLE HERO - SHOOTS DROPS
	.byte      %00000000      ;72. FLY FOR HOUSE1
        .byte      %00001111      ;73. DRAGFY FOR HOUSE1
	.byte 	%00000011	;74. CENT FOR WARE
	.byte 	%00001101	;75. BEE HIVE		    	
        .byte 	%00000000	;76. CASE FOR WAREHOUSE
	.byte      %00010011      ;77. GRASSHOPPER IN WAREHOUSE	-JGT 
        .byte 	%00000000      ;78. DEATH1 FOR WATER
        .byte 	%00000000      ;79. DEATH2 FOR WATER
	.byte      %01100011      ;80. KRAT FOR MOONBASE
	.byte 	%00000000	;81. ROLLED PILLBUG FOR WAREHOUSE
        .byte 	%00000000      ;82. SHARK FROM PEST5
        .byte 	%10111111      ;83. SHOOTING BASE ON MOON

;IN THE TABLE BELOW, A NUMBER OF SHOTS = 0 MEANS THE ENEMY CANNOT BE
;KILLED.  USE 1 FOR PRIZES.

ENEMYHITS:			;NUMBER OF SHOTS TO KILL EACH ENEMY TYPE

	.byte 	1		;0.  KEYCARD FOR MOONBASE
	.byte 	1	  	;1.  SWARM OF BUGS FOR SWAMP
        .byte  	1     		;2.  FALLING BUG FOR SWAMP
        .byte 	1		;3.  FALLING BUG FOR SWAMP
	.byte 	1		;4.  BIG SPIDER FOR HOUSE1
	.byte 	1		;5.  FLOOR ANT FOR HOUSE1
	.byte 	0		;6.  CONVEYOR BELT DEATH ENEMY
	.byte 	2		;7.  BEETLE FOR WAREHOUSE1
	.byte 	1		;8.  AFRICAN BEE FOR WAREHOUSE1
	.byte 	3		;9.  MOSQUITO FOR SWAMP
	.byte 	3		;10. MOSQUITO II FOR SWAMP
	.byte 	2		;11. FLY I FOR SWAMP
	.byte 	2		;12. FLY II FOR SWAMP
	.byte 	2		;13. FLY III FOR SWAMP
	.byte 	1		;14. GNAT FOR SWAMP
	.byte 	1		;15. GNAT II FOR SWAMP
	.byte 	1		;16. MONSTI FOR MOON
	.byte 	3		;17. MONSTII FOR MOON
	.byte 	1		;18. BLOB I FOR MOON
	.byte 	0		;19. PLATFORM FOR MOON
        .byte 	1		;20. FLEA FROM SWAMP
        .byte 	1		;21. MOTH FROM PEST1
        .byte      2		;22. ANT FROM PEST1
        .byte 	2		;23. FSPIDER FROM PEST1
        .byte 	2		;24. BBEE FROM PEST1
	.byte 	1		;25. FANT FROM PEST1  
	.byte 	1		;26. SPIDER FROM PEST1
        .byte 	1		;27. MOUSE FROM PEST1
        .byte 	1		;28. ROACH FROM PEST1
        .byte 	1		;29. RAT FROM PEST1  
        .byte 	3		;30. BSPIDER FROM PEST1  
        .byte 	1		;31. RAT1 FROM PEST1 
        .byte      2		;32. CROACH FROM PEST2
        .byte 	1		;33. BEETLE FROM PEST2
        .byte 	2		;34. GBUG FROM PEST2  
        .byte 	1		;35. MEDFLY FOR WARE1
        .byte 	2		;36. FALLING BUG FOR SWAMP
        .byte      1		;37. WASP FOR WARE1  
        .byte 	2		;38. SCORP FOR WARE1
        .byte 	1		;39. AFBEE FROM PEST2
        .byte 	1		;40. BEE FROM PEST2  
        .byte 	1		;41. WORM FOR WARE1
        .byte 	1		;42. ROACH FROM PEST4
 	.byte      1		;43. MOUSE FROM PEST4
        .byte 	2		;44. BEETLE FROM PEST4
        .byte 	1		;45. GBUG FROM PEST4 
        .byte 	1		;46. FBRAT FROM PEST4
        .byte 	1		;47. SCORP FROM PEST4
        .byte 	1		;48. MEDFLY FROM PEST4
        .byte 	1		;49. AFBEE FROM PEST4  
        .byte 	1		;50. BEE FROM PEST4
        .byte      2		;51. MOSQ FROM PEST4
        .byte 	1		;52. MOSH FROM PEST4
        .byte 	1		;53. FLEA FROM PEST4
        .byte 	1		;54. FROM PEST4
        .byte      2		;55. MOON BEE FROM PEST7 FOR MOONBASE
        .byte 	1		;56. SQUID FROM PEST5
        .byte 	0		;57. SHARK FROM PEST5
        .byte 	2		;58. JFISH FROM PEST5
        .byte 	1		;59. SMFSH FROM PEST5
        .byte 	2		;60. FISH FROM PEST5
        .byte 	3		;61. MUTFSH1 FROM PEST5
        .byte      4		;62. MUTFSH2 FROM PEST5 
        .byte      1		;63. MONST1 FROM PEST6
        .byte 	3		;64. MONST2 FROM PEST6 
        .byte 	2		;65. MONST3 FROM PEST6
        .byte 	1		;66. MONST4 FROM PEST6
        .byte 	1		;67. MONST5 FROM PEST6
        .byte 	3		;68. NEST FROM PEST7
        .byte      3		;69. FLOT FROM PEST7
        .byte      2		;70. CRAW FROM PEST7
	.byte 	0		;71. INVISIBLE HERO - SHOOTS DROPS
	.byte      1		;72. FLY FOR HOUSE1
        .byte      1		;73. DRAGFY FOR HOUSE1
	.byte 	3		;74. CED FOR WARE
	.byte 	0		;75. BEE HIVE
	.byte 	0		;76. CASE FOR WHEREHOUSE
        .byte      3               ;77. GRASSHOPPER IN WAREHOUSE	-JGT 
        .byte 	2		;78. DEATH1 FOR WATER
        .byte 	2		;79. DEATH2 FOR WATER
        .byte      12		;80. KRAT FOR MOONBASE
	.byte 	1		;81. ROLLED PILLBUG FOR WAREHOUSE	
        .byte 	0		;82. SHARK FROM PEST5
        .byte 	0      		;83. SHOOTING BASE ON MOON
		  
;THIS TABLE CONTROLS THE NUMBER OF POINTS TO AWARD FOR EACH ENEMY TYPE.
;HERE ARE THE VALUES:

;0-6 =  SIMPLE POINTS AWARD.  THE TABLE BELOW SHOWS HOW MANY
;$80-$85 = PRIZE AWARD. PRIZES ARE THE SAME AS THOSE OF COMMAND 2A.
;$A0-$AF = GUN REPLACEMENT.  LOW 4 BITS HAVE NEW GUN FROM BULLETDATA TABLE.
;-3 = FREE HERO
;-2 = ARMOR PROOF BOOTS (PROTECTS AGAINST 3 EXPLOSION COMMANDS).
;-1 = HEALTH IS CONTAINED IN THE ENEMY (HERO HAS 4 SECONDS TO GET IT).

;PRIZES AND HEALTH ARE "INSIDE" THE ENEMY.  WHEN HE IS KILLED THEY ARE
;DISPLAYED FOR A WHILE ACCORDING TO THE TABLE PRIZE_TIME (OR 4 SECONDS FOR
;HEALTH.  THE ARMOR PROOF BOOTS ARE SUPPOSED TO BE REPRESENTED BY THE
;ACTUAL ENEMY SPRITE.  YOU MUST SET THE IMMEDIATE PRIZE BIT IN SPECENEMY
;FOR THIS ONE.  THE NEW GUNS ARE ALSO SUPPOSED TO BE REPRESENTED BY
;THE SPRITE AND THE IMMEDIATE PRIZE BIT IN SPECENEMY MUST ALSO BE SET.

ENEMYPNTS:			;NUMBER OF POINTS (0-6) GIVEN WHEN KILLED.

				; NO POINTS.		0 POINTS
				; 100			1 POINTS
				; 200			2 POINTS
				; 500			3 POINTS
				;1000			4 POINTS
				;2000			5 POINTS
				;5000 POINTS		6 POINTS

	.byte 	$80		;0.  KEYCARD FOR MOONBASE
	.byte 	-1		;1.  SWARM OF BUGS FOR SWAMP
	.byte 	1		;2.  FALLING BUGS FOR SWAMP
	.byte 	2		;3.  FALLING BUGS FOR SWAMP
	.byte 	4		;4.  BIG SPIDER FOR HOUSE1
	.byte 	1		;5.  FLOOR ANT FOR HOUSE1
	.byte 	0		;6.  CONVEYOR BELT DEATH ENEMY
	.byte 	2		;7.  BEETLE FOR WAREHOUSE1
	.byte 	1		;8.  AFRICAN BEE FOR WAREHOUSE1
	.byte 	1		;9.  MOSQUITO FOR SWAMP
	.byte 	1		;10. MOSQUITO II FOR SWAMP
	.byte 	1		;11. FLY I FOR SWAMP
	.byte 	1		;12. FLY II FOR SWAMP
	.byte 	1		;13. FLY III FOR SWAMP
	.byte 	1		;14. GNAT FOR SWAMP
	.byte 	1		;15. GNAT II FOR SWAMP
	.byte 	2		;16. MONSTI FOR MOON
	.byte 	4		;17. MONSTII FOR MOON
	.byte 	-1		;18. BLOB I FOR MOON
	.byte 	0		;19. PLATFORM FOR MOON
	.byte 	1		;20. FLEA FROM SWAMP
	.byte 	1		;21. MOTH FROM PEST1
	.byte 	1		;22. ANT FROM PEST1
	.byte 	2		;23. FSPIDER FROM PEST1
	.byte 	-1		;24. BBEE FROM PEST1
	.byte 	1		;25. FANT FROM PEST1  
	.byte 	1		;26. SPIDER FROM PEST1
	.byte 	1		;27. MOUSE FOR HOUSE1
	.byte 	2		;28. ROACH FROM PEST1
	.byte 	2		;29. RAT FOR HOUSE1  
	.byte 	4		;30. BSPIDER FROM PEST1  
	.byte 	1		;31. RAT1 FROM PEST1 
	.byte 	2		;32. CROACH FROM PEST2
	.byte 	1		;33. BEETLE FROM PEST2
	.byte 	2		;34. GBUG FROM PEST2  
        .byte 	-1              ;35. MEDFLY FROM PEST2
        .byte 	3		;36. FALLING BUG FOR SWAMP
        .byte 	2		;37. WASP FROM PEST2  
        .byte 	3		;38. SCORP FROM PEST2
        .byte 	2		;39. AFBEE FROM PEST2
        .byte 	1		;40. BEE FROM PEST2  
        .byte 	1		;41. WORM FROM PEST2
        .byte 	1		;42. ROACH FROM PEST4
 	.byte      1		;43. MOUSE FROM PEST4
        .byte 	2		;44. BEETLE FROM PEST4
        .byte 	1		;45. GBUG FROM PEST4 
        .byte 	1		;46. FBRAT FROM PEST4
        .byte 	3		;47. SCORP FROM PEST4
        .byte 	-1		;48. MEDFLY IN HOTEL
        .byte 	2		;49. AFBEE FROM PEST4  
        .byte 	1		;50. BEE FROM PEST4
        .byte 	3		;51. MOSQ FROM PEST4
        .byte 	1		;52. MOSH FROM PEST4
        .byte 	1		;53. FLEA FROM PEST4
        .byte 	2		;54. BBUG FROM PEST4
        .byte 	4		;55. MOON BEE FROM PEST7 FOR MOONBASE
        .byte 	3		;56. SQUID FROM PEST5
        .byte 	0		;57. SHARK FROM PEST5
        .byte 	1		;58. JFISH FROM PEST5
        .byte 	1	        ;59. SMFSH FROM PEST5
        .byte 	2	        ;60. FISH FROM PEST5
        .byte 	-1	        ;61. MUTFSH1 FROM PEST5
        .byte 	4	        ;62. MUTFSH2 FROM PEST5 
        .byte 	2	        ;63. MONST1 FROM PEST6
        .byte 	4	        ;64. MONST2 FROM PEST6 
        .byte 	1	        ;65. MONST3 FROM PEST6
        .byte 	3		;66. MONST4 FROM PEST6
        .byte 	3		;67. MONST5 FROM PEST6
        .byte 	5		;68. NEST FROM PEST7
        .byte      4		;69. FLOT FROM PEST7
        .byte      3		;70. CRAW FROM PEST7
	.byte 	0		;71. INVISIBLE HERO - SHOOTS DROPS
	.byte      1		;72. FLY FOR HOUSE1
	.byte      -1              ;73. DRAGFY FOR WARE1
	.byte 	5		;74. CENT FOR WARE
	.byte 	0		;75. BEE HIVE
	.byte 	0		;76. CASE FOR WHEREHOUSE
	.byte      3               ;77. GRASSHOPPER IN WAREHOUSE	-JGT 
        .byte 	5		;78. DEATH1 FOR WATER
        .byte 	4		;79. DEATH2 FOR WATER
        .byte      6		;80. KRAT FOR MOONBASE
	.byte 	3		;81. ROLLED PILLBUG FOR WAREHOUSE
        .byte 	0		;82. SHARK FROM PEST5
        .byte 	0		;83. SHOOTING BASE ON MOON
	
;THESE ARE THE POINTS SPRITE DEFFINITIONS TO USE FOR A GIVEN AMOUNT OF
;POINTS.  THEY WILL POP UP ABOVE ENEMIES THAT ARE KILLED.  0
;WILL PRODUCE NO DISPLAY.  THE VALUE HERE SHOULD BE A SPRITE ANIMATION
;DEFFINITION.  IT MUST BE VALID IN ALL WORLDS.  THE AMOUNTS OF POINTS
;ALLOWED ARE 0 TO 6.  SEE THE TABLE USE_PNTS TO SEE WHAT EACH VALUE AWARDS.

PNTS_PTR:		;POINTER TO SPRITE TO USE FOR GIVEN POINTS.
	.word 	0	;NULL POINTER MEANS POINTS NOT DISPLAYED.
	.word 	HUNDRED
	.word 	TWOHUNDR
	.word 	FIVEHUND
	.word 	THOUSAND
	.word 	TWOTHOU
	.word 	FIVETHOU

USE_PNTS:		;BCD NUMBER OF POINTS TO USE FOR EACH INDEX IN PNT_TAB.
			;PNT_TAB INDEX IS BYTE, MUST BE SHIFTED FOR WORD
			;VALUE FROM THIS TABLE.  THIS TABLE IS POINTS/100
			;AND SCORE SHOULD BE DISPLAYED WITH 2 ZEROS FOLLOWING
			;IT.

	.byte 	0,0	;  NO POINTS.		0 POINTS
	.byte 	1,0	; 100			1 POINTS
	.byte 	2,0	; 200			2 POINTS
	.byte 	5,0	; 500			3 POINTS
	.byte 	0,1	;1000			4 POINTS
	.byte 	0,2	;2000			5 POINTS
	.byte 	0,5	;5000 POINTS		6 POINTS

;THIS TABLE HAS THE SPRITE DEFFINTION POINTER FOR THE PRIZES 0-5 WHICH
;MAY BE HIDDEN IN AN ENEMY.  IF THE VALUE HERE IS 0, THE PRIZE IS AWARDED
;AS SOON AS THE ENEMY IS KILLED (THE ASSUMPTION IS THAT THE PICTURE OF
;THE ENEMY MAKES IT CLEAR THAT THERE IS A PRIZE IN HIM).

;FOR RAID 2020, THE LOCATION OF THE SPRITES FOR THE PRIZES IN EACH SET DIFFERS.
;SEE THE NOTES AS TO WHERE WE CAN PUT THINGS.

PRIZE_PTR:
	.word 	0
	.word 	0
	.word 	0
	.word 	0
	.word 	0
	.word 	0

;THIS TABLE HAS THE NUMBER OF SECONDS THAT THE PLAYER HAS TO PICK UP A
;GIVEN PRIZE.  15 IS 1 SECOND. MAX IS 254.  HEALTH IS AUTOMATICALLY 4 SECONDS.
;-1 = PRIZE DOES NOT GO AWAY (USE ONLY IF SCREEN CAN'T SCROLL).

PRIZE_TIME:
	.byte 	-1	;KEYCARD FOR MOONBASE
	.byte 	17*15
	.byte 	17*15
	.byte 	17*15
	.byte 	17*15
	.byte 	17*15

;THIS TABLE SPECIFIES WHEN A GIVEN PRIZE COUNT IS TO WRAP AND AWARD A
;FREE HERO.
;$2272
PRIZE_WRAP:
	.byte 	99
	.byte 	99
	.byte 	99
	.byte 	99
	.byte 	99
	.byte 	99

;***************** WORLD SPECIFICATION INFO ************************
;THE TABLES BELOW ALL HAVE 1 ENTRY PER WORLD AND EACH TABLE MUST
;BE FILLED IN FOR EACH WORLD.
;*******************************************************************

;THIS TABLE HAS THE BACKGROUND TO USE FOR A GIVEN WORLD.  THE TABLE
;MUST END WITH A 0.  THE FIRST WORLD AFTER RESET WILL ALWAYS BE WORLD 0.

USE_BACK:			;NAME OF BACKGROUND TO USE
	.word 	BOOTSCRN - $8000  	;0 BOOT
	.word 	HOUSE - $8000	 	;1
	.word 	HOTEL - $8000	 	;2
	.word 	WAREHOUS - $8000	;3
	.word 	HOUSE - $8000	 	;4
	.word 	SWAMP - $8000 	 	;5
	.word 	WAREHOUS - $8000	;6
	.word 	WATER - $8000	 	;7
	.word 	MOON - $8000 	 	;8
	.word 	MOONBASE - $8000	;9
	.word 	ENDSCRN	- $8000	;10 (END)

	MAX_WORLD = 11  		;FIRST ILLEGAL WORLD # FOR CHEAT MODE

;THIS EQUATE TELLS WHICH WORLD TO START THE GAME FROM WHEN THE START
;BUTTON IS PRESSED.  WHEN THIS WORLD IS ACTIVATED, THE CONTINUE FEATURE
;IS ARMED FOR THE MAX YOU SET HERE.

	FIRST_WORLD = $80	;INSTRUCTIONS WORLD 0.
	MAX_CONTINUES = 3

;THIS TABLE DETERMINES WHAT WORLD TO CONTINUE FROM IF THE USER USES THE
;CONTINUE FUNCTION (A+START) FROM A GIVEN WORLD.  HE CANNOT CONTINUE FROM
;AN INSTRUCTIONS SCREEN.  FOR EACH WORLD # THERE IS THE WORLD TO
;CONTINUE FROM.  THE WORLD TO CONTINUE FROM MAY BE AN INSTRUCTIONS WORLD
;IF DESIRED.

CONTINUE_WORLD:
	.byte 	0	;BOOT
	.byte 	$01	;WORLD 1
	.byte 	$02	;WORLD 2
	.byte 	$03	;WORLD 3
	.byte 	$04	;WORLD 4
	.byte 	$05	;WORLD 5
	.byte 	$06	;WORLD 6
	.byte 	$07	;WORLD 7
	.byte 	$08	;WORLD 8
	.byte 	$09	;WORLD 9
	.byte 	$01	;WORLD 10 (END)

;THIS TABLE DETERMINES THE LEFTMOST ALLOWED TEXT CELL LOCATION WITHIN
;THE CURRENT BACKGROUND.  YOU CAN USE PART OF A LARGER BACKGROUND
;AS ANOTHER BACKGROUND.  SET THE LEFT STARTING POSITION YOU WANT TO
;GRAB AND USE HERE AND THEN SET BACK_WIDE TO THE WIDTH.  IF YOU JUST WANT
;TO USE THE WHOLE THING, SET THESE ENTRIES TO 0 AND SET BACK_WIDE TO
;THE ACTUAL WIDTH OF THE BACKGROUND.

LEFT_BACK:
	.byte 	0		;BOOT
	.byte 	0	 	;1
	.byte 	0	 	;2
	.byte 	0	 	;3
	.byte 	0	 	;4
	.byte 	0	 	;5
	.byte 	0	 	;6
	.byte 	0	 	;7
	.byte 	0	 	;8
	.byte 	0	 	;9
	.byte 	0	 	;10 (END)

;THIS TABLE HAS THE ENTRY STARTING TEXT COLUMN WITHIN A GIVEN BACKGROUND.
;USE THIS TO START THE WORLD AT A PLACE OTHER THAN THE LEFT OF THE
;BACKGROUND.  THERE MUST BE AN ENTRY FOR EACH WORLD.  STARTING AT
;THIS OFFSET DOES NOT LIMIT THE LEFT OF THE SCREEN TO THIS COLUMN, THE
;HERO CAN WALK LEFT IF THE BACKGROUND WILL ALLOW THIS SCROLLING.

;THIS STARTING POINT IS WITHIN THE VIRTUAL SCREEN DEFINED BY LEFT_BACK.
;IN OTHERWORDS, IF LEFT_BACK SAYS COLUMN 32 WILL BE THE LEFTMOST IN
;A BACKGROUND, PUTTING 32 HERE WOULD PLACE YOU AT 64.

START_BACK:
	.byte 	0		;BOOT
	.byte 	4	 	;1
	.byte 	0	 	;2
	.byte 	0	 	;3
	.byte 	4	 	;4
	.byte 	0	 	;5
	.byte 	0	 	;6
	.byte 	0	 	;7
	.byte 	0	 	;8
	.byte 	32	 	;9
	.byte 	0	 	;10 (END)

;THIS TABLE DETERMINES HOW WIDE YOU WANT THE BACKGROUND TO BE FROM THE
;LEFTMOST ALLOWED POINT IN THE BACKGROUND AS DEFINED IN THE TABLE
;LEFT_BACK.

;THE LENGTH IS THE VISUAL LENGTH THE PLAYER WOULD SEE IF HE COULD SCROLL
;FROM THE LEFTMOST TO THE RIGHTMOST POSITION.  FOR "REAL" BACKGROUNDS
;THE MAXIMUM WILL BE 255 (THE DRAWING PROGRAM LIMITS TO 252 THOUGH).
;ANOTHER SPECIAL KIND OF BACKGROUND IS ALSO SUPPORTED.  THIS BACKGROUND
;REPEATS THE SAME SCREEN OVER AND OVER.  YOU CAN REPEAT EITHER 1 SCREEN
;OR 2. IF YOU SET BIT
;$8000 HERE, THE LENGTH IS THE LENGTH IN A CONTINUOUSLY SCROLLING BACKGROUND
;THAT SIMPLY REPEATS EVERY 64 COLUMNS.  THIS LENGTH CAN BE UP TO $3FFF
;IF DESIRED.    IF YOU SET $4000 HERE, THE SCREEN REPEATS EVERY 32 COLUMNS.

;NOTE THAT EVEN IF YOUR WORLD FLAGS TABLE IS RUNNING AT A LOWER RESOLUTION
;YOU STILL PUT THE VISUAL LENGTH HERE.  FOR INSTANCE, IF YOU HAVE A WORLD
;32 WIDE BUT YOU ARE RUNNING AT 1/16 RESOLUTION IN TABLERES YOU DON'T
;PUT 2 HERE, YOU PUT 32 HERE.  ALSO, THE LENGTH HERE DIVIDED BY THE RESOLUTION
;CANNOT EXCEED 256 SINCE THIS IS THE LONGEST WORLD FLAGS TABLE SUPPORTED.
;TYPICALLY, CONTINUOUS SCROLLING WORLDS WILL HAVE GREATLY REDUCED
;RESOLUTION AND VERY LONG LENGTHS HERE.

BACK_WIDE:
	.word 	32		;BOOT
	.word 	252	 	;1
	.word 	192	 	;2
	.word 	252	 	;3
	.word 	252	 	;4
	.word 	192	 	;5
	.word 	252	 	;4
	.word 	$8100	 	;7
	.word 	$8100	 	;8
	.word 	128	 	;9
	.word 	32	 	;10 (END)

;THIS EQUATE TELLS THE DEFAULT (WORLD BOOT) SINK LEVEL FOR THE HERO.  THIS
;IS THE LEVEL BELOW WHICH IF HIS FEET GOES HE IS PUT BEHIND THE BACKGROUND.
;THE DEATH LEVEL IS SET TO THE HERO'S HEIGHT BELOW THIS-1.  YOU CAN
;OVERRIDE THESE VALUES DURING GAME PLAY WITH A COMMAND.  THE LEVEL HERE
;IS THE SCAN LINE IN THE BACKGROUND.

	SINKLEVEL = $FF

;THIS TABLE TELLS WHERE TO ENTER EACH WORLD.  YOU SHOULD GIVE A PIXEL
;OFFSET POSITION, X FIRST, Y SECOND.  THE TOP LEFT OF THE BACKGROUND IS 0,0.
;THIS TABLE ONLY FINE TUNES THE HERO'S START TO THE PIXEL LEVEL.  USE
;WORLDX TO START THE WORLD AT A GIVEN TEXT CELL (PIXEL*8) BOUNDRY.
;THE VALUE HERE WILL BE THE PLACE TO PUT THE UPPER LEFT CORNER OF THE HERO
;BUT THE FLAGS TESTING TAKES PLACE FROM THE MIDDLE OF THE HERO ON THE X.

;THE STARTING Y POSITION IS WITHIN THE BACKGROUND, NOT ON SCREEN.

HEROSTART:			;HERO STARTING POSITION
	.byte 	8,160		;BOOT
	.byte 	15*8,152 	;1
	.byte 	136,144	 	;2
	.byte 	8,144	 	;3
	.byte 	15*8,152 	;4
	.byte 	128,16	 	;5
	.byte 	8,144	 	;6
	.byte 	32,80	 	;7
	.byte 	32,100	 	;8
	.byte 	200,16	 	;9
	.byte 	8,160	 	;10 (END)

;THIS TABLE TELLS WHAT HERO TO USE FOR EACH WORLD.
;IF YOU WANT TO CHANGE THE HERO AS THE GAME PROGRESSES,  USE A VALUE
;OF -1 AFTER THE INITIAL SETTING WHICH HERO TO USE FOR THE FIRST WORLD.
;A VALUE OF -1 MEANS NO CHANGE.

USE_HERO:	.byte  	0		;BOOT
		.byte 	1	 	;1
		.byte 	1	 	;2
		.byte 	1	 	;3
		.byte 	1	 	;4
		.byte 	2	 	;5
		.byte 	1	 	;6
		.byte 	3	 	;7
		.byte 	4	 	;8
		.byte 	1	 	;9
		.byte 	0	 	;10 (END)

;THIS TABLE IS USED AT WORLD START TO GET THE INFO ABOUT THE HERO AND HIS GUN
;IN THAT WORLD.  IT IS ALSO USED WITH THE DRESSING ROOM COMMAND WHICH ALLOWS
;THE HERO TO CHANGE APPEARANCE AND BEHAVIOR WITHIN A WORLD.  SEE COMMAND 27.
;THE VALUES IN THE TABLE ARE:
;
;HERO ANIMATION (0 MEANS NO CHANGE).  IT MUST BE A RIGHT FACING ANIMATION,
;	NOT A SPRITE.  IT MUST BE MINIMUM WIDTH 2 AND MINIMUM HEIGHT 2.
;BULLET (-1 MEANS NO CHANGE) FROM TABLE BULLETDATA
;JUMP POWER (JUMP_POWER TABLE REPLACEMENT.) -1=NO CHANGE.  HERO WILL
;	BE ABLE TO JUMP THIS HIGH IN PIXELS WHEN THE B BUTTON IS PRESSED.
;MOMENTUM LIMITS FOR HERO (X,Y) -1=NO CHANGE.  THIS IS THE MOMENTUM LIMIT
;	WHEN IN THE NO GRAVITY REGION.  THE HERO WILL BE ABLE TO TRAVEL
;	1.9 TIMES IN PIXELS PER SECOND BUT LOW 3 BITS IGNORED.  MAX X IS 64,
;	MAX Y IS 127.
;GRAVITY MOMENTUM LIMITS FOR HERO (X,Y) -1=NO CHANGE.  SAME AS ABOVE BUT
;	THESE PERTAIN TO WHEN THE HERO IS IN THE GRAVITY REGION OR IS
;	FALLING FROM A JUMP.
;GRAVITY VALUES (X,Y) (-1=NO CHANGE).  THE VALUES HERE WILL BE ADDED TO
;	THE HERO'S MOMENTUM WHEN IN THE GRAVITY REGION.  BE CAREFUL NOT
;	TO LET THE UP ARROW KEY'S ABILITY EXCEED GRAVITY UNLESS YOU WANT
;	A FLYING HERO AND WATCH OUT FOR DOUBLE KEY COMBOS THAT ADD TOGETHER
;	AND CAN OVERCOME GRAVITY.
;GRAVITY DISABLE FLAG (GRAVDIS).  THIS FLAG TELLS WHETHER THE INERTIA
;	CONTROL VALUE ASSOCIATED WITH THE ARROW KEYS BECOMES INOPERABLE
;	WHEN IN THE GRAVITY REGION.  THIS IS NEEDED BECAUSE THE INERTIA
;	VALUE WHEN HIGH CAN SOMETIMES OVERRIDE GRAVITY BY THRUSTING THE
;	HERO'S SPEED ABOVE THE RANGE GRAVITY CAN HANDLE. IN GENERAL,
;	FOR A NON-FLYING HERO SET 1 HERE TO DISABLE THE KEY WHEN IN THE
;	GRAVITY REGION, 0 TO ENABLE.  WHEN THERE IS A 1 HERE, NO Y
;	MOMENTUM CHANGES OTHER THAN GRAVITY OR JUMP WILL BE ALLOWED IN
;	THE GRAVITY REGION. X MOMENTUM CHANGES WILL BE ALLOWED BUT THE
;	INERTIA OVERRIDE WILL NOT.
;LOW AND HIGH SOLID CHAR VALUES
;	THESE BYTES HAVE THE LOW AND HIGH SOLID VALUES TO USE FOR A
;	THE HERO. YOU DON'T HAVE TO HAVE SOLID VALUES, USE $00 IF YOU
;	WANT TO DISABLE SOLID CHECKING FOR THAT WORLD.  THE FIRST VALUE WILL
;	BE USED AT WORLD START.  THE SECOND VALUE IS NO LONGER USED.
;FRICTION VALUES.  HORIZONTAL, VERTICAL.  THESE BYTES DETERMINE
;	THE FRICTION EXERTED ON MOVEMENTS.  THERE IS A
;	VALUE FOR HORIZONTAL MOVEMENTS AND A VALUE FOR VERTICAL MOVEMENTS.
;	FRICTION IS EXERTED ONCE EVERY 4 NMI CYCLES.  FRICTION WILL NOT BE
;	EXERTED IN A GIVEN AXIS IF ANY OTHER FORCE IS IN EFFECT (KEY PRESSED
;	OR GRAVITY EXERTED).  IF YOU WANT NO MOVEMENT ONCE THE KEY IS LIFTED,
;	SET THE VALUES TO THE SAME AS MOMLIMIT.
;CHANGE VULNERABILITY.  THIS BYTE SPECIFIES HOW MANY "HITS" THIS HERO CAN
;	TAKE BEFORE REVERTING TO THE HERO USED AT THE START OF THAT WORLD.
;	IT IS USED ONLY WITH THE DRESSING ROOM COMMAND WHICH CHANGES
;	THE WORLD BOOT HERO ANIMATION.  AT THE TIME THE DRESSING ROOM
;	COMMAND IS USED THE VALUE YOU PUT HERE IS LOADED INTO A COUNTER AND
;	EACH COLLISION WITH AN ENEMY OR HIT BY AN ENEMY BULLET LOWERS THE
;	COUNTER. WHEN IT RUNS OUT, THE HERO AUTOMATICALLY REVERTS TO THE
;	HERO TYPE USED WHEN THE WORLD WAS ACTIVATED.  PUT 0 HERE TO MAKE
;	THE HERO PERMANENT.  THE VALUE HERE IS IGNORED (SET TO 0) IF THE
;	ENTRY IS USED FOR A WORLD BOOT.  BUT THE SAME ENTRY MAY THEN
;	BE USED IN A DRESSING ROOM COMMAND AND THE VALUE WILL BE HONORED.
;	WHEN 0 IS USED IN A DRESSING ROOM COMMAND THIS HERO NUMBER BECOMES
;	THE ONE TO REVERT TO FOR FUTURE REVERSIONS.
;ENGINE SOUND.  THIS WORD SPECIFIES IF THERE IS A SOUND STRUCTURE TO BE
;	PLAYED WHEN THAT HERO IS ACTIVATED.  IT COULD BE A SONG THAT RUNS
;	OUT OR A REPEATING SOUND SUCH AS FOR AN ENGINE.  BUT YOU STILL HAVE
;	TO PLAN THE VOICE USAGE NOT TO CONFLICT WITH THE MUSIC.  PUT
;	"NOSOUND" HERE IF THERE IS NONE.
;MOMENTUM VALUES. THESE 8 BYTES SPECIFY THE EFFECTS THAT THE LEFT, RIGHT, 
;	UP AND DOWN ARROW KEYS WILL HAVE ON THE HERO'S X TRAVEL AND Y 
;	TRAVEL MOMENTUM.  EACH BYTE IS A SIGNED VALUE FOR THE AMOUNT TO 
;	ADD TO A PARTICULAR MOMENTUM VALUE.  THE BYTES ARE:
;	LEFTX, LEFTY, RIGHTX, RIGHTY, UPX, UPY, DOWNX, DOWNY.
;	+ VALUES ARE RIGHT AND DOWN.  - VALUES ARE UP AND LEFT.  
;	THE MAX VALUE IS $40.  THE NEGATIVE VALUE MAY BE $FF DOWN TO 
;	$B0
;INERTIA VALUES.  THESE BYTES CONTROL INERTIA FOR THE HERO'S MOVEMENTS.  
;	WHEN THE HERO DESIRES TO COMPLETELY REVERSE DIRECTION, THESE BYTES
;	ARE USED TO DECIDE IF HIS DIRECTION MOMENTUM CHANGE WILL BE INSTANT 
;	OR GRADUAL.  IF YOU PUT $80 HERE THE CHANGE WILL NOT TAKE PLACE 
;	AND THE NORMAL MOMENTUM WILL SIMPLY BE ADDED.  IF YOU PUT ANY OTHER 
;	VALUE HERE, THIS MUCH MOMENTUM WILL REPLACE WHATEVER IS CURRENTLY 
;	THERE (THE SIGN WILL BE ADJUSTED TO MATCH THE SIGN THAT THE KEY 
;	ATTEMPTS TO CREATE).  THEN THE VALUE ASSOCIATED WITH THE PROPER 
;	KEY WILL BE ADDED TO THIS VALUE. THE FIRST BYTE IS THE INERTIA 
;	VALUE FOR THE X AXIS, THE SECOND FOR THE Y.
;INIT OPTIONS.  THIS BYTE CONTAINS OPTIONS USED AT THE TIME THE HERO IS
;	INITIALIZED.  EACH BIT IN THE BYTE HAS A MEANING:
;	$07 = 3 BITS USED WITH THE ALIGN ON X OR Y BITS.  GIVES ALIGN VALUE.
;		TYPICAL VALUE IS 2.
;	$08 = UNUSED.  SET TO 0.
;	$10 = TRUE IF HERO ANIMATION ALIGNS TO Y AXIS
;	$20 = TRUE IF HERO ANIMATION ALIGNS TO X AXIS
;	$C0 = UNUSED.  SET TO 0.

HEROTABLE:	.word 	BOOTHERO		;ENTRY 0 DUMMY BOOT UP HERO
		.byte 	0
		.byte 	40
		.byte 	32,32,32,96
		.byte 	0,16
		.byte 	1
		.byte 	$80, $80
		.byte 	40,40
		.byte 	0
		.word 	NOSOUND
		.byte 	$00,$00,$00,$00,$00,$00,$00,$00
		.byte 	24,24	 	
		.byte 	$22

		.word 	HERO			;ENTRY 1. NORMAL HERO
		.byte 	0
		.byte 	40
		.byte 	40,40,40,104
		.byte 	0,16
		.byte 	1
		.byte 	$E0, $E0
		.byte 	40,40
		.byte 	0
		.word 	NOSOUND
		.byte 	$FC,$00,$04,$00,$00,$FC,$00,$04
		.byte 	24,24
		.byte 	$22

		.word 	HELI			;ENTRY 2
		.byte 	3			;HELICOPTER (SWAMP)
		.byte 	0			;CHANGED SECOND FROM A
		.byte 	32,32,32,32		;3 TO A 2 -WAM
		.byte 	0,0
		.byte 	0
		.byte 	0,0
		.byte 	1,3
		.byte 	3
		.word 	HOVERSND
		.byte 	$FC,$00,$04,$00,$00,$FC,$00,$04
		.byte 	24,24
		.byte 	$00

		.word 	HEROW			;ENTRY 3
		.byte 	6			;UNDER WATER
		.byte 	0
		.byte 	32,32,32,32
		.byte 	0,0
		.byte 	0
		.byte 	0,0
		.byte 	1,3
		.byte 	3
		.word 	NOSOUND
		.byte 	$FC,$00,$04,$00,$00,$FC,$00,$04
		.byte 	24,24
		.byte 	$00

		.word 	HERO			;ENTRY 4
		.byte 	3			;SPACE HERO
		.byte 	100
		.byte 	40,40,40,104
		.byte 	0,8
		.byte 	1
		.byte 	0,0
		.byte 	40,40
		.byte 	3
		.word 	NOSOUND
		.byte 	$FC,$00,$04,$00,$00,$FC,$00,$04
		.byte 	24,24
		.byte 	$22

		.word 	HERO			;ENTRY 5. MOONBASE HERO
		.byte 	0
		.byte 	40
		.byte 	40,40,40,104
		.byte 	0,16
		.byte 	1
		.byte 	$E1, $E1
		.byte 	40,40
		.byte 	0
		.word 	NOSOUND
		.byte 	$FC,$00,$04,$00,$00,$FC,$00,$04
		.byte 	24,24
		.byte 	$22

                .word 	HEROSH			;ENTRY 6
		.byte 	5			;NON MOVING BULLET 5
		.byte 	40
		.byte 	40,40,40,104
		.byte 	0,16
		.byte 	1
		.byte 	$E0, $E0
		.byte 	40,40
		.byte 	0
		.word 	NOSOUND
		.byte 	$FC,$00,$04,$00,$00,$FC,$00,$04
		.byte 	24,24
		.byte 	0

		.word 	HEROSH			;ENTRY 7
		.byte 	5			;SPACE HERO
		.byte 	100
		.byte 	40,40,40,104
		.byte 	0,8
		.byte 	1
		.byte 	0,0
		.byte 	40,40
		.byte 	3
		.word 	NOSOUND
		.byte 	$FC,$00,$04,$00,$00,$FC,$00,$04
		.byte 	24,24
		.byte 	$22


	DRESSWIDE = 29		;WIDTH OF EACH TABLE ENTRY

;HERE ARE THE ENGINE SOUNDS FOR A GIVEN HERO.

JETSND:
	.byte 	VOICE3,LOADALL,$20,$15,$0F,$02,REPLAY

CYCLE:
	.byte 	VOICE1,LOADALL,$39,$98,$EF,$06,REPLAY

SPACESHIP:
	.byte 	VOICE3,LOADALL,$20,$00,$3F,$00,REPLAY

SWAMPSND:
	.byte 	VOICE1,LOADALL,$20,$02,$FF,$04,REPLAY

HOVERSND:
	.byte 	VOICE3,LOADALL,$20,$0D,$FF,$00,REPLAY

;THIS TABLE HAS THE BULLET TYPES THAT THE HERO MAY USE THROUGH THE GAME.
;FOR EACH BULLET TYPE THERE ARE SEVERAL ENTRIES. THEY ARE:
;
;NAME OF ANIMATION
;NAME OF SOUND TO MAKE
;AMOUNT TO LAUNCH DOWN
;PATH LIST TO USE.  1 WORD.  SEE TABLES BELOW THE SOUNDS.
;POWER (1,2, OR 4)
;NUMBER OF 1/15 SECOND INTERVALS TO FREEZE ENEMY WHEN SHOT.
;NUMBER OF HITS HERO CAN TAKE BEFORE NEW WEAPON IS LOST.  0=PERMANENT.
;	BE SURE TO MAKE THE FIRST WEAPON IN EACH WORLD PERMANENT.
;MAXIMUM STEPS THROUGH EACH TABLE BULLET WILL
;	 TAKE IF IT DOESN'T GO OFF SCREEN.
;NUMBER OF 1/15 SECOND INTERVALS BETWEEN SHOTS.

BULLETDATA:
		.word 	BULLET1 	;ENTRY 0.  SINGLE SPAY OF PESTICIDE
		.word 	HEROGUN
		.byte 	9
		.word 	SLOWLINE
		.byte 	1
		.byte 	15
		.byte 	0
		.byte 	64
		.byte 	64
		.byte 	4

		.word 	BULLET1		;ENTRY 1.  FASTER PESTICIDE
		.word 	HEROGUN		;BUT STILL SINGLE POWER
		.byte 	9
		.word 	FASTLINE
		.byte 	1
		.byte 	2
		.byte 	0
		.byte 	64
		.byte 	64
		.byte 	4

		.word 	BULLET2		;ENTRY 2 FOR BULLET BALL
		.word 	CYCLESHOT	;FAST BALL.
		.byte 	7
		.word 	FASTLINE
		.byte 	1
		.byte 	2
		.byte 	0
		.byte 	64
		.byte 	64
		.byte 	4

		.word 	HELISHOT 	;ENTRY 3 FOR HELICOPTER
		.word 	HSHOOTSND
		.byte 	4
		.word 	SLOWL2		;DROPS FAST, HEAVY FREEZE POWER
		.byte 	1
		.byte 	8
		.byte      0		;PERMANENT
		.byte 	64
		.byte 	64
		.byte 	8

		.word 	BULLET2 	;ENTRY 4 FOR LOOP GUN
		.word 	TURRETSND
		.byte 	4
		.word 	LOOP		;LOOPS
		.byte 	1
		.byte 	10
		.byte 	6		;LOOSE IT WITH 6 HITS
		.byte 	64
		.byte 	64
		.byte 	4

		.word 	BULLET3 	;ENTRY 5.  HAMMER BULLET RTB
		.word 	HEROGUN
		.byte 	2		;LAUNCH BULLET 0 DOWN
		.word 	HAMMERX		;NON MOVING BULLET!
		.byte 	1
		.byte 	8
		.byte 	0
		.byte 	1
		.byte 	1
		.byte 	2

		.word 	SPEAR 		;ENTRY 6.  SPEAR SHOT
		.word 	HEROGUN
		.byte 	11
		.word 	FASTLINE
		.byte 	1
		.byte 	8
		.byte 	0
		.byte 	64
		.byte 	64
		.byte 	6

	BULLETWIDE = 13		;WIDTH OF EACH TABLE ENTRY

;THESE SOUNDS ARE FOR THE GUNS.

HEROGUN:
	.byte 	VOICE3,LOADALL,$42,$80,$7D,$50,PAUSE+N2,ENDPLAY

;;SPACESHOT:
;;FREEZESND:
;;.byte 	VOICE1,LOADALL,$1F,$84,$9D,$70
;;.byte 	PAUSE+N4,ENDPLAY

CYCLESHOT:
.byte 	VOICE3,LOADALL,$0F,$00,$FF,$0F
.byte 	PAUSE+N4,ENDPLAY

;;HOVERSHOT:
;;.byte 	VOICE1,LOADALL,$E0,$84,$00,$01
;;.byte 	PAUSE+N4,ENDPLAY

HSHOOTSND:
.byte 	VOICE3,LOADALL,$C8,$00,$7D,$32
.byte 	PAUSE+N2,ENDPLAY


;THESE ARE THE BULLET PATH LISTS.  THE LIST CONSISTS OF X,Y MOVEMENTS,
;1 BYTE FOR EACH.  THE BULLET LIST ASSUMES A RIGHT TRAVELING BULLET.
;IT IS REVERSED FOR LEFT TRAVEL AND THE COMPONENTS ARE TRADED FOR
;VERTICAL.  THE LIST SHOULD END WITH A BYTE OF 0.
;REMEMBER, NO X VALUE OF 0 CAN BE USED SINCE ITS THE END MARK!

SLOWL2:	        

;modified 05/09/90 by JGT

		.byte 	8,2
		.byte 	6,4
		.byte 	6,6
		.byte 	6,8
		.byte 	4,10
		.byte 	4,12
		.byte 	2,14
		.byte 	2,14
		.byte 	2,14
		.byte 	2,14
		.byte 	2,14
		.byte 	2,14
		.byte 	2,14
		.byte 	2,14
		.byte 	2,14
		.byte 	2,14
		.byte 	2,14
		.byte 	2,14
		.byte 	2,14
		.byte 	2,14
		.byte 	2,14
		.byte 	2,14
		.byte 	2,14
		.byte 	0

SLOWLINE:	.byte 	2,0
		.byte 	0

HAMMERX:        .byte      1,0
                .byte     -1,0
                .byte      0

FASTLINE:	.byte 	10,0
		.byte 	0

ZIGZAG:		.byte 	10,10
		.byte 	10,-10
		.byte 	10,-10
		.byte 	10,10
		.byte 	0

LOOP:		.byte 	32,-6
		.byte 	32,6
		.byte 	-6,24
		.byte 	-24,-6
		.byte 	-6,-18
		.byte 	0

;THIS TABLE HAS THE BACKGROUND CHARACTER SET TO USE FOR A GIVEN WORLD.

USE_BCHRS:
		.byte  	0		;BOOT
		.byte 	2	 	;1 (HOUSE)
		.byte 	8	 	;2 (HOTEL)
		.byte 	4	 	;3 (WAREH)
		.byte 	2	 	;4 (HOUSE2)
		.byte 	6	 	;5 (SWAMP)
		.byte 	4	 	;6 (WAREH2)
		.byte 	10	 	;7 (WATER)
		.byte 	12	 	;8 (MOON)
		.byte 	14	 	;9 (MOONBASE)
		.byte 	1	 	;10 (END OF GAME)

;THIS TABLE HAS THE SPRITE CHARACTER SET TO USE FOR A GIVEN WORLD. 2 HIGH
;MODE IS NOT SUPPORTED.  THE SPRITE CHARACTER SET MUST BE IN THE SAME
;BANK AS THE BACKGROUND CHARACTER SET BUT THEY MAY OVERLAP.

USE_SCHRS:
		.byte  	0		;BOOT
		.byte 	3	 	;1
		.byte 	9	 	;2
		.byte 	5	 	;3
		.byte 	3	 	;4
		.byte 	7	 	;5
		.byte 	5	 	;6
		.byte 	11	 	;7
		.byte 	13	 	;8
		.byte 	15	 	;9
		.byte 	1	 	;10 (END OF GAME)

;THIS TABLE HAS THE BACKGROUND PALETTE TO USE FOR A GIVEN WORLD #.

USE_BPAL:			;NAME OF BACKGROUND PALETTE TO USE
	.word 	BOOTPAL  	;BOOT
	.word 	HOUSEPAL  	;1
	.word 	HOTELPAL  	;2
	.word 	WAREPAL  	;3
	.word 	HOUSE2PL  	;4
	.word 	SWAMPPAL  	;5
	.word 	WARE2PAL  	;6
	.word 	WATERPAL  	;7
	.word 	MOONPAL  	;8
	.word 	BASEPAL  	;9
	.word 	BOOTPAL  	;10 (END)

;THIS TABLE HAS THE SPRITE PALETTE TO USE FOR A GIVEN WORLD #.

USE_SPAL:			;NAME OF SPRITE PALETTE TO USE
	.word 	BOOTPAL  	;BOOT
	.word 	HOUSE_SP    	;1
	.word 	HOTEL_SP  	;2
	.word 	WARE_SP  	;3
	.word 	HOUS2_SP  	;4
	.word 	SWAMP_SP  	;5
	.word 	WARE2_SP  	;6
	.word 	WATER_SP	;7
	.word 	MOON_SP  	;8
	.word 	BASE_SP  	;9
	.word 	BOOTPAL  	;10 (END)

;SOME OF THE TABLES THAT FOLLOW CONTROL THE MOVEMENT OF THE HERO AND
;OTHER CHARACTERS ON SCREEN.  THEY PERTAIN TO JOYSTICK MOVEMENT AND
;GRAVITY AND FRICTION AND LIMITS OF MOVEMENT IN GENERAL.  IN ORDER TO
;UNDERSTAND THESE TABLES, AN UNDERSTANDING OF THE INTENT OF THIS
;STATE MACHINE IN REGARDS TO HERO ORIENTED "HOP, SKIP, AND JUMP" GAMES
;IS HELPFUL.  THE STATE MACHINE WILL DO OTHER TYPES OF GAMES, BUT
;THESE TABLES WERE DESIGNED TO MAKE THE STATE MACHINE BEHAVE ITSELF NICELY
;FOR THESE SPECIFIC CATEGORY OF GAMES.

;THE GAME "SUPER MARIO" IS BASICALLY A TWO DIMENSIONAL GAME.  MARIO
;CAN GO HORIZONTALLY OR VERTICALLY.  THIS STATE MACHINE EASILY SUPPORTS
;THAT THROUGH THE USE OF GRAVITY AND SOLID CHARACTER DEFFINITIONS.
;BUT IT ALSO SUPPORTS A "THREE DIMENSIONAL ZONE".  THIS ZONE SHOULD BE
;LAYED OUT AT ONE PLACE ON THE SCREEN SORT OF LIKE A ROAD THAT IS VIEWED
;FROM A 45 DEGREE ANGLE.  WHILE THE HERO'S FEET ARE ON THIS ROAD
;HE WILL WALK AT AN ANGLE THAT SUGGESTS HE IS WALKING HORIZONTALLY OR
;VERTICALLY WITH RESPECT TO THIS ROAD.  BUT HE SHOULD ALSO BE ABLE TO
;JUMP UP AND RETURN TO HIS RELATIVE POSITION ON THE ROAD AS WELL AS
;DEVIATE FROM THIS 3D AREA AND GO INTO A MARIO 2D MODE ON A WALL BEHIND
;THE ROAD.  THIS 3D ZONE IS SUPPORTED AS A "NO GRAVITY" REGION.  WITHIN
;THIS REGION, GRAVITY WILL NOT EFFECT THE HERO.  THEN IT IS UP TO THE
;PERSON SETTING THE MOMENTUM TABLES TO MAKE THE HEROS MOVEMENTS BE LOGICAL
;WITH RESPECT TO THE PERSPECTIVE HE HAS DESIGNED.  FOR BEST UNDERSTANDING
;OF THIS, SEE THE GAME "RAID 2020" WHICH WAS MADE WITH THIS STATE MACHINE.
;THE FINAL COMMENT I NEED TO ADD IS THAT WHEN THE HERO RUNS TOWARDS
;THE TOP OF THE NO GRAVITY REGION, AT THAT EXACT JUNCTURE HIS Y MOMENTUM
;WILL BE SET TO 0 SO THAT HE DOESN'T RUN UP THE SIDE OF THE WALL BEHIND THAT
;REGION.  IF HE THEN JUMPS AT THAT POINT HE CAN ACT NORMALLY AND GRAVITY
;WILL PULL HIM DOWN.  WHEN HE JUMPS WITHIN THE NO GRAVITY REGION, A
;VARIABLE TEMPORARILY ENABLING GRAVITY, BUT ONLY FOR THE AMOUNT OF THE
;JUMP IS SET.  THIS THEN MAKES HIM FALL BACK TO THE POINT WITHIN THE 3D
;AREA THAT HE JUMPED FROM.


;THIS TABLE SPECIFIES A SCREEN VERTICAL RANGE IN WHICH GRAVITY WILL NOT
;BE APPLIED TO THE HERO OR TO ENEMIES SUBJECT TO GRAVITY.  THIS CAN BE USED
;IN A "THREE DIMENSIONAL" WORLD.  FOR INSTANCE, THERE MIGHT BE A ROAD RUNNING
;ACROSS THE SCREEN AND YOU WANT THE CHARACTER TO BE ABLE TO WALK ON THAT
;ROAD FREELY.  SOMETIMES YOU WANT A "TWO DIMENSIONAL" WORLD.  IN THIS CASE,
;PUT THE NON-GRAVITY RANGE AT THE EXTREME BOTTOM OF THE WORLD ($FF,$FF)
;SO THAT IT WON'T BE ENCOUNTERED.  THE TABLE HAS 2 BYTES FOR EACH WORLD
;(BOOT SCREEN IS WORLD 0).  THE FIRST IS THE TOP SCAN LINE OF THE RANGE,
;THE SECOND IS THE BOTTOM.  THE SCAN LINES REFER TO THE BACKGROUND, NOT
;THE ACTUAL SCAN LINE ON THE TV WHICH WILL BE MOVED DOWN TO CENTER THE IMAGE.

;CHARACTERS SUBJECT TO GRAVITY (THE HERO, ENEMIES WHO RESPOND TO GRAVITY)
;WILL HAVE THEIR VERTICAL MOMENTUM SET TO ZERO WHEN THEY HIT THE TOP
;OF THIS NO GRAVITY REGION.  THE NO GRAVITY REGION SHOULD BE PUT AT THE
;BOTTOM OF THE SCREEN AGAINST THE BOTTOM SCREEN LIMIT (YOU SHOULD NOT
;TRY TO PUT A NO GRAVITY REGION IN THE MIDDLE).

NOGRAVITY:
	.byte 	8,255		;BOOT
	.byte 	176,255	 	;1
	.byte 	176,255	 	;2
	.byte 	255,255	 	;3
	.byte 	176,255	 	;4
	.byte 	255,255	 	;5
	.byte 	255,255	 	;6
	.byte 	0,255	 	;7
	.byte 	160,255	 	;8
	.byte 	255,255	 	;9
	.byte 	8,255		;10 (END)

;THIS TABLE ALLOWS YOU TO LIMIT THE HERO OR ENEMIES VERTICAL LOCATION ON
;SCREEN WITHOUT HAVING TO PUT ROWS OF SOLID IN THEIR WAY.  THERE ARE
;2 VALUES FOR EACH WORLD.  THE FIRST BYTE IS THE TOPMOST SCAN LINE WITHIN
;THE BACKGROUND THAT WILL BE ALLOWED (USE 0 TO DISABLE THIS).  THE
;SECOND IS THE BOTTOMMOST (USE -1 TO DISABLE THIS).  THE HERO'S HEAD (TOP)
;WILL NOT BE ALLOWED TO GO ABOVE THE TOP AND HIS FEET (BOTTOM) WILL NOT
;BE ALLOWED TO GO BELOW THE BOTTOM.

SCREENLIMITS:
	.byte 	0,191		;BOOT
	.byte 	0,190	 	;1
	.byte 	0,190	 	;2
	.byte 	0,191	 	;3
	.byte 	0,190	 	;4
	.byte 	0,190	 	;5 (SWAMP)
	.byte 	0,191	 	;6
	.byte 	12,175	 	;7
	.byte 	0,190	 	;8
	.byte 	0,191	 	;9
	.byte 	0,191		;10 (END)

;THIS TABLE HAS THE SOLID CHARACTER VALUE TO USE FOR ENEMIES IN A GIVEN
;WORLD.  THE HERO HAS HIS OWN VALUES IN HEROTABLE SINCE HE CAN CHANGE AT
;WILL.  USE 0 FOR NONE.

USE_SOLID:
		.byte  	0		;BOOT
		.byte 	$E0	 	;1
		.byte 	$DF	 	;2
		.byte 	$D3	 	;3
		.byte 	$E0	 	;4
		.byte 	0	 	;5
		.byte 	$D3	 	;6
		.byte 	0	 	;7
		.byte 	0	 	;8
		.byte 	$DF	 	;9
		.byte  	0		;10 (END)

;THIS TABLE SPECIFIES THE Y DIRECTION GRAVITY FOR ENEMIES IN A GIVEN WORLD.
;IT IS USED WHEN THE ENEMYOPTS FLAG SPECIFIES AN ENEMY USES GRAVITY.  UNLIKE
;THE HERO, THERE CAN BE NO X DIRECTION GRAVITY FOR AN ENEMY.

GRAVITY:
		.byte  	0		;BOOT
		.byte 	16	 	;1
		.byte 	16	 	;2
		.byte 	16	 	;3
		.byte 	16	 	;4
		.byte 	16	 	;5 (SWAMP)
		.byte 	16	 	;6
		.byte 	16	 	;7 (WATER)
		.byte 	16	 	;8
		.byte 	16	 	;9
		.byte  	0		;10 (END)

;THIS TABLE SPECIFIES AN X DIRECTION SCROLL (MUST BE +) THAT YOU CAN ADD
;EACH 1/15 SECOND TO THE WORLD'S SCROLL.  THIS ALLOWS YOU TO MAKE 
;WORLDS THAT FORCE A VEHICLE TO FLY ALONG.  THE VEHICLE CAN THEN 
;MOVE TO THE LEFT OR RIGHT BUT CANNOT
;AVOID CONTINUING ON IN THAT WORLD.  THE VALUE YOU PUT HERE IS IN
;PIXELS PER 1/15 SECOND.  VALUES ARE 0 (NONE) TO 4.  BE CAREFUL BECAUSE
;A FAST MOVING HERO COMBINED WITH SCROLL HERE CAN MAKE YOU PASS OVER
;BACKGROUND COMMANDS IF THE HERO TRAVELS MORE THAN 8 PIXELS EVERY 1/15
;SECOND.  

BACKSCROLL:
		.byte  	0		;BOOT
		.byte 	0	 	;1 
		.byte 	0	 	;2 
		.byte 	0	 	;3 
		.byte 	0	 	;4 
		.byte 	0	 	;5 
		.byte 	0	 	;6 
		.byte 	0	 	;7 
		.byte 	0	 	;8 
		.byte 	0	 	;9
		.byte  	0		;10 (END)

;THIS TABLE HAS THE LEFT AND RIGHT POINTS ON SCREEN AT WHICH TO SCROLL
;FOR A GIVEN WORLD.  THE FIRST BYTE IS LEFT, THE SECOND IS RIGHT.  IF
;BACKSCROLL SPECIFIES A REQUIRED WORLD SCROLL THEN THESE SIMPLY BECOME
;THE LEFT AND RIGHT SCREEN LIMITS.

SCROLLS:
		.byte  	96,172		;BOOT
		.byte 	112,136	 	;1
		.byte 	88,160	 	;2
		.byte 	88,160	 	;3
		.byte 	112,136	 	;4
		.byte 	88,160	 	;5
		.byte 	88,160	 	;6
		.byte 	88,160	 	;7
		.byte 	88,160	 	;8
		.byte 	88,160	 	;9
		.byte  	96,172		;10 (END)

;THIS TABLE CONTAINS THE MUSIC TO USE FOR A GIVEN WORLD.  THERE IS NO
;MUSIC FOR INSTRUCTIONS WORLDS.  THE MUSIC IS ASSUMED TO BE 2 STRUCTURES.
;USE DUMMYEND IF YOU DON'T WANT TO USE 2.  TYPICALLY YOU WILL USE
;VOICE 0 AND VOICE 1 BUT THIS IS NOT MANDITORY.  IF YOU DON'T WANT TO
;USE 2 TRACKS, SET THE SECOND TO "NOSOUND".

USE_MUSIC:
	.word 	THEME2,THEME2A		;BOOT
	.word 	THEME1,THEME1A	 	;WORLD 1
	.word 	THEME1,THEME1A	 	;WORLD 2
	.word 	THEME1,THEME1A	 	;WORLD 3
	.word 	THEME1,THEME1A	 	;WORLD 4
	.word 	THEME1,THEME1A	 	;WORLD 5
	.word 	THEME1,THEME1A	 	;WORLD 6
	.word 	THEME1,THEME1A	 	;WORLD 7
	.word 	THEME1,THEME1A	 	;WORLD 8
	.word 	THEME1,THEME1A	 	;WORLD 9
	.word 	FMUSIC1,FMUSIC2		;END OF GAME

NOSOUND:	.byte 	ENDPLAY

;***************** INSTRUCTIONS SCREENS (WORLDS) INFO ********************

;THESE ARE THE INSTUCTIONS SCREENS.  INSTRUCTION SCREENS ARE INTENDED
;TO BE CUSTOM PROGRAMMING ACCORDING TO THE GAME'S NEEDS.  INSTRUCTIONS
;WORLDS ARE THOSE NUMBERED $80 TO $FE.  WHEN ENCOUNTERED, THE
;SPECIAL CODE FOR THESE WORLDS IS ENTERED IN THE USER_MAINLINE ROUTINE
;IN STATE.ASM.  THERE THE DECISION IS MADE AS TO WHAT TO DO WITH THE
;DATA.  THE TABLE BELOW SHOULD BE THE PRIMARY DATA TABLE FOR THIS LOGIC.
;THE CHEAT MODE LOGIC ALSO LOOKS AT THIS TABLE, BUT ONLY TO FIND THE
;NULL POINTER THAT MARKS THE END.

;THE FORMAT OF THIS TABLE IS:  1 WORD POINTER TO THE INSTRUCTIONS DATA.
;THE TABLE MUST END WITH A NULL.

;A SPECIAL INSTRUCTIONS WORLD MUST ALWAYS BE PRESENT.  IT IS THE GAME
;OVER WORLD.  IT SHOULD STATE THE A+START=CONTINUE PLUS WHATEVER ELSE
;YOU WANT.  THE VARIABLE BELOW DEFINES ITS NUMBER.  IT SHOULD BE FOLLOWED
;BY THE BOOT WORLD (-1) IN THE TABLE NEXT_WORLD.

	OVER_WORLD = $81		;INSTRUCTIONS WORLD TO USE FOR GAME OVER.

	INSTTIME = 10		;~1 SECONDS COUNT TO DISPLAY INSTRUCTIONS.
;;	WINTIME,10		;~1 SECONDS COUNT TO DISPLAY WINWORLD.
	WINWORLD = $0A		;INSTRUCTIONS WORLD FOR WHEN WE WIN.

USE_INST:
	.word 	STORY		;80. BOOT STORY
	.word 	GAME_OVER	;81. FOR GAME OVER

	MAX_INST = $82		;FIRST ILLEGAL INST WORLD # FOR CHEAT MODE

;THIS TABLE HAS THE CHARACTER SET TO USE WITH AN INSTRUCTIONS WORLD.

INST_SET:
	.byte 	0
	.byte 	0

INST_PAL:
	.word 	BOOTPAL
	.word 	BOOTPAL

;THIS TABLE HAS THE WORLD TO FOLLOW THE INSTRUCTIONS WITH.  1 BYTE.

NEXT_WORLD:
	.byte 	$1		;80. BOOT STORY
	.byte 	$FF		;81. FOR GAME OVER

;THIS TABLE HAS THE MUSIC TO USE FOR EACH INSTRUCTIONS WORLD IF ANY.
;NULL MEANS NONE.  TABLE FORMAT IS SAME AS USE_MUSIC

INST_MUSIC:
	.word 	0,0
	.word 	0,0

;********************* MESSAGES AREA **********************************

STORY:		.byte 	$0C
		.byte 	$0D,$0D
		.byte 	"     RONNIE THE SUPER RAT",$0D
		.byte 	"   IS PLOTTING TO TAKE OVER",$0D
		.byte 	"      THE WORLD WITH HIS",$0D
		.byte 	"     MUTATED SUPER PESTS",$24,$0D
		.byte 	$0D,$0D
		.byte 	"   YOU ARE KERNEL KLEANUP",$28,$0D
		.byte 	"IT IS YOUR JOB TO EXTERMINATE",$0D
		.byte 	" THE PESTS AND DESTROY RONNIE",$0D
		.byte 	" AND HIS SECRET PEST FACTORY",$0D
		.byte 	"   ON THE MOON",$28,"  GOOD LUCK",$24,$0D
		.byte 	$0D
		.byte 	"THE KERNEL KLEANUP FIGURE IS",$0D
		.byte 	" A REGISTERED TRADEMARK OF",$0D
		.byte 	"WESTERN EXTERMINATOR COMPANY",$0D
		
		.byte 	0

GAME_OVER:	.byte 	$0C
		.byte 	$0D,$0D,$0D,$0D,$0D,$0D
		.byte 	"   BETTER GET A NEW HAMMER",$24,$0D
		.byte      "          GAME OVER",$24,$0D
		.byte 	$0D,$0D,$0D,$0D,$0D,$0D
		.byte 	"  PRESS A",$29,"START TO CONTINUE",$28
		.byte  	0


;THIS IS THE SOUND ASSOCIATED WITH A GIVEN COMMAND.  SOME COMMANDS DO NOT
;HAVE SOUNDS AND THEY CAN BE SET TO DUMMYEND.

SND_TAB:			;SOUNDS TO USE
	.word 	DUMMYEND	;CMD 0
	.word 	PRIZE_SND
	.word 	PRIZE_SND
	.word 	DUMMYEND
	.word 	BOOM
	.word 	WATER_SND
	.word 	DUMMYEND
	.word 	DUMMYEND
	.word 	DUMMYEND	;CMD 8
	.word 	DUMMYEND
	.word 	FALLING
	.word 	DUMMYEND
	.word 	DUMMYEND
	.word 	ELEV_BUTTON
	.word 	ELEV_BUTTON
	.word 	DUMMYEND
	.word 	METAL_BOING		;CMD $10
	.word 	METAL_BOING
	.word 	METAL_BOING
	.word 	METAL_BOING
	.word 	DUMMYEND
	.word 	DUMMYEND
	.word 	BOOM
	.word 	METAL_BOING
	.word 	METAL_BOING	;CMD $18
	.word 	WATER_SND
	.word 	DUMMYEND
	.word 	DUMMYEND
	.word 	DUMMYEND
	.word 	DUMMYEND
	.word 	DUMMYEND
	.word 	DUMMYEND
	.word 	DUMMYEND	;20
	.word 	DUMMYEND
	.word 	DUMMYEND
	.word 	DUMMYEND
	.word 	DUMMYEND
	.word 	DUMMYEND
	.word 	DUMMYEND
	.word 	DUMMYEND
	.word 	DUMMYEND
	.word 	FALLING
	.word 	PRIZE_SND	;2A. PRIZES
	.word 	BOOM
	.word 	DUMMYEND
	.word 	DUMMYEND
	.word 	DUMMYEND
	.word 	DUMMYEND
	.word 	DUMMYEND	;30
	.word 	DUMMYEND
	.word 	DUMMYEND
	.word 	DUMMYEND
	.word 	DUMMYEND
	.word 	DUMMYEND
	.word 	DUMMYEND
	.word 	DUMMYEND
	.word 	DUMMYEND

PAUSENOISE:
ELEV_BUTTON:
.byte 	VOICE3,LOADALL,$04,$00,$83,$08
.byte 	PAUSE+N4,ENDPLAY

FALLING:
	.byte 	VOICE1,LOADALL,$1F,$96,$40,$40,PAUSE+N2,ENDPLAY

WATER_SND:
.byte 	VOICE3,LOADALL,$08,$81,$8C,$08
.byte 	PAUSE+N2,ENDPLAY

METAL_BOING:
.byte 	VOICE3,LOADALL,$88,$40,$8A,$0D
.byte 	PAUSE+N8,ENDPLAY

DUMMYEND:	.byte 	ENDPLAY

;THESE ARE SOUND EFFECTS THAT ARE GAME SPECIFIC.

TTYSND:
		.byte 	VOICE0, HIGH_STRING
		.byte 	C+N16, ENDPLAY

THEME1:	      ;CHANGED HBb TO HCs !!!!
;:PESTSONG(GAME)
.byte  VOICE0,BASE_PIANO
.byte  LF+N4,LC+N4,LF+N4,LC+N4,LF+N4,LC+N4,LF+N4,LC+N4
.byte  LC+N4,LG+N4,LC+N4,LG+N4,LC+N4,LG+N4,LC+N4,LG+N4,LF+N4,LC+N4,LF+N4,LC+N4
.byte  LF+N4,LC+N4,LF+N4,LC+N4,LC+N4,LG+N4,LC+N4,LG+N4,LC+N4,LG+N4,LC+N4,LG+N4				
.byte  LF+N4,LC+N4,LF+N4,LC+N4,LF+N4,LC+N4,LF+N4,LC+N4,LC+N4,LG+N4,LC+N4,LG+N4
.byte  LC+N4,LG+N4,LC+N4,LG+N4
.byte  LF+N4,LC+N4,LF+N4,LC+N4,LC+N4,LG+N4,LC+N4,LG+N4,LF+N4,LC+N4,LF+N4,LC+N4
.byte  LF+N4,LC+N4,LF+N4,LC+N4
.byte  LF+N4,LC+N4,LF+N4,LC+N4,LC+N4,LG+N4,LC+N4,LG+N4,LF+N4,LC+N4,LF+N4,LC+N4
.byte  LF+N4,LC+N4,LF+N4,LC+N4,LF+N4,LC+N4,LF+N4,LC+N4,LF+N4,LC+N4,LF+N4,LC+N4
.byte  REPLAY

THEME1A:
.byte  VOICE1,HARPSI
.byte  PAUSE+N8,C+N8,Ab+N8,G+N8,F+N8,Ab+N8,F+N4,PAUSE+N8,F+N8,Ab+N8,G+N8,F+N8 
.byte  Ab+N8,F+N4,PAUSE+N8,C+N8,G+N8,E+N16,F+N16,G+N8,E+N8,G+N4
.byte  PAUSE+N8,C+N16,D+N16,C+N8,LC+N16,LD+N16,LC+N8,LC+N16,LD+N16,LC+N8,PAUSE+N8
.byte  PAUSE+N8,C+N8,Ab+N8,G+N16,F+N16,G+N8,Ab+N8,F+N4,PAUSE+N8,C+N8,Ab+N8,G+N16,F+N16,G+N8,Ab+N8,F+N4
.byte  PAUSE+N8,C+N8,G+N8,E+N16,F+N16,G+N8,E+N8,G+N4
.byte  PAUSE+N8,C+N16,D+N16,C+N8,LC+N16,LD+N16,LC+N8,LC+N16,LD+N16,LC+N8,PAUSE+N8
.byte  PAUSE+N8,C+N8,Bb+N8,Ab+N8,G+N8,Ab+N8,G+N8,F+N8,PAUSE+N8,C+N8,Bb+N8,Ab+N8,G+N8,Ab+N8,G+N8,F+N8
.byte  G+N4,PAUSE+N4,PAUSE+N4,PAUSE+N4,PAUSE+N8,C+N16,D+N16,C+N8,LC+N16,LD+N16,LC+N8
.byte  C+N16,D+N16,C+N8,PAUSE+N8
.byte  PAUSE+N4,F+N8,F+N8,G+N8,Ab+N8,F+N8,PAUSE+N8,PAUSE+N4,G+N8,G+N8,Ab+N8,Bb+N8,G+N8,PAUSE+N8
.byte  F+N4,Ab+N8,Bb+N16,C+N16,F+N4,Ab+N8,Bb+N16,C+N16
.byte  C+N8,Ab+N8,Bb+N8,G+N8,Ab+N8,F+N8,G+N8,E+N8,F+N4,Ab+N8,G+N8,F+N8,Ab+N8,F+N4
.byte  PAUSE+N8,F+N8,E+N8,Eb+N8,D+N8,Db+N8,C+N8,B+N8,PAUSE+N8,F+N8,E+N8,Eb+N8,D+N8,Db+N8,C+N8,B+N8
.byte  B+N16,B+N16,C+N8,PAUSE+N4,PAUSE+N2,PAUSE+N2,PAUSE+N2,PAUSE+N1
.byte  REPLAY

THEME2:
;	:PESTERMINATOR(BOOTMUSIC)
.byte  VOICE0,BASE_PIANO
.byte  LAb+N4,LEb+N4,LAb+N4,LEb+N4,LAb+N4,LEb+N4,LAb+N4,LEb+N4,LEb+N4,LBb+N4,LEb+N4,LBb+N4
.byte 	LEb+N4,LBb+N4,LEb+N4,LBb+N4	
.byte  LAb+N4,LEb+N4,LAb+N4,LEb+N4,LAb+N4,LEb+N4,LAb+N4,LEb+N4,LEb+N4,LBb+N4,LEb+N4,LBb+N4
.byte 	LEb+N4,LBb+N4,LEb+N4,LBb+N4	
.byte  LAb+N4,LEb+N4,LAb+N4,LEb+N4,LAb+N4,LEb+N4,LAb+N4,LEb+N4,LEb+N4,LBb+N4,LEb+N4,LBb+N4
.byte 	PAUSE+N1	
.byte  REPLAY

THEME2A:
.byte  VOICE1,HARPSI
.byte  Db+N16,D+N16,Eb+N8,Eb+N8,Eb+N8,Eb+N8,Eb+N8,Eb+N8,Eb+N8
.byte  Ab+N8,Eb+N8,Eb+N8,Eb+N8,Ab+N8,Eb+N8,Eb+N8,Eb+N8
.byte  Eb+N8,Bb+N8,Ax+N8,Bb+N8,Eb+N8,Bb+N8,Ax+N8,Bb+N8 
.byte  HEb+N8,HCs+N8,HFs+N8,HCs+N8,HEb+N8,HCs+N8,HFs+N8,HCs+N8
.byte  Db+N16,D+N16,Eb+N8,Eb+N8,Eb+N8,Eb+N8,Eb+N8,Eb+N8,Eb+N8
.byte  Ab+N8,Eb+N8,Eb+N8,Eb+N8,Ab+N8,Eb+N8,Eb+N8,Eb+N8
.byte  Eb+N8,Bb+N8,Ax+N8,Bb+N8,Eb+N8,Bb+N8,Ax+N8,Bb+N8 
.byte  HEb+N8,HCs+N8,HFs+N8,HCs+N8,HEb+N8,HCs+N8,HFs+N8,HCs+N8
.byte  Db+N16,D+N16,Eb+N8,Eb+N8,Eb+N8,Eb+N8,Eb+N8,Eb+N8,Eb+N8
.byte  Ab+N8,Eb+N8,Eb+N8,Eb+N8,Ab+N8,Eb+N8,Eb+N8,Eb+N8
.byte  Eb+N8,Bb+N8,Ax+N8,Bb+N8,Eb+N8,Bb+N8,Ax+N8,Bb+N8 
.byte  HEb+N8,HCs+N8,HFs+N8,HCs+N8,HEb+N8,HCs+N8,HFs+N8,HCs+N8
.byte  REPLAY

;Level completed music:
EMUSIC1:
.byte 	VOICE0,BASE_HARPSI
.byte 	LC+N16,LC+N16,LE+N16,LC+N16,LE+N16,LG+N2
.byte 	ENDPLAY

EMUSIC2:
.byte 	VOICE1,BASE_ELECPIANO
.byte 	C+N16,C+N16,E+N16,C+N16,E+N16,G+N2
.byte      ENDPLAY

;End-of-game music:
FMUSIC1:
.byte 	VOICE0,BASE_HARPSI
.byte 	LE+N16,LE+N16,LE+N16,LD+N16,LC+N16,LF+N4
.byte 	LE+N16,LE+N16,LE+N16,LD+N16,LC+N16,LG+N4
.byte 	LE+N16,LE+N16,LE+N16,LD+N16,LC+N16,LA+N8,LG+N16,LF+N16
.byte      LE+N8,LD+N8,PAUSE+N16
.byte 	LE+N16,LE+N16,LE+N16,LD+N16,LC+N16,LF+N4
.byte 	LE+N16,LE+N16,LE+N16,LD+N16,LC+N16,LG+N4
.byte 	LE+N16,LE+N16,LE+N16,LD+N16,LC+N16,LA+N8,LG+N16,LF+N16
.byte      LE+N8,LD+N4,LC+N2
.byte 	ENDPLAY

FMUSIC2:
.byte 	VOICE1,BASE_ELECPIANO
.byte 	E+N16,E+N16,E+N16,D+N16,C+N16,F+N4
.byte 	E+N16,E+N16,E+N16,D+N16,C+N16,G+N4
.byte 	E+N16,E+N16,E+N16,D+N16,C+N16,Ax+N8,G+N16,F+N16
.byte      E+N8,D+N8,PAUSE+N16
.byte 	E+N16,E+N16,E+N16,D+N16,C+N16,F+N4
.byte 	E+N16,E+N16,E+N16,D+N16,C+N16,G+N4
.byte 	E+N16,E+N16,E+N16,D+N16,C+N16,Ax+N8,G+N16,F+N16
.byte      E+N8,D+N4,C+N2
.byte 	ENDPLAY


;**************************************************************************
;THIS TABLE SPECIFIES THE LOCATION IN ROM OF THE CONTROL TABLES TO USE FOR
;EACH WORLD.  IF THE CONTROL TABLE IS STORED IN VIDEO ROM, BIT $8000 IS
;SET OFF.  SINCE ROM IS NORMALLY LOCATED AT AN ORG OF $8000, AN ADDRESS
;BELOW THIS IS OBVIOUSLY NOT IN PROGRAM ROM.  THE ADDRESS WILL BE USED
;TO FETCH FROM VIDEO ROM SPACE AFTER ADJUSTING FOR THE CORRECT PAGE.
;TABLES IN VIDEO ROM MUST NOT CROSS PAGE BOUNDRIES.  THE ENTIRE TABLE MUST
;BE PRESENT IN THE VIDEO BANK SPECIFIED.  VIDEO ADDRESS IS 32K SO THE
;RANGE OF 0 TO $7FFF IS ENOUGH TO SPECIFY ANY BANK AND OFFSET.

;DON'T PUT A LAUNCH ENEMY COMMAND INTO COLUMN 255 OF A TABLE.

USE_TABLE:			;THE TABLE TO USE FOR EACH WORLD NUMBER.
	.word 	BOOTTAB		;BOOT
	.word 	HOUSE1		;WORLD 1
	.word 	HOTELT		;WORLD 2
	.word 	WARE1		;WORLD 3
	.word 	HOUSE2		;WORLD 4
	.word 	SWAMPT		;WORLD 5
	.word 	WARE2		;WORLD 6
	.word 	WATERT		;WORLD 7
	.word 	MOONT		;WORLD 8
	.word 	MNBASET		;WORLD 9
	.word 	BOOTTAB		;END OF GAME

;THIS TABLE SPECIFIES THE RESOLUTION OF THE OF THE FLAGS TABLE.
;THE VALUE HERE SPECIFIES A SHIFT COUNT.  0 GIVES FULL RESOLUTION.
;1 DIVIDES BY 2 SO THAT THE TABLE CONTROLS A SCREEN TWICE AS WIDE
;(BUT YOU CAN ONLY PUT A COMMAND EVERY OTHER CELL. IN NO CASE CAN
;THE RESULTING TABLE BE LARGER THAN 256 ENTRIES.  HERE ARE
;THE LEGAL VALUES:
;0=FULL RESOLUTION
;1=HALF RESOLUTION (1 PER 2)
;2=QUARTER RESOLUTION (1 PER 4)
;3=EIGHTH RESOLUTION
;Greater than 3 is illegal!	-KHB

TABLERES:
	.byte 	3		;BOOT
	.byte 	1		;WORLD 1
	.byte 	1		;WORLD 2
	.byte 	1		;WORLD 3
	.byte 	1		;WORLD 4
	.byte 	1		;WORLD 5
	.byte 	1		;WORLD 6
	.byte 	2		;WORLD 7
	.byte 	2		;WORLD 8
	.byte 	0		;WORLD 9
	.byte 	3		;END OF GAME

TABLEP2:			;Power of 2 minus 1 table.	-KHB
	.byte 	0,1,3,7

;This table specifies the number of enemies that must be killed before the
;hero continues to the next level.

BUGTAB:
	.byte 	0  		;BOOT
	.byte 	49 		;WORLD 1 HOUSE1
	.byte 	41		;WORLD 2 HOTELT
	.byte 	43		;WORLD 3 WARE1
	.byte 	53 		;WORLD 4 HOUSE2
	.byte 	75 		;WORLD 5 SWAMPT
	.byte 	58 		;WORLD 6 WARE2
	.byte 	49 		;WORLD 7 WATERT
	.byte 	40 		;WORLD 8 MOONT
	.byte 	43		;WORLD 9 MNBASET


BOOTTAB:

;COL 0
	.byte 	$00,$00,$00,$00
	.byte 	$00,$00,$00,$00
	.byte 	$00,$00,$00,$00
	.byte 	$00,$00,$00,$00


HOUSE1:

;COL 0

	.byte 	$00,$00,00,00	

	.byte 	$20,$00,22,22			;ANT

	.byte 	$00,$00,00,00

	.byte 	$20,$00,21,22			;MOTH


;COL 8
	.byte 	$00,$00,00,$00

	.byte 	$20,$00,22,22			;ANT

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,00,$00

;COL 16
	.byte 	$16,$95,60,64			;Door to Living Room.

	.byte 	$16,$89,60,66			;DOOR TO MASTER BEDROOM

	.byte 	$00,$00,00,$00

	.byte 	$20,$00,27,22			;MOUSE


;COL 24
	.byte 	$16,$95,124,150		;Door to Master Bedroom.

	.byte 	$00,$00,00,0			

	.byte 	$16,$89,124,148		;Door to Small Bedroom.

	.byte 	$16,$95,156,160		;Door to Secondary Hall.


;COL 32
	.byte 	$3B,$56,108,$01		;STAIR COMMAND

	.byte 	$20,$00,27,22			;MOUSE

	.byte 	$20,$00,21,3			;MOTH

	.byte 	$00,$00,00,00

;COL 40
	.byte 	$20,$00,27,23			;MOUSE

	.byte 	$00,$00,00,$00		

        .byte      $3B,$8A,108,$01              ;STAIR COMMAND

	.byte 	$00,$00,00,$00

;LAUNCH BEES WE HAVE A BEE HIVE IN THE TREE

;COL 48
	.byte 	$00,$00,$00,00

	.byte 	$20,$00,22,23			;ANT

	.byte 	$21,$00,75,$08		;HIVE

	.byte 	$20,$80,24,18			;BBEE

;COL 56

	.byte 	$20,$00,22,23			;ANT

	.byte 	$24,$00,$00,$00		;RIGHT STOP SCROLL

;These 32 are in the Master Bedroom/Living Room.  **************************
						
	.byte 	$23,$00,$00,$00		;LEFT STOP SCROLL

	.byte 	$00,$00,$00,$00

;COL 64
	.byte 	$16,$95,0,16			;Door to Main Hall.S

	.byte 	$16,$89,0,18			;Door to Main Hall.

	.byte 	$00,$00,00,$00

	.byte 	$20,$00,23,22			;FSPIDER

;COL 72

	.byte 	$20,$00,21,8			;MOTH

	.byte 	$20,$00,21,7;MOTH

	.byte 	$20,$80,23,23			;FSPIDER

	.byte 	$00,$00,00,$00

;COL 80

	.byte 	$20,$80,27,23			;MOUSE
	
	.byte 	$20,$00,23,23			;FSPIDER

	.byte 	$16,$89,92,98			;Door to Bathroom.

	.byte 	$16,$95,92,96			;Door to Dining Room.

;COL 88

	.byte 	$20,$00,27,9			;MOUSE

	.byte 	$24,$00,$00,$00		;STOP RIGHT SCROLL


;These 32 are in the Bathroom/Dining Room.  ******************************

	.byte 	$23,$00,$00,$00		;STOP LEFT SCROLL
						
	.byte 	$20,$00,26,1			;SPIDER

;COL 96

	.byte 	$16,$95,60,86			;Door to Living Room.

	.byte 	$16,$89,60,84			;Door to Master Bedroom.

	.byte 	$00,$00,00,00

	.byte 	$20,$80,21,16			;MOTH


;COL 104

	.byte 	$20,$00,27,9			;MOUSE

	.byte 	$00,$00,00,0
		
	.byte 	$20,$80,27,9			;MOUSE

	.byte 	$20,$80,21,14			;MOTH

;COL 112

	.byte 	$00,$00,00,$00

	.byte 	$20,$80,21,20			;MOTH

	.byte 	$00,$00,00,$00

	.byte 	$16,$95,124,128		;Door to Kitchen.

;COL 120

	.byte 	$00,$00,$00,$00

	.byte 	$24,$00,$00,$00		;STOP RIGHT SCROLL

;These 32 are in the Second Bedroom/Kitchen. ******************************
					
	.byte 	$23,$00,$00,$00		;STOP LEFT SCROLL

	.byte 	$20,$00,24,15			;BBEE


;COL 128

	.byte 	$16,$95,92,118		;Door to Dining Room.

	.byte 	$00,$00,00,0	

	.byte 	$20,$00,21,3			;MOTH

	.byte 	$00,$00,$00,$00

;COL 136

	.byte 	$20,$80,24,17			;BBEE

	.byte 	$20,$80,27,23			;MOUSE

	.byte 	$20,$00,24,13			;BBEE

	.byte 	$20,$80,21,0			;MOTH


;COL 144

	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,24,19

	.byte 	$16,$89,0,28			;DOOR TO MAIN HALL

	.byte 	$16,$95,0,24			;DOOR TO MAIN HALL

;COL 152

	.byte 	$00,$00,00,00

	.byte 	$24,$00,00,00			;STOP RIGHT SCROLL

;These 32 are in the Secondary Hall. ***************************************

	.byte 	$23,$00,$00,$00		;STOP LEFT SCROLL

	.byte 	$20,$00,21,5			;MOTH

;COL 160

	.byte 	$16,$95,24,30			;Door to Main Hall.

	.byte 	$16,$89,188,194		;Door to Attic.

	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,24,14			;BBEE

;COL 168

	.byte 	$16,$95,188,192		;Door to Garage.

	.byte 	$3B,$56,108,$01		;STAIR COMMAND

	.byte 	$20,$80,21,9			;MOTH

	.byte 	$20,$00,24,22			;BBEE

;COL 176

	.byte 	$20,$00,29,23			;BBEE

	.byte 	$20,$00,21,2			;MOTH

	.byte 	$16,$95,220,226		;Door to Basement.

        .byte      $3B,$8A,108,$01              ;STAIR COMMAND

;COL 184

	.byte 	$00,$00,00,$00

	.byte 	$24,$00,$00,$00		;STOP LEFT SCROLL

;These 32 are in the Attic/Garage. *****************************************

	.byte 	$23,$00,$00,$00		;STOP RIGHT SCROLL

	.byte 	$20,$00,26,1			;SPIDER

;COL 192

	.byte 	$16,$95,156,168		;Door to Secondary Hall.

	.byte 	$16,$89,156,162		;Door to Secondary Hall.

	.byte 	$20,$00,26,7			;SPIDER

	.byte 	$20,$80,21,14			;MOTH


;COL 200

	.byte 	$00,$00,00,0

	.byte 	$20,$80,27,22			;MOUSE

	.byte 	$00,$00,0,$00

	.byte 	$00,$00,0,$00

;COL 208
	.byte 	$20,$80,26,4			;SPIDER

	.byte 	$20,$00,27,22			;MOUSE

	.byte 	$00,$00,00,00	

	.byte 	$20,$80,27,23			;MOUSE


;COL 216
	.byte 	$20,$00,23,9			;FSPIDER

	.byte 	$24,0,0,0			;STOP RIGHT SCROLL

;These 32 are in the Basement. *********************************************

	.byte 	$23,0,0,0			;STOP LEFT SCROLL  	  
			      					
	.byte 	$20,$80,26,15			;SPIDER	
							
;COL 224
	.byte 	$00,$00,0,$00
							
	.byte 	$16,$89,156,180		;Door to Secondary Hall.
								
	.byte 	$20,$80,26,14			;SPIDER			
								
        .byte      $3B,$CA,108,1                 ;DOWN THE STEPS
								
;COL 232
	.byte 	$00,$00,00,00

	.byte 	$00,$00,00,00

	.byte 	$00,$00,00,00					

	.byte 	$00,$00,0,0					

;COL 240
	.byte 	$20,$80,27,8			;MOUSE		
								
        .byte      $3B,22,108,1                   ;UP THE STEPS   
						
	.byte 	$00,$00,00,00					
								
	.byte 	$20,$00,21,3			;MOTH		
								
;COL 248
	.byte 	$20,$80,29,22			;RAT

	.byte 	$00,00,00,0			;MOUSE


HOTELT:

;COL 0
	.byte 	$20,$80,73,$04		;LAUNCH DRAGONFLY

	.byte 	$20,$80,48,$04		;LAUNCH BMEDFLY

	.byte 	$20,$80,51,$05		;LAUNCH BMOSQUITO

	.byte 	$20,$80,51,$01		;LAUNCH BMOSQUITO


;COL 8
	.byte 	$20,$80,51,$01		;LAUNCH BMOSQUITO

	.byte 	$20,$80,49,$08		;LAUNCH BAFBEE

	.byte 	$20,$80,49,$14		;LAUNCH BAFBEE

	.byte 	$00,$00,$00,$00

;COL 16
	.byte 	$20,$00,27,21			;LAUNCH BMOUSE

	.byte 	$20,$80,51,$04		;LAUNCH BMOSQUITO

	.byte 	$20,$80,49,$10		;LAUNCH BAFBEE

	.byte 	$00,$00,$00,$00

;COL 24
	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,51,$03		;LAUNCH BMOSQUITO

	.byte 	$20,$80,49,$02		;LAUNCH BAFBEE


;COL 32
	.byte 	$20,$80,49,$10		;LAUNCH BAFBEE

	.byte 	$20,$80,49,$10		;LAUNCH BAFBEE

	.byte 	$97,$06,$01,$01

	.byte 	$20,$80,49,$10		;LAUNCH BAFBEE


;COL 40
	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,27,$09		;LAUNCH BMOUSE

	.byte 	$20,$80,45,20			;LAUNCH GBUG

	.byte 	$00,$00,$00,$00

;COL 48
	.byte 	$00,$00,$00,$00

	.byte 	$3C,$80,0,1			;ELEVATOR

	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,45,9			;LAUNCH GBUG


;COL 56
	.byte 	$20,$80,50,06			;LAUNCH VBEE

	.byte 	$00,$00,$00,$00

	.byte 	$16,$95,-1,68			;LOBBY DOOR

	.byte 	$00,$00,$00,$00


;COL 64
	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,27,$0A		;LAUNCH BMOUSE

	.byte 	$16,$95,-1,60			;KITCHEN DOOR

	.byte 	$00,$00,$00,$00


;COL 72
	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,44,20			;LAUNCH BBEETLE

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

;COL 80
	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,44,20			;LAUNCH BBEETLE

	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,50,17			;LAUNCH VBEE

;COL 88
	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,50,04			;LAUNCH VBEE

	.byte 	$00,$00,$00,$00

	.byte 	$24,$00,$00,$00

;COL 96
	.byte 	$23,$00,$00,$00

	.byte 	$20,$00,50,07			;LAUNCH VBEE

	.byte 	$16,$95,128,132		;DOOR DOWNSTAIRS HALLWAY

	.byte 	$16,$89,128,140		;LEFT UPSTAIRS HALLWAY

;COL 104
	.byte 	$00,$00,$00,00

	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,48,04			;LAUNCH BMEDFLY

	.byte 	$16,$95,128,156		;RIGHT BOTTOMSTAIRS HALLWAY

;COL 112
	.byte 	$16,$89,128,146		;RIGHT UPSTARTS HALLWAY

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,50,17			;LAUNCH VBEE

;COL 120
	.byte 	$3C,$80,$00,$01

	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,50,11			;LAUNCH VBEE

	.byte 	$24,$00,$00,$00

;COL 128
	.byte 	$23,$00,$00,$00

	.byte 	$20,$00,50,15			;LAUNCH VBEE

	.byte 	$16,$95,96,100		;LEFTMOST LOWER ROOM

	.byte 	$20,$00,44,20			;LAUNCH BBEETLE


;COL 136
	.byte 	$20,$00,27,9			;LAUNCH BMOUSE

	.byte 	$20,$00,48,16			;LAUNCH BMEDFLY

	.byte 	$16,$89,96,102		;LEFTMOST UPPER ROOM

	.byte 	$00,$00,$00,$00

;COL 144
	.byte 	$20,$00,48,02			;LAUNCH BMEDFLY

	.byte 	$16,$89,96,112		;UPPER RIGHT ROOM

	.byte 	$20,$00,48,02			;LAUNCH BMEDFLY

	.byte 	$20,$80,50,16			;LAUNCH VBEE

;COL 152
	.byte 	$20,$80,50,03			;LAUNCH VBEE

	.byte 	$00,$00,$00,$00

	.byte 	$16,$95,96,110		;LOWER RIGHT ROOM

	.byte 	$24,0,0,0

;COL 160
	.byte 	$23,0,0,0

	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,27,4			;MOUSE

	.byte 	$00,$00,$00,$00

;COL 168
	.byte 	$20,$80,47,4			;SCORP

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,54,$08		;LAUNCH BBUG

;COL 176
	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,54,$03		;LAUNCH BBUG

	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,54,$02		;LAUNCH BBUG

;COL 184
	.byte 	$00,$00,$00,$00

	.byte 	$3C,$80,0,1			;ELEVATOR

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

WARE1:

; First 96 wide room.
;COL 0
	.byte 	$20,$00,35,$03		;LAUNCH MEDFLY

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,34,$12		;LAUNCH GBUG


;COL 8
	.byte 	$20,$00,37,$04		;LAUNCH WASP

	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,7,$11		;BEETLE

	.byte 	$00,$00,$00,$00


;COL 16
	.byte 	$20,$00,35,$10		;LAUNCH MEDFLY

	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,35,$0B		;LAUNCH MEDFLY

	.byte 	$20,$00,34,18			;LAUNCH GBUG


;COL 24
	.byte 	$20,$00,7,19			;LAUNCH GBUG

	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,35,$02		;LAUNCH MEDFLY

	.byte 	$20,$00,38,$04		;LAUNCH SCORP   10 BUGS 
;MARK 32
;COL 32
	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,38,21			;LAUNCH SCORP

	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,$07,19		;Launch Beetle.


;COL 40
	.byte 	$00,$00,$00,$00

	.byte 	$21,$00,71,12			;LAUNCH DROP

	.byte 	$20,$80,37,$06		;LAUNCH WASP

	.byte 	$20,$00,71,18			;LAUNCH DROP


;COL 48
	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,35,$10		;LAUNCH MEDFLY

	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,37,$02		;LAUNCH WASP

;COL 56
	.byte 	$00,$00,00,00

	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,$07,19		;Launch Beetle.

	.byte 	$20,$00,35,$03		;LAUNCH MEDFLY	  16 BUGS

;MARK 64
;COL 64
	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,7,14			;LAUNCH GBUG

	.byte 	$20,$00,35,18			;LAUNCH MEDFLY

	.byte 	$00,$00,$00,$00


;COL 72

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,7,$12		;LAUNCH GBUG

	.byte 	$00,$00,$00,$00


;COL 80
	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,00,$00

	.byte 	$00,$00,$00,$00


;COL 88
	.byte 	$00,$00,00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$2C,$80,192,1*8
;MARK 96
; Second 96 wide room.	      
;COL 96
	.byte 	$2C,$80,220,30*8-1-2*8

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00
;COL 104

	.byte 	$00,$00,$00,0

	.byte 	$00,$00,00,0		

	.byte 	$20,$00,41,13			;LAUNCH WORM

	.byte 	$00,$00,$00,$00


;COL 112
	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,41,$8		;LAUNCH WORM

	.byte 	$00,$00,00,00

	.byte 	$21,$00,76,$0C		;LAUNCH PLATFORM (CASE)


;COL 120
	.byte 	$20,$00,41,21			;LAUNCH WORM

	.byte 	$21,$00,76,$0C		;LAUNCH PLATFORM (CASE)

	.byte 	$21,$00,76,$0C		;LAUNCH PLATFORM (CASE)

	.byte 	$00,$00,$00,$00		;23 BUGS

;MARK 128
;COL 128
	.byte 	$21,$00,76,$0C		;LAUNCH PLATFORM (CASE)

	.byte 	$20,$00,34,21			;LAUNCH GBUG

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00


;COL 136
	.byte 	$20,$80,7,8			;BEETLE

	.byte 	$20,$00,34,21			;LAUNCH GBUG

	.byte 	$00,$00,00,00	

	.byte 	$20,$80,7,10			;BEETLE


;COL 144
	.byte 	$20,$00,34,21			;LAUNCH GBUG

	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,34,21			;LAUNCH GBUG

	.byte 	$00,$00,$00,$00


;COL 152
	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,34,17			;LAUNCH GBUG


;COL 160
	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,34,19			;LAUNCH GBUG

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00


;COL 168
	.byte 	$20,$00,34,15			;LAUNCH GBUG

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00


;COL 176
	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,34,21			;LAUNCH GBUG

	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,34,21			;LAUNCH GBUG


;COL 184
	.byte 	$21,$00,6,16			;LAUNCH CONVEYOR DEATH

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

; Separate 28 wide room.
;COL 192
	.byte 	$2C,$80,64,30*8-1-2*8

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

;COL 200
	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,34,22			;LAUNCH GBUG

	.byte 	$00,$00,$00,$00


;COL 208
	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,34,22			;LAUNCH GBUG

	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,38,22			;LAUNCH SCORP


;COL 216
	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,35,3			;LAUNCH MEDFLY

	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,38,20			;LAUNCH SCORP


;COL 224
	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00


;COL 232
	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,34,19			;LAUNCH GBUG
							    ;40 BUGS
	.byte 	$00,$00,$00,$00

	.byte 	$21,$00,19,$10		;ELEVATOR


;COL 240
	.byte 	$20,$00,35,$09		;LAUNCH MEDFLY

	.byte 	$20,$00,38,$12		;LAUNCH SCORP

	.byte 	$20,$00,34,20			;LAUNCH GBUG

	.byte 	$00,$00,$00,$00


;COL 248
	.byte 	$00,$00,$00,$00

	.byte 	$2C,$80,96,1*8


HOUSE2:

;COL 0
	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,22,22			;LAUNCH ANT

	.byte 	$20,$80,21,$08		;LAUNCH MOTH

	.byte 	$00,$00,$00,$00

;COL 8
	.byte 	$20,$00,25,23			;LAUNCH FANT

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,00,00		

	.byte 	$20,$00,23,20			;LAUNCH FSPIDER

;COL 16
	.byte 	$16,$95,156,162		;Door to Secondary Hall.

	.byte 	$16,$89,124,148		;Door to Small Bedroom.

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,00,00	

;COL 24
	.byte 	$16,$95,60,66			;Door to Master Bedroom.

	.byte 	$20,$00,21,$08		;LAUNCH MOTH

	.byte 	$16,$89,188,194		;Door to Attic.

	.byte 	$16,$95,220,226		;Door to Basement.

;COL 32
	.byte 	$3B,$56,104,$01		;STAIR COMMAND

	.byte 	$00,$00,00,00	

	.byte 	$20,$80,21,$08		;MOTH

	.byte 	$20,$00,23,20			;FSPIDER

;COL 40
	.byte 	$20,$00,21,$08		;MOTH

	.byte 	$00,$00,$00,$00

        .byte      $3B,$8A,104,$01              ;STAIR COMMAND

	.byte 	$20,$80,21,$08		;MOTH


;COL 48
	.byte 	$20,$80,23,20			;FSPIDER

	.byte 	$20,$00,24,18			;BBEE

	.byte 	$20,$80,72,8			;FLY

	.byte 	$20,$80,24,20			;BBEE

;COL 56
	.byte 	$21,$00,75,4			;HIVE!!

	.byte 	$24,$00,$00,$00

;These 32 are in the Master Bedroom/Living Room. ***************************

	.byte 	$23,$00,$00,$00

	.byte 	$20,$00,21,03			;MOTH

;COL 64
	.byte 	$16,$95,92,118		;Door to Dining Room.

	.byte 	$16,$89,0,24			;Door to Main Hall.

	.byte 	$20,$80,21,3			;MOTH

	.byte 	$20,$00,21,6			;MOTH

;COL 72
	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,21,$06		;MOTH

	.byte 	$20,$00,21,2			;MOTH

	.byte 	$20,$00,30,22			;BSPIDER

;COL 80
	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,21,$08		;LAUNCH MOTH

	.byte 	$16,$89,92,98			;Door to Bathroom.

	.byte 	$16,$95,156,180		;Door to Secondary Hall.

;COL 88
	.byte 	$20,$80,23,20			;FSPIDER

	.byte 	$24,$00,$00,$00

;These 32 are in the Bathroom/Dining Room. ********************************

	.byte 	$23,$00,$00,$00

	.byte 	$20,$80,23,20			;LAUNCH FSPIDER

;COL 96
	.byte 	$16,$95,156,168		;Door to Secondary Hall.

	.byte 	$16,$89,60,84			;Door to Master Bedroom.

	.byte 	$20,$80,72,21			;FLY

	.byte 	$20,$80,21,05			;MOTH

;COL 104
	.byte 	$00,$00,00,00	

	.byte 	$00,$00,00,00	

	.byte 	$20,$00,25,9			;FANT

	.byte 	$20,$00,72,20			;FLY

;COL 112
	.byte 	$20,$00,30,22			;BSPIDER

	.byte 	$20,$80,72,16			;FLY

	.byte 	$00,$00,00,00

	.byte 	$16,$95,60,64			;Door to Living Room.

;COL 120
	.byte 	$20,$80,72,18			;FLY

	.byte 	$24,$00,00,$00

;These 32 are in the Second Bedroom/Kitchen. ********************************

	.byte 	$23,$00,$00,$00

	.byte 	$20,$80,21,8			;LAUNCH MOTH

;COL 128
	.byte 	$16,$95,156,160		;Door to Secondary Hall.

	.byte 	$20,$80,22,20			;ANT

	.byte 	$00,$00,00,00

	.byte 	$20,$80,21,8			;MOTH

;COL 136
	.byte 	$20,$80,22,20			;ANT

	.byte 	$20,$80,72,8			;FLY

	.byte 	$00,$00,00,00	

	.byte 	$20,$80,21,8			;MOTH

;COL 144
	.byte 	$20,$80,25,20			;FANT

	.byte 	$00,$00,00,00

	.byte 	$16,$89,0,18			;Door to Main Hall.

	.byte 	$16,$95,188,192		;Door to Garage.

;COL 152

	.byte 	$20,$80,25,20			;FANT

	.byte 	$24,$00,$00,$00

;These 32 are in the Secondary Hall. ****************************************

	.byte 	$23,$00,$00,$00

	.byte 	$20,$80,22,20			;LAUNCH ANT


;COL 160
	.byte 	$16,$95,124,128		;Door to Kitchen.

	.byte 	$16,$89,0,16			;Door to Main Hall.

	.byte 	$20,$0,72,8			;FLY

	.byte 	$20,$80,22,20			;ANT

;COL 168
	.byte 	$16,$95,92,96			;Door to Dining Room.

	.byte 	$3B,$56,108,$01		;STAIR COMMAND

	.byte 	$20,$80,22,20			;ANT

	.byte 	$20,$80,22,20			;ANT

;COL 176
	.byte 	$20,$80,72,4			;FLY

	.byte 	$00,$00,$00,$00

	.byte 	$16,$95,60,86			;Door to Living Room.

        .byte      $3B,$8A,108,$01              ;STAIR COMMAND

;COL 184
	.byte 	$00,$00,$00,$00

	.byte 	$24,$00,$00,$00

;These 32 are in the Attic/Garage. ****************************************

	.byte 	$23,$00,$00,$00

	.byte 	$20,$80,26,1			;SPIDER

;COL 192
	.byte 	$16,$95,124,150		;Door to Kitchen.

	.byte 	$16,$89,-1,28			;Door to Main Hall.

	.byte 	$20,$80,26,6			;SPIDER

	.byte 	$00,$00,00,0	

;COL 200
	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,25,20			;FANT

	.byte 	$20,$00,25,23			;FANT

	.byte 	$00,$00,$00,$00

;COL 208
	.byte 	$20,$00,26,5			;SPIDER
		
	.byte 	$20,$80,25,23			;FANT

	.byte 	$20,$00,29,22			;RAT

	.byte 	$20,$80,26,8			;SPIDER

;COL 216
	.byte 	$22,$80,26,5			;SPIDER

	.byte 	$24,$00,$00,$00
;These 32 are in the Basement. **********************************************

	.byte 	$23,$00,$00,$00

	.byte 	$00,$00,00,00

;COL 224
	.byte 	$00,$00,$00,$00

	.byte 	$16,$89,0,30			;Door to Main Hall.

	.byte 	$20,$00,29,20			;FSPIDER

        .byte      $3B,$CA,108,1                 ;DOWN THE STEPS

;COL 232
	.byte 	$00,$00,00,00	

	.byte 	$00,$00,00,00

	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,27,9			;MOUSE

;COL 240
	.byte 	$00,$00,00,00

        .byte      $3B,22,108,$01                ;STAIR COMMAND

	.byte 	$00,$00,00,00

	.byte 	$20,$80,29,21			;RAT

;COL 248
	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,00,00	


SWAMPT:

;COL 0
	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,$0E,$0A		;GNAT

	.byte 	$20,$00,$1,$0A		;GNAT

	.byte 	$00,$00,$00,00		


;COL 8
	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,$0F,$13		;GNAT II

	.byte 	$20,$00,$0E,$12		;GNAT

	.byte 	$00,$00,$00,$00


;COL 16


	.byte 	$20,$00,$0A,$10		;LAUNCH MOSQUITO II

	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,$0A,$11		;LAUNCH MOSQUITO II

	.byte 	$20,$00,$0C,$04		;LAUNCH FLY II


;COL 24
	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,$0A,$14		;Launch Mosquito II.

	.byte 	$20,$00,$0D,$12		;Launch Fly I.

	.byte 	$00,$00,$00,$00

;COL 32
	.byte 	$20,$00,$1,$0A		;GNATC

	.byte 	$20,$00,$0D,$12		;Launch Fly III.

	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,$0C,$12		;Launch Fly II.

;COL 40
	.byte 	$20,$00,$0F,$0F		;LAUNCH GNAT II

	.byte 	$20,$00,$1,$0A		;GNATC

	.byte 	$20,$00,$0D,$05		;LAUNCH FLY I

	.byte 	$00,$00,$00,$00

;COL 48
	.byte 	$20,$00,$0D,$0A		;LAUNCH FLY I

	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,$0D,$10		;LAUNCH FLY III

	.byte 	$20,$00,$0E,$0A		;LAUNCH GNAT


;COL 56
	.byte 	$20,$00,$1,$10		;GnatC.

	.byte 	$20,$00,$0F,$14		;Launch Gnat II.

	.byte 	$20,$00,$1,$13		;GnatC

	.byte 	$20,$00,$0D,$03		;LAUNCH FLY III



;COL 64
	.byte 	$20,$00,$0A,$14		;Launch Mosquito

	.byte 	$20,$00,$0D,$0A		;Launch Fly1

	.byte 	$20,$00,$0A,$0F		;Launch Mosquito

	.byte 	$20,$00,$1,$13		;GnatC

;COL 72
	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,$0D,$0F		;LAUNCH FLY I

	.byte 	$20,$00,$0F,$02		;LAUNCH GNAT

	.byte 	$20,$80,$1,$10		;GNATC


;COL 80
	.byte 	$20,$00,$0C,$04		;LAUNCH FLY I

	.byte 	$20,$00,$0A,$05		;LAUNCH MOSQUITO II

	.byte 	$20,$00,$0D,$13		;LAUNCH GNAT II

	.byte 	$20,$00,$0A,$05		;LAUNCH MOSQUITO

;COL 88
	.byte 	$20,$00,$0A,$03		;LAUNCH MOSQUITO II

	.byte 	$20,$00,$1,$13		;GnatC

	.byte 	$20,$00,$0A,$04		;LAUNCH MOSQUITO II

	.byte 	$20,$00,$0A,$07		;LAUNCH MOSQUITO II

;COL 96
	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,$0A,$0A		;LAUNCH MOSQUITO II

	.byte 	$20,$00,$1,13		;GnatC

	.byte 	$20,$00,$0A,$0C		;LAUNCH MOSQUITO II


;COL 104

	.byte 	$20,$00,$0A,$14		;Launch Mosquito

	.byte 	$20,$00,$0D,$0A		;Launch Fly1

	.byte 	$20,$00,$0A,$0F		;Launch Mosquito

	.byte 	$20,$00,$1,$13		;GnatC

;COL 112
	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,$0D,$10		;LAUNCH FLY I

	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,$0A,$09		;LAUNCH MOSQUITO


;COL 120
	.byte 	$20,$00,$1,$10		;GNATC

	.byte 	$20,$00,$0D,$0A		;LAUNCH FLY I

	.byte 	$20,$00,$0E,$13		;GNAT

	.byte 	$20,$00,$1,$13		;GnatC

;COL 128
	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,$0A,$10		;LAUNCH MOSQUITO

	.byte 	$20,$00,$0C,$12		;LAUNCH FLY II

	.byte 	$20,$00,$0F,$05		;LAUNCH GNAT II

;COL 136
	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,$0F,$0F		;LAUNCH GNAT II

	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,$0C,$08		;LAUNCH FLY II

;COL 144
	.byte 	$20,$00,$0A,$05		;LAUNCH MOSQUITO

	.byte 	$20,$00,$0D,$0C		;LAUNCH FLY III

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

;COL 152

	.byte 	$20,$00,$0F,$07		;LAUNCH GNAT II

	.byte 	$20,$00,$0C,$14		;LAUNCH GNAT

	.byte 	$20,$00,$0A,$05		;LAUNCH MOSQUITO

	.byte 	$20,$00,$1,20		;GnatC

;COL 160
	.byte 	$20,$00,$1,3			;GnatC

	.byte 	$20,$00,$0A,$0A		;LAUNCH MOSQUITO II

	.byte 	$20,$00,$0D,$07		;LAUNCH FLY III

	.byte 	$00,$00,$00,$00

;COL 168
	.byte 	$20,$00,$0A,$05		;LAUNCH MOSQUITO II

	.byte 	$20,$00,$0D,$10		;LAUNCH FLY III

	.byte 	$20,$00,$0F,$15		;LAUNCH GNAT II

	.byte 	$20,$00,$0A,$10		;LAUNCH MOSQUITO II

;COL 176
	.byte 	$20,$00,$1,3			;GnatC

	.byte 	$20,$00,$0F,$0F		;LAUNCH GNAT II

	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,$1,3			;GnatC


;COL 184
	.byte 	$20,$00,$0A,$13		;MOSQUITO

	.byte 	$20,$00,$0A,$14		;MOSQUITOII

	.byte 	$20,$00,$1,3			;GnatC

	.byte 	$20,$00,$0A,$10		;MOSQUITO II


WARE2:

;COL 0
	.byte 	$00,$00,$00,$00

	.byte 	$21,$00,71,$02		;LAUNCH DROP

	.byte 	$21,$00,74,2			;LAUNCH CED BUG!

	.byte 	$20,$80,7,15			;BEETLE


;COL 8
	.byte 	$20,$80,7,15			;BEETLE

	.byte 	$20,$80,37,2			;WASP

	.byte 	$20,$80,35,2			;MEDFLY

	.byte 	$20,$80,7,17			;BEETLE


;COL 16
	.byte 	$20,$80,35,$02		;MEDFLY

	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,35,$03		;MEDFLY

	.byte 	$20,$80,35,$02		;MEDFLY


;COL 24
	.byte 	$20,$80,37,$02		;WASP

	.byte 	$20,$80,35,$03		;MEDFLY

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00


;COL 32
	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,35,3			;MEDFLY

	.byte 	$20,$80,35,12			;MEDFLY

	.byte 	$20,$80,35,13			;MEDFLY


;COL 40
	.byte 	$20,$80,35,2			;MEDFLY

	.byte 	$21,$00,71,12			;DROP

	.byte 	$20,$80,35,14			;MEDFLY

	.byte 	$20,$00,71,18			;DROP


;COL 48
	.byte 	$20,$80,35,$02		;MEDFLY

	.byte 	$20,$80,35,12			;MEDFLY

	.byte 	$20,$80,7,13			;BEETLE

	.byte 	$20,$80,7,13			;BEETLE	


;COL 56
	.byte 	$20,$80,37,$02		;WASP

	.byte 	$20,$80,37,$09		;WASP

	.byte 	$20,$80,7,15			;BEETLE

	.byte 	$20,$80,37,$09		;WASP


;COL 64
    
	.byte 	$20,$80,37,2		      ;LAUNCH WASP

	.byte 	$20,$80,37,2		      ;LAUNCH WASP

	.byte 	$20,$80,37,2		      ;LAUNCH WASP

	.byte 	$20,$80,37,2		      ;LAUNCH WASP


;COL 72
	.byte 	$00,$00,$00,$00

	.byte 	$20,$00,41,4		      ;LAUNCH WORM

	.byte 	$20,$80,38,15		      ;LAUNCH SCORP

	.byte 	$00,$00,$00,$00


;COL 80
	.byte 	$20,$80,41,$04	      ;LAUNCH WORM

	.byte 	$20,$80,38,14		      ;LAUNCH SCORP

	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,7,20		      ;LAUNCH SCORP


;COL 88
	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00


;COL 96
	.byte 	$20,$80,38,20		      ;LAUNCH SCORP

	.byte 	$20,$80,41,21		      ;LAUNCH WORM

	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,7,6		      ;LAUNCH WORM


;COL 104
	.byte 	$20,$80,41,21		      ;LAUNCH WORM

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,38,4		      ;LAUNCH SCORP


;COL 112

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$21,$80,76,$0C	      ;LAUNCH PLATFORM (CASE)


;COL 120
	.byte 	$20,$80,7,21			;BEATLE

	.byte 	$00,$00,$00,$00

	.byte 	$21,$80,76,$0C		;LAUNCH PLATFORM

	.byte 	$00,$00,$00,$00


;COL 128
	.byte 	$21,$80,76,$0C	      ;LAUNCH PLATFORM (CASE)

	.byte 	$20,$80,34,21		      ;LAUNCH GBUG

	.byte 	$20,$80,34,21		      ;LAUNCH GBUG

	.byte 	$00,$00,$00,$00


;COL 136
	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,34,21		      ;LAUNCH GBUG

	.byte 	$20,$80,34,21		      ;LAUNCH GBUG

	.byte 	$00,$00,$00,$00


;COL 144
	.byte 	$20,$80,38,21		      ;LAUNCH SCORP

	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,38,18		      ;LAUNCH SCORP

	.byte 	$00,$00,$00,$00


;COL 152
	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,00

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00


;COL 160
	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,34,19		      ;LAUNCH GBUG

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00


;COL 168
	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,34,15		      ;LAUNCH GBUG

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00


;COL 176

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,34,15		      ;LAUNCH GBUG

	.byte 	$00,$00,$00,$00


;COL 184
	.byte 	$21,$00,6,16			;LAUNCH CONVEYOR DEATH

	.byte 	$20,$80,35,$08		;LAUNCH MEDFLY

	.byte 	$20,$80,34,21			;LAUNCH GBUG

	.byte 	$00,$00,$00,$00


;COL 192
	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,00,00

	.byte 	$00,$00,$00,$00


;COL 200
	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,34,22		      ;LAUNCH GBUG

	.byte 	$20,$80,34,22		      ;LAUNCH GBUG

	.byte 	$20,$80,35,$04	      ;LAUNCH MEDFLY


;COL 208
	.byte 	$20,$80,38,22		      ;LAUNCH GBUG

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00


;COL 216
	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,34,22		      ;LAUNCH GBUG

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00


;COL 224
	.byte 	$20,$80,35,$04	      ;LAUNCH MEDFLY

	.byte 	$20,$80,34,21		      ;LAUNCH GBUG

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00


;COL 232
	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00

	.byte 	$21,$00,19,$10 	      ;ELEVATOR


;COL 240
	.byte 	$00,$00,$00,$00

	.byte 	$20,$80,34,21		      ;LAUNCH GBUG

	.byte 	$00,$00,$00,$00

	.byte 	$00,$00,$00,$00


;COL 248
	.byte 	$20,$80,34,20		      ;LAUNCH GBUG

	.byte 	$00,$00,$00,$00


WATERT:

;COL 0
	.byte 	$00,$00,$00,$00
	.byte 	$20,$80,57,19			;LAUNCH SHARK
	.byte 	$20,$00,61,$0C	 ;LAUNCH MUTFSH1
	.byte 	$20,$00,58,$05        ;LAUNCH JFISH
	.byte 	$00,$00,$00,$00
	.byte 	$20,$00,56,$0E	 ;LAUNCH SQUID
	.byte 	$20,$00,58,$05        ;LAUNCH JFISH
	.byte 	$00,$00,$00,$00

;COL 8
	.byte 	$20,$80,62,$0A	 ;LAUNCH MUTFSH2
	.byte 	$00,$00,$00,$00
	.byte 	$20,$80,62,$0A	 ;LAUNCH MUTFSH2
	.byte 	$00,$00,$00,$00
	.byte 	$20,$80,59,$0A		 ;LAUNCH SMFSH
 	.byte 	$20,$00,61,$0C	 ;LAUNCH MUTFSH1
	.byte 	$20,$00,58,$10      ;LAUNCH JFISH
	.byte 	$00,$00,$00,$00

;COL 16
  	.byte 	$21,$00,79,14          ;LAUNCH DEATH2
  	.byte 	$20,$80,59,10		 ;LAUNCH SMFSH
	.byte 	$20,$80,57,18		 ;LAUNCH SHARK
	.byte 	$20,$80,62,$0A	 ;LAUNCH MUTFSH2
	.byte 	$20,$80,62,$0A	 ;LAUNCH MUTFSH2
	.byte 	$20,$00,56,$0E	 ;LAUNCH SQUID
	.byte 	$20,$00,61,$0C	 ;LAUNCH MUTFSH1
	.byte 	$20,$00,58,05          ;LAUNCH JFISH

;COL 24
	.byte 	$00,$00,$00,$00
	.byte 	$20,$80,82,19		;LAUNCH SHARK
	.byte 	$00,$00,$00,$00
	.byte 	$20,$00,58,$08	;LAUNCH JFISH
	.byte 	$20,$80,59,19		;LAUNCH SMFSH
	.byte 	$20,$80,79,20		;DEATH2
	.byte 	$20,$00,61,$0C	 ;LAUNCH MUTFSH1
	.byte 	$20,$00,58,$10        ;LAUNCH JFISH

;COL 32
	.byte 	$00,$00,$00,$00
	.byte 	$20,$00,58,$05        ;LAUNCH JFISH
	.byte 	$00,$00,$00,$00
	.byte 	$20,$00,56,$0E	 ;LAUNCH SQUID
	.byte 	$20,$00,59,18          ;LAUNCH SMFSH
	.byte 	$20,$00,61,$0C	 ;LAUNCH MUTFSH1
	.byte 	$20,$00,59,17          ;LAUNCH SMFSH
	.byte 	$21,$00,78,20          ;LAUNCH DEATH1

;COL 40
	.byte 	$20,$00,58,$09        ;LAUNCH JFISH
	.byte 	$20,$00,58,$05        ;LAUNCH JFISH
	.byte 	$20,$80,62,$0A	 ;LAUNCH MUTFSH2
	.byte 	$20,$00,58,$07        ;LAUNCH JFISH
	.byte 	$20,$80,59,16	         ;LAUNCH SMFSH
	.byte 	$20,$00,60,$09        ;LAUNCH FISH
	.byte 	$20,$00,58,$05        ;LAUNCH JFISH
	.byte 	$21,$00,78,18          ;LAUNCH DEATH1

;COL 48
	.byte 	$20,$00,59,17          ;LAUNCH SMFSH
	.byte 	$20,$80,62,$0A	 ;LAUNCH MUTFSH2
	.byte 	$20,$00,59,18          ;LAUNCH SMFSH
	.byte 	$20,$80,59,19  	 ;LAUNCH SMFSH
	.byte 	$20,$00,58,$05        ;LAUNCH JFISH
	.byte 	$20,$00,56,$0E	 ;LAUNCH SQUID
	.byte 	$20,$00,59,17          ;LAUNCH SMFSH
	.byte 	$20,$80,57,18		 ;LAUNCH SHARK

;COL 56
	.byte 	$20,$00,60,$09        ;LAUNCH FISH
	.byte 	$21,$00,78,14          ;LAUNCH DEATH1
	.byte 	$20,$00,58,$05        ;LAUNCH JFISH
	.byte 	$20,$80,59,16	         ;LAUNCH SMFSH
	.byte 	$00,$00,$00,$00
	.byte 	$20,$80,62,$0A	 ;LAUNCH MUTFSH2
	.byte 	$20,$00,59,17          ;LAUNCH SMFSH
	.byte 	$20,$00,56,$0E	 ;LAUNCH SQUID


MOONT:

;COL 0
	.byte 	$00,$00,$00,$00
	.byte 	$00,$00,$00,$00
	.byte 	$20,$80,67,$12               ;LAUNCH MONST5
	.byte 	$00,$00,$00,$00
	.byte 	$20,$80,83,$14               ;LAUNCH BASE
	.byte 	$20,$80,66,$18               ;LAUNCH MONST4
	.byte 	$20,$80,67,$13		;LAUNCH MONST5
	.byte 	$00,$00,$00,$00

;COL 8
	.byte 	$20,$00,$10,$10		;Launch Monster I. (SNAKE)
	.byte 	$00,$00,$00,$00
	.byte 	$20,$80,65,$14               ;LAUNCH MONST3 (RED DUDE)
	.byte 	$20,$80,83,$14               ;LAUNCH BASE
	.byte 	$20,$00,$11,$12		;Launch Monster II. (SCORPION)
	.byte 	$00,$00,$00,$00
	.byte 	$20,$80,16,$14               ;LAUNCH MONSTI
	.byte 	$20,$00,$12,$12		;Launch Blob.

;COL 16
	.byte 	$00,$00,$00,$00
	.byte 	$20,$80,67,$14		;LAUNCH MONST5 (BALL)
	.byte 	$00,$00,$00,$00
	.byte 	$00,$00,$00,$00
	.byte 	$20,$80,83,$13		;LAUNCH BASE
	.byte 	$00,$00,$00,$00
	.byte 	$00,$00,$00,$00
	.byte 	$20,$80,67,$0B		;LAUNCH MONST5

;COL 24
	.byte 	$00,$00,$00,$00
	.byte 	$20,$80,67,$10		;LAUNCH MONST5
	.byte 	$20,$00,$11,$12		;Launch Monster II.
	.byte 	$20,$80,66,$20               ;LAUNCH MONST4
	.byte 	$20,$80,67,$05		;LAUNCH MONST5
	.byte 	$00,$00,$00,$00
	.byte 	$20,$00,18,$17               ;LAUNCH BLOBI
	.byte 	$20,$80,66,$14               ;LAUNCH MONST4

;COL 32
	.byte 	$20,$80,16,$14               ;LAUNCH MONSTI
	.byte 	$00,$00,$00,$00
	.byte 	$20,$00,18,$13               ;LAUNCH BLOBI
	.byte 	$20,$80,65,$14               ;LAUNCH MONST3
	.byte 	$20,$80,66,$16               ;LAUNCH MONST4
	.byte 	$20,$00,18,$14               ;LAUNCH BLOBI
	.byte 	$20,$80,66,$14               ;LAUNCH MONST4
	.byte 	$20,$00,$11,$12		;Launch Monster II.

;COL 40
	.byte 	$20,$80,65,$14               ;LAUNCH MONST3
	.byte 	$00,$00,$00,$00
	.byte 	$20,$00,18,$15               ;LAUNCH BLOBI
	.byte 	$00,$00,$00,$00
	.byte 	$00,$00,$00,$00
	.byte 	$20,$80,65,$16               ;LAUNCH MONST3
	.byte 	$00,$00,$00,$00
	.byte 	$20,$80,16,$14               ;LAUNCH MONSTI

;COL 48
	.byte 	$00,$00,$00,$00
	.byte 	$20,$80,16,$14               ;LAUNCH MONSTI
	.byte 	$20,$00,18,$16               ;LAUNCH BLOBI
	.byte 	$20,$80,65,$14               ;LAUNCH MONST3
	.byte 	$20,$80,83,$14               ;LAUNCH BASE
	.byte 	$20,$80,65,$19               ;LAUNCH MONST3
	.byte 	$00,$00,$00,$00
	.byte 	$20,$00,18,$16               ;LAUNCH BLOBI

;COL 56
	.byte 	$20,$00,$11,$12		;Launch Monster II.
	.byte 	$20,$00,$11,$11		;Launch Monster II.
	.byte 	$20,$00,$11,$10		;Launch Monster II.
	.byte 	$20,$00,$11,$15		;Launch Monster II.
	.byte 	$20,$00,$11,$12		;Launch Monster II.
	.byte 	$20,$00,$11,$14		;Launch Monster II.
	.byte 	$20,$80,65,$12               ;LAUNCH MONST3
	.byte 	$20,$00,18,$16               ;LAUNCH BLOBI


MNBASET:

;COL 0
	.byte 	$00,$00,$00,$00
	.byte 	$00,$00,$00,$00
	.byte 	$20,$00,18,04			;BLOBI
	.byte 	$20,$00,55,20			;MOONBEE
	.byte 	$1D,$C0+5,32,36
	.byte 	$20,$80,55,15			;MOONBEE
	.byte 	$1D,$C0+22,32,40
	.byte 	$00,$00,$00,$00

;COL 8
	.byte 	$20,$00,18,15			;BLOBI
	.byte 	$00,$00,$00,$00
	.byte 	$20,$80,55,10			;MOONBEE
	.byte 	$20,$00,70,20			;LAUNCH CRAW
	.byte 	$00,$00,00,00		
	.byte 	$00,$00,$00,$00
	.byte 	$20,$00,55,9			;MOONBEE
	.byte 	$21,$00,$13,12		;19 PLATFORM

;COL 16
	.byte 	$00,$00,00,0
	.byte 	$20,$80,55,9			;MOONBEE
	.byte 	$20,$80,68,9			;NEST
	.byte 	$00,$00,00,00		
	.byte 	$00,$00,00,00		
	.byte 	$20,$00,55,18			;MOONBEE
	.byte 	$20,$80,70,9			;CRAW
	.byte 	$00,$00,$00,$00

;COL 24
	.byte 	$00,$00,$00,$00
	.byte 	$00,$00,$00,$00
	.byte 	$1D,$C0+22,32,54
	.byte 	$00,$00,$00,$00
	.byte 	$1D,$C0+5,96,110
	.byte 	$00,$00,$00,$00
	.byte 	$20,$00,$68,13		;NEST
	.byte 	$24,$00,$00,$00

;COL 32
	.byte 	$23,$00,$00,$00
	.byte 	$20,$80,68,13			;NEST
	.byte 	$1D,$C0+22,96,124		;FOOD DOOR
	.byte 	$00,$00,00,00		
	.byte 	$1D,$C0+4,0,4			;TOP DOOR
	.byte 	$20,$80,55,02			;MOONBEE
	.byte 	$00,$00,$00,$00
	.byte 	$20,$80,68,20			;NEST

;COL 40
	.byte 	$1D,$C0+9,64,72
	.byte 	$20,$80,18,20			;BLOB
	.byte 	$1D,$C0+15,64,77
	.byte 	$00,$00,$00,$00
	.byte 	$20,$80,18,3			;BLOB
	.byte 	$00,$00,00,00		
	.byte 	$1D,$C0+10,64,92
	.byte 	$20,$00,68,15			;NEST

;COL 48
	.byte 	$20,$80,55,20			;MOONBEE
	.byte 	$00,$00,$00,$00
	.byte 	$1D,$C0+16,64,88
	.byte 	$20,$80,68,14			;NEST
	.byte 	$00,$00,00,00		
	.byte 	$00,$00,$00,$00
	.byte 	$1D,$C0+22,0,26
	.byte 	$00,$00,$00,$00

;COL 56
	.byte 	$00,$00,$00,$00
	.byte 	$20,$80,70,20			;CRAW
	.byte 	$00,$00,00,00		
	.byte 	$00,$00,$00,$00
	.byte 	$21,$00,0,14			;LAUNCH	KEYCARD
	.byte 	$00,$00,$00,$00
	.byte 	$20,$80,18,3			;BLOB
	.byte 	$24,$00,$00,$00

;COL 64
	.byte 	$23,$00,$00,$00
	.byte 	$20,$00,18,13			;BLOB
	.byte 	$00,$00,$00,$00
	.byte 	$20,$00,55,17			;MOONBEE
	.byte 	$1D,$E0+14,96,100
	.byte 	$00,$00,$00,$00
	.byte 	$1D,$C0+22,32,40
	.byte 	$20,$00,55,13			;MOONBEE

;COL 72
	.byte 	$1D,$C0+4,32,40
	.byte 	$00,$00,00,00
	.byte 	$20,$80,70,2			;CRAW
	.byte 	$00,$00,$00,$00
	.byte 	$20,$00,55,12			;MOONBEE
	.byte 	$1D,$C0+10,96,108
	.byte 	$20,$00,68,8			;NEST
	.byte 	$20,$00,18,13			;BLOB

;COL 80
	.byte 	$20,$80,68,9			;NEST
	.byte 	$00,$00,$00,$00
	.byte 	$00,$00,00,00		
	.byte 	$20,$80,55,9			;MOONBEE
	.byte 	$1D,$C0+4,32,40
	.byte 	$20,$00,68,20			;NEST
	.byte 	$00,$00,00,00		
	.byte 	$00,$00,00,00		

;COL 88
	.byte 	$1D,$C0+22,32,46
	.byte 	$20,$80,55,1			;MOONBEE
	.byte 	$00,$00,$00,$00
	.byte 	$20,$00,68,3			;NEST
	.byte 	$1D,$C0+14,32,50
	.byte 	$20,$80,70,9			;CRAW
	.byte 	$00,$00,$00,$00
	.byte 	$24,$00,$00,$00

;COL 96
	.byte 	$23,$00,$00,$00
	.byte 	$20,$00,55,3			;MOONBEE
	.byte 	$20,$80,68,9			;NEST
	.byte 	$00,$00,00,00		
	.byte 	$1D,$C0+22,64,68
	.byte 	$20,$00,68,3			;NEST
	.byte 	$00,$00,$00,$00
	.byte 	$00,$00,00,00			;CRAW

;COL 104
	.byte 	$00,$00,$00,00
	.byte 	$20,$80,68,2			;NEST
	.byte 	$00,$00,$00,00
	.byte 	$00,$00,$00,00
	.byte 	$1D,$C0+13,32,42
	.byte 	$00,$00,$00,$00
	.byte 	$1D,$C0+6,64,72
	.byte 	$00,$00,$00,$00

;COL 112
	.byte 	$1D,$C0+13,64,72
	.byte 	$00,$00,$00,$00
	.byte 	$20,$80,70,3			;CRAW
	.byte 	$00,$00,$00,$00
	.byte 	$00,$00,$00,00
	.byte 	$20,$80,70,4			;CRAW
	.byte 	$21,$80,80,17			;KRAT
	.byte 	$00,$00,$00,$00

;COL 120
	.byte 	$20,$80,70,02			;CRAW
	.byte 	$20,$80,70,9			;CRAW
	.byte 	$00,$00,$00,$00
	.byte 	$00,$00,$00,$00
	.byte 	$1D,$C0+13,32,34
	.byte 	$00,$00,$00,$00
	.byte 	$00,$00,$00,$00
	.byte 	$00,$00,$00,$00
